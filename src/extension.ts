'use strict';

import * as vscode from 'vscode'

class MTAFunction {
	side: number;
	label: string;
	args: string[];
	returnType: string;
	description: string;
	argDescs: { [key: string]: string };

	/**
	 * 
	 * @param side 0 For Server-Side, 1 For Client-Side
	 * @param label The actual function name
	 * @param description The description of the function
	 * @param returnType The return type of the function
	 * @param args An array containing all arguments and their types
	 * @param argDescs A dictionary containing all arguments and their description (Key argument, Value description)
	 */
	constructor(side: number, label: string, description: string, returnType: string, args: string[], argDescs: { [key: string]: string }) {
		this.side = side;
		this.label = label;
		this.args = args;
		this.returnType = returnType;
		this.description = description;
		this.argDescs = argDescs;
	}

	getMarkdown(): vscode.MarkdownString {
		let str = new vscode.MarkdownString();
		str.appendMarkdown("**" + this.label + "** - *" + (this.side == 1 ? "Client-Side" : "Server-Side") + "*\n\n" + this.description + "\n\n");
		str.appendCodeblock(this.returnType + " " + this.label + " ( " + this.args.join(", ") + " )", "mtalua");
		for (const key in this.argDescs) {
			if (this.argDescs.hasOwnProperty(key)) {
				const element = this.argDescs[key];
				str.appendMarkdown("- **" + key + "**: " + element + "\n");
			}
		}
		return str;
	}

	toCompletionItem(): vscode.CompletionItem {
		let item = new vscode.CompletionItem(this.label, vscode.CompletionItemKind.Function);
		item.documentation = this.getMarkdown();
		return item;
	}
}

export function activate(context: vscode.ExtensionContext) {
	vscode.languages.registerCompletionItemProvider('mtalua', {
		provideCompletionItems(document: vscode.TextDocument, position: vscode.Position, token: vscode.CancellationToken, context: vscode.CompletionContext) {
			return [
				/*new MTAFunction(0, "addAccount", "This function adds an account to the list of registered accounts of the current server.", "account", [
					"string name",
					"string pass",
					"bool allowCaseVariations = false"
				],
					{
						"name": "The name of the account you wish to make, this normally is the player's name.",
						"pass": "The password to set for this account for future logins.",
						"allowCaseVariations": "Whether the username is case sensitive (if this is set to true, usernames \"Bob\" and \"bob\" will refer to different accounts)",
					}
				).toCompletionItem(),
				new MTAFunction(0, "copyAccountData", "This function copies all of the data from one account to another.", "bool", [
					"account theAccount",
					"account fromAccount"
				],
					{
						"theAccount": "The account you wish to copy the data to.",
						"fromAccount": "The account you wish to copy the data from."
					}
				).toCompletionItem(),
				new MTAFunction(0, "getAccountData", "This function retrieves a string that has been stored using setAccountData. Data stored as account data is persistent across user's sessions and maps, unless they are logged into a guest account.", "string", [
					"account theAccount",
					"string key"
				], {
						"theAccount": "The account you wish to retrieve the data from.",
						"key": "The key under which the data is stored",
					}
				).toCompletionItem(),
				new MTAFunction(0, "getAccountName", "This function retrieves the name of an account.", "string", [
					"theAccount"
				], {
						"theAccount": "The account you wish to get the name of."
					}
				).toCompletionItem(),
				new MTAFunction(0, "getAccountPlayer", "This function returns the player element that is currently using a specified account, i.e. is logged into it. Only one player can use an account at a time.", "player", [
					"theAccount"
				], {
						"theAccount": "The account you wish to get the player of."
					}
				).toCompletionItem(),
				new MTAFunction(0, "getAccountsBySerial", "This function returns a table containing all accounts that were logged onto from specified serial. If the serial is empty string, it will return all accounts that were never logged onto.", "table", [
					"serial"
				], {
						"serial": "The serial to get accounts from"
					}
				).toCompletionItem(),
				new MTAFunction(0, "getAccountSerial", "This function returns the last serial that logged onto the specified account.", "string", [
					"theAccount"
				], {
						"theAccount": "The account to get serial from"
					}
				).toCompletionItem(),*/

				new MTAFunction(0, "copyAccountData", "This function copies all of the data from one account to another.", "bool", ["account theAccount", "account fromAccount"], {}).toCompletionItem(),
				new MTAFunction(0, "getAccountPlayer", "This function returns the player element that is currently using a specified account, i.e. is logged into it. Only one player can use an account at a time.", "player", ["account theAccount"], {}).toCompletionItem(),
				new MTAFunction(0, "getAccountData", "", "string", ["account theAccount", "string key"], {}).toCompletionItem(),
				new MTAFunction(0, "getLoadedModules", "This function returns all the currently loaded modules of the server.", "table", [""], {}).toCompletionItem(),
				new MTAFunction(0, "getModuleInfo", "This function returns information about the specified module.", "table", ["string moduleName"], {}).toCompletionItem(),
				new MTAFunction(0, "textDestroyTextItem", "This function destroys a textitem object.", "void", ["textitem theTextitem"], {}).toCompletionItem(),
				new MTAFunction(0, "removeRuleValue", "This function removes a set rule value that can be viewed by server browsers.", "bool", ["string key"], {}).toCompletionItem(),
				new MTAFunction(0, "getRuleValue", "This function gets a rule value. A rule value is a string that can be viewed by server browsers and used for filtering the server list.", "string", ["string key"], {}).toCompletionItem(),
				new MTAFunction(0, "addAccount", "This function adds an account to the list of registered accounts of the current server.", "account", ["string name", "string pass[", "bool allowCaseVariations = false]"], {}).toCompletionItem(),
				new MTAFunction(0, "getAccountSerial", "This function returns the last serial that logged onto the specified account.", "string", ["account theAccount"], {}).toCompletionItem(),
				new MTAFunction(0, "getAccounts", "This function returns a table over all the accounts that exist in the server internal.db file. (Note: accounts.xml is no longer used after version 1.0.4)", "table", [""], {}).toCompletionItem(),
				new MTAFunction(0, "getAccountName", "This function retrieves the name of an account.", "string", ["account theAccount"], {}).toCompletionItem(),
				new MTAFunction(0, "getAccountsBySerial", "This function returns a table containing all accounts that were logged onto from specified serial. If the serial is empty string, it will return all accounts that were never logged onto.", "table", ["string serial"], {}).toCompletionItem(),
				new MTAFunction(0, "getAccount", "This function returns an account for a specific user. This function checks if the account mentioned exists in the internal.db database file.", "account", ["string username", "[ string password ]"], {}).toCompletionItem(),
				new MTAFunction(0, "getAllAccountData", "This function returns a table containing all the user data for the account provided", "table", ["account theAccount"], {}).toCompletionItem(),
				new MTAFunction(0, "removeAccount", "This function is used to delete existing player accounts.", "bool", ["account theAccount"], {}).toCompletionItem(),
				new MTAFunction(0, "setAccountPassword", "This function sets the password of the specified account.", "bool", ["account theAccount", "string password[", "string passwordType=\"plaintext\"]"], {}).toCompletionItem(),
				new MTAFunction(0, "logOut", "This function logs the given player out of his current account.", "bool", ["player thePlayer"], {}).toCompletionItem(),
				new MTAFunction(0, "getPlayerAccount", "This function returns the specified player's account object.", "account", ["player thePlayer"], {}).toCompletionItem(),
				new MTAFunction(0, "aclReload", "This function reloads the ACL's and the ACL groups from the ACL XML file. All ACL and ACL group elements are invalid after a call to this and should not be used anymore.", "bool", [""], {}).toCompletionItem(),
				new MTAFunction(0, "setAccountData", "", "bool", ["account theAccount", "string key", "string value"], {}).toCompletionItem(),
				new MTAFunction(0, "aclList", "This function returns a list of all the ACLs.", "table", [""], {}).toCompletionItem(),
				new MTAFunction(0, "isGuestAccount", "This function checks to see if an account is a guest account. A guest account is an account automatically created for a user when they join the server and deleted when they quit or login to another account. Data stored in a guest account is not stored after the player has left the server. As a consequence, this function will check if a player is logged in or not.", "bool", ["account theAccount"], {}).toCompletionItem(),
				new MTAFunction(0, "logIn", "This functions logs the given player in to the given account. You need to provide the password needed to log into that account.", "bool", ["player thePlayer", "account theAccount", "string thePassword"], {}).toCompletionItem(),
				new MTAFunction(0, "getBanReason", "This function will return the ban reason of the specified ban.", "string", ["ban theBan"], {}).toCompletionItem(),
				new MTAFunction(0, "getBans", "This function will return a table containing all the bans present in the server's banlist.xml.This example lists every ban when somebody types \"/bans\". WARNING: This will spam chat (for the player that executed the command) if the server has a lot of bans.", "table", [""], {}).toCompletionItem(),
				new MTAFunction(0, "addBan", "This function will add a ban for the specified IP/username/serial to the server.", "ban", ["[ string IP", "string Username", "string Serial", "player responsibleElement", "string reason", "int seconds = 0 ]"], {}).toCompletionItem(),
				new MTAFunction(0, "aclSave", "The ACL XML file is automatically saved whenever the ACL is modified, but the automatic save can be delayed by up to 10 seconds for performance reasons. Calling this function will force an immediate save.", "bool", [""], {}).toCompletionItem(),
				new MTAFunction(0, "getBanUsername", "This function will return the username of the specified ban.", "string", ["ban theBan"], {}).toCompletionItem(),
				new MTAFunction(0, "getBanAdmin", "This function will return the responsible admin (nickname of the admin) of the specified ban.", "string", ["ban theBan"], {}).toCompletionItem(),
				new MTAFunction(0, "getBanSerial", "This function will return the serial of the specified ban.", "string", ["ban theBan"], {}).toCompletionItem(),
				new MTAFunction(0, "getBanTime", "This function will return the time the specified ban was created, in seconds.", "int", ["ban theBan"], {}).toCompletionItem(),
				new MTAFunction(0, "setBanReason", "This function sets the reason for the specified ban.", "bool", ["ban theBan", "string theReason"], {}).toCompletionItem(),
				new MTAFunction(0, "setBanNick", "This function sets a new nick for a ban.", "bool", ["ban theBan", "string theNick"], {}).toCompletionItem(),
				new MTAFunction(0, "getBanNick", "This function will return the nickname (nickname that the player had when he was banned) of the specified ban.", "string", ["ban theBan"], {}).toCompletionItem(),
				new MTAFunction(0, "getVehiclesLODDistance", "Returns the distance of vehicles LOD.", "float, float", [""], {}).toCompletionItem(),
				new MTAFunction(0, "isBan", "This function checks whether the passed value is valid ban or not.This example chechks if the passed argument is a ban or not.", "bool", ["ban theBan"], {}).toCompletionItem(),
				new MTAFunction(0, "reloadBans", "This function will reload the server ban list file.", "bool", [""], {}).toCompletionItem(),
				new MTAFunction(0, "getUnbanTime", "This function will return the unbanning time of the specified ban in seconds.", "int", ["ban theBan"], {}).toCompletionItem(),
				new MTAFunction(0, "getBanIP", "This function will return the IP of the specified ban.", "string", ["ban theBan"], {}).toCompletionItem(),
				new MTAFunction(0, "getGameType", "This function retrieves the current gametype as set by setGameType. The game type is displayed in the server browser next to the server's name.", "string", [""], {}).toCompletionItem(),
				new MTAFunction(0, "setGameType", "This function sets a string containing a name for the game type. This should be the game-mode that is active, for example \"Capture The Flag\" or \"Deathmatch\". This is then displayed in the server browser and external server browsers.", "bool", ["string gameType"], {}).toCompletionItem(),
				new MTAFunction(0, "setUnbanTime", "This function sets a new unban time of a given ban using unix timestamp (seconds since Jan 01 1970).", "bool", ["ban theBan", "int theTime"], {}).toCompletionItem(),
				new MTAFunction(0, "setPedAnalogControlState", "Sets an analog state of a specified ped's control, as if they pressed or released it.", "bool", ["ped thePed", "string control", "float state"], {}).toCompletionItem(),
				new MTAFunction(0, "setBanAdmin", "This function sets a new admin for a ban.", "bool", ["ban theBan", "string theAdmin"], {}).toCompletionItem(),
				new MTAFunction(0, "kickPlayer", "", "bool", ["player kickedPlayer", "[ player/string responsiblePlayer", "string reason = \"\" ]"], {}).toCompletionItem(),
				new MTAFunction(0, "removeBan", "This function will remove a specific ban.", "bool", ["ban theBan [", "player responsibleElement = nil ]"], {}).toCompletionItem(),
				new MTAFunction(0, "getMapName", "This function retrieves the current mapname as set by setMapName.", "string", [""], {}).toCompletionItem(),
				new MTAFunction(0, "resetVehicleIdleTime", "Resets the vehicle idle time", "bool", ["vehicle theVehicle"], {}).toCompletionItem(),
				new MTAFunction(0, "setElementVisibleTo", "", "bool", ["element theElement", "element visibleTo", "bool visible"], {}).toCompletionItem(),
				new MTAFunction(0, "banPlayer", "This function will ban the specified player by either IP, serial or username", "ban", ["player bannedPlayer", "[ bool IP = true", "bool Username = false", "bool Serial = false", "player/string responsiblePlayer = nil", "string reason = nil", "int seconds = 0 ]"], {}).toCompletionItem(),
				new MTAFunction(0, "spawnVehicle", "With this feature, we spawn vehicle", "bool", ["vehicle theVehicle", "float x", "float y", "float z [", "float rx", "float ry", "float rz ]"], {}).toCompletionItem(),
				new MTAFunction(0, "setRuleValue", "This function sets a rule value that can be viewed by server browsers.", "bool", ["string key", "string value"], {}).toCompletionItem(),
				new MTAFunction(0, "setMapName", "This function is used to set a map name that will be visible in the server browser. In practice you should generally rely on the mapmanager to do this for you.", "bool", ["string mapName"], {}).toCompletionItem(),
				new MTAFunction(0, "getInteriorSoundsEnabled", "This function checks to see if the music played by default in clubs is disabled or not.", "bool", [""], {}).toCompletionItem(),
				new MTAFunction(0, "executeSQLQuery", "This function executes an arbitrary SQL query and returns the result rows if there are any. It allows parameter binding for security (SQL injection is rendered impossible).", "table", ["string query [", "var param1 [", "var param2 ...]]"], {}).toCompletionItem(),
				new MTAFunction(0, "get", "This function gets a setting's value, or a group of settings' values, from the settings registry.", "var", ["string settingName"], {}).toCompletionItem(),
				new MTAFunction(0, "getServerPort", "This function retrieves the server's port.", "int", [""], {}).toCompletionItem(),
				new MTAFunction(0, "set", "This function is used to save arbitrary data under a certain name on the settings registry.", "bool", ["string settingName", "var value"], {}).toCompletionItem(),
				new MTAFunction(0, "getServerHttpPort", "This function retrieves the server's http port.", "int", [""], {}).toCompletionItem(),
				new MTAFunction(0, "getServerName", "This function retrieves the server's name.", "string", [""], {}).toCompletionItem(),
				new MTAFunction(0, "isElementVisibleTo", "This checks if an element is visible to a player. This does not check if the player can literally see the element, just that they are aware that it exists. Some so-called per-player elements are able to be visible only to some players, as such this checks if this is the case for a particular element/player combination.", "bool", ["element theElement", "element visibleTo"], {}).toCompletionItem(),
				new MTAFunction(0, "removeElementData", "This function removes the element data with the given key for that element. The element data removal is synced with all the clients.", "bool", ["element theElement", "string key"], {}).toCompletionItem(),
				new MTAFunction(0, "getServerPassword", "This function returns the current password required to join the server.", "string", [""], {}).toCompletionItem(),
				new MTAFunction(0, "clearElementVisibleTo", "This function clears any settings added by setElementVisibleTo and restores an element to its default visibility. This does not work with all entities - vehicles, players and objects are exempt. This is because these objects are required for accurate sync (they're physical objects). This function is particularily useful for changing the visibility of markers, radar blips and radar areas.", "bool", ["element theElement"], {}).toCompletionItem(),
				new MTAFunction(0, "cloneElement", "This function clones (creates an exact copy of) an already existing element. The root node, and player elements, cannot be cloned. If a player element is a child of an element that is cloned, it will be skipped, along with the elements that exist as a child to the player element.", "element", ["element theElement", "[ float xPos = 0", "float yPos = 0", "float zPos = 0", "bool cloneChildren = false ]"], {}).toCompletionItem(),
				new MTAFunction(0, "setElementSyncer", "This function can be used to change the syncer (player) of an element. The syncer is the player who is responsible for informing the server about the state of that element - it's position, orientation and other state information. The function can be also used to remove an element's syncer.", "bool", ["element theElement", "player thePlayer"], {}).toCompletionItem(),
				new MTAFunction(0, "textItemGetScale", "This function allows retrieval of the scale or size of a text item.", "float", ["textitem theTextitem"], {}).toCompletionItem(),
				new MTAFunction(0, "givePedJetPack", "This function is used to give a ped a jetpack, it won't work if the ped is in a vehicle.", "bool", ["ped thePed"], {}).toCompletionItem(),
				new MTAFunction(0, "createResource", "This function creates an new, empty resource. This creates a directory matching the name you specify on disk, then creates an empty meta.xml file with a <meta> element in it.", "resource", ["string resourceName [", "string organizationalDir ]"], {}).toCompletionItem(),
				new MTAFunction(0, "getResourceLastStartTime", "Used to check the last starting time and date of a resource", "int", ["resource theResource"], {}).toCompletionItem(),
				new MTAFunction(0, "addResourceConfig", "This function adds a new empty config file to an existing resource.", "xmlnode", ["string filePath", "[ string filetype = \"server\" ]"], {}).toCompletionItem(),
				new MTAFunction(0, "getResourceInfo", "This function retrieves the value of any attribute in a resource info tag.", "string", ["resource theResource", "string attribute"], {}).toCompletionItem(),
				new MTAFunction(0, "getResourceLoadTime", "Gets the date and time at which a resource was last loaded in the server.", "int", ["resource res"], {}).toCompletionItem(),
				new MTAFunction(0, "createTeam", "This function is for creating a new team, which can be used to group players. Players will not join the team until they are respawned.", "team", ["string teamName", "[int colorR = 255", "int colorG = 255", "int colorB = 255]"], {}).toCompletionItem(),
				new MTAFunction(0, "textItemGetPosition", "This function allows retrieval of the position of a text item.", "float float", ["textitem theTextItem"], {}).toCompletionItem(),
				new MTAFunction(0, "setTeamFriendlyFire", "This function sets the friendly fire value for the specified team.", "bool", ["team theTeam ", "bool friendlyFire"], {}).toCompletionItem(),
				new MTAFunction(0, "setPlayerTeam", "This function adds a player to an existing team. The player will automatically be removed from his current team if he's on one.", "bool", ["player thePlayer", "team theTeam"], {}).toCompletionItem(),
				new MTAFunction(0, "textItemGetText", "This function returns the current text of the specified textitem.", "string", ["textitem theTextitem"], {}).toCompletionItem(),
				new MTAFunction(0, "setTeamName", "This function is used to set a team's name.", "bool", ["team theTeam", "string newName"], {}).toCompletionItem(),
				new MTAFunction(0, "textItemGetColor", "This function allows you to retrieve the color of a text item.", "int int int int", ["textitem theTextItem"], {}).toCompletionItem(),
				new MTAFunction(0, "getAllElementData", "Returns a table of all element data of an element.", "table", ["element theElement"], {}).toCompletionItem(),
				new MTAFunction(0, "getElementByIndex", "This function returns an element of the specified type with the specified index.", "element", ["string theType", "int index"], {}).toCompletionItem(),
				new MTAFunction(0, "textCreateTextItem", "This function creates a text item. A text item represents a single area of text, much like a label does in standard GUI programming. A text item can only be seen by players if it is added to a textdisplay using textDisplayAddText. Each text item can be added to multiple displays, if need be.", "textitem", ["string text", "float x", "float y", "[string priority", "int red = 255", "int green = 255", "int blue = 255", "int alpha = 255", "float scale = 1", "string alignX = \"left\"", "string alignY = \"top\"", "int shadowAlpha = 0]"], {}).toCompletionItem(),
				new MTAFunction(0, "textItemGetPriority", "", "int", ["textitem textitemToCheck"], {}).toCompletionItem(),
				new MTAFunction(0, "textItemSetColor", "This function sets the color of a text item.", "bool", ["textitem theTextItem", "int r", "int g", "int b", "int a"], {}).toCompletionItem(),
				new MTAFunction(0, "textItemSetPriority", "", "void", ["textitem theTextItem", "string priority"], {}).toCompletionItem(),
				new MTAFunction(0, "textItemSetPosition", "This function allows the setting of the position of a text item.", "bool", ["textitem theTextItem", "float x", "float y"], {}).toCompletionItem(),
				new MTAFunction(0, "getPedFightingStyle", "Retrieves the fighting style a player/ped is currently using.", "int", ["ped thePed"], {}).toCompletionItem(),
				new MTAFunction(0, "setPedArmor", "This function allows you to set the armor value of a ped.", "bool", ["ped thePed", "float armor"], {}).toCompletionItem(),
				new MTAFunction(0, "getElementSyncer", "This function gets the syncer of an element. The syncer is the player who is in control of the element.", "element", ["element theElement"], {}).toCompletionItem(),
				new MTAFunction(0, "respawnVehicle", "This function respawns a vehicle according to its set respawn position, set by setVehicleRespawnPosition or the position and rotation it was created on. To spawn a vehicle to a specific location just once, spawnVehicle can be used.", "bool", ["vehicle theVehicle"], {}).toCompletionItem(),
				new MTAFunction(0, "getRootElement", "This function is used to reset the state of a player. It is intended to restore a player to his default state as if he had just joined the server, without any scripts affecting him.", "bool resetMapInfo ( [player thePlayer =", [""], {}).toCompletionItem(),
				new MTAFunction(0, "getElementZoneName", "This function allows you to retrieve the zone name of an element (eg. Verdant Bluffs or Ocean Docks)", "string", ["element theElement", "[bool citiesonly=false]"], {}).toCompletionItem(),
				new MTAFunction(0, "getMaxPlayers", "This function returns the maximum number of player slots on the server.", "int", [""], {}).toCompletionItem(),
				new MTAFunction(0, "getResourceLoadFailureReason", "This example checks if there's a resource that failed to load, then outputs \"Resource: 'resourceName' failed to load because 'reason'.\" .", "string", ["resource theResource"], {}).toCompletionItem(),
				new MTAFunction(0, "getResourceOrganizationalPath", "This function returns the organizational file path (e.g. [admin]) of a resource.", "string", ["resource theResource"], {}).toCompletionItem(),
				new MTAFunction(0, "textItemSetText", "Overwrites a previously created text item with the specified text.", "void", ["textitem theTextitem", "string text"], {}).toCompletionItem(),
				new MTAFunction(0, "textItemSetScale", "This function allows the setting of the scale of a text item.", "bool", ["textitem theTextitem", "float scale"], {}).toCompletionItem(),
				new MTAFunction(0, "saveMapData", "This converts a set of elements in the element tree into XML. This is a format that can then be loaded as a map file. Each element represents a single XML node.", "bool", ["xmlnode node", "element baseElement [", "bool childrenOnly = false ]"], {}).toCompletionItem(),
				new MTAFunction(0, "Vector2", "The Vector2 class is a class introduced in 1.4", "vector2", ["float x = 0", "float y = 0"], {}).toCompletionItem(),
				new MTAFunction(0, "Vector4", "The Vector4 class is a class introduced in 1.4", "vector4", ["float x = 0", "float y = 0", "float z = 0", "float w = 0"], {}).toCompletionItem(),
				new MTAFunction(0, "getResourceMapRootElement", "This function retrieves the root element of a certain map in a specified resource.", "element", ["resource theResource", "string mapName"], {}).toCompletionItem(),
				new MTAFunction(0, "Matrix", "Matrices are one of the most powerful features of MTA OOP. We did have a presence of Matrices before with getElementMatrix, but we were given an ugly disgusting table to play with. Now, with the new Matrix class, we can make and magically manipulate Matrices.", "matrix", ["Vector3 position[", "Vector3 rotation]"], {}).toCompletionItem(),
				new MTAFunction(0, "isKeyBound", "This function can be used to find out if a key has already been bound.", "bool", ["player thePlayer", "string key", "[ string keyState", "function handler ]"], {}).toCompletionItem(),
				new MTAFunction(0, "giveWeapon", "giveWeapon gives a specified weapon to a certain player or ped. There is an optional argument to specify ammunition. For example, a melee weapon doesn't need an ammo argument.", "bool", ["ped thePlayer", "int weapon [", "int ammo=30", "bool setAsCurrent=false ]"], {}).toCompletionItem(),
				new MTAFunction(0, "setPedChoking", "This function can be used to force the ped to do the choking (coughing) animation until he respawns or toggled off using this function. The animation can not be cancelled by a player it's applied to, and he will not loose health.", "bool", ["ped thePed", "bool choking"], {}).toCompletionItem(),
				new MTAFunction(0, "addResourceMap", "This function adds a new empty mapfile to an existing resource.", "xmlnode", ["string filePath", "[ int dimension = 0 ]"], {}).toCompletionItem(),
				new MTAFunction(0, "reloadPedWeapon", "This function makes a pedestrian reload their weapon.", "bool", ["ped thePed"], {}).toCompletionItem(),
				new MTAFunction(0, "copyResource", "This function copies a specified resource with a new name.", "resource", ["resource theResource", "string newResourceName [", "string organizationalDir ]"], {}).toCompletionItem(),
				new MTAFunction(0, "Vector3", "", "vector3", ["[ float x = 0", "float y = 0", "float z = 0 ]"], {}).toCompletionItem(),
				new MTAFunction(0, "setTeamColor", "This function is for setting the color of a specified team. This color is shown, for example, in the team players' nametags.", "bool", ["team theTeam", "int colorR", "int colorG", "int colorB"], {}).toCompletionItem(),
				new MTAFunction(0, "addVehicleSirens", "This function adds sirens to a vehicle.", "bool", ["vehicle theVehicle", "int sirenCount", "int sirenType", "[bool 360flag = false", "bool checkLosFlag = true", "bool useRandomiser flag = true", "bool silentFlag = false"], {}).toCompletionItem(),
				new MTAFunction(0, "takeWeapon", "This function removes a specified weapon or ammo from a certain player's inventory.", "bool", ["player thePlayer", "int weaponId [", "int ammo ]"], {}).toCompletionItem(),
				new MTAFunction(0, "removeVehicleSirens", "This function removes sirens from a vehicle.", "bool", ["vehicle theVehicle"], {}).toCompletionItem(),
				new MTAFunction(0, "resetVehicleExplosionTime", "Resets the vehicle explosion time. This is the point in time at which the vehicle last exploded: at this time plus the vehicle's respawn delay, the vehicle is respawned. You can use this function to prevent the vehicle from respawning.", "bool", ["vehicle theVehicle"], {}).toCompletionItem(),
				new MTAFunction(0, "setServerConfigSetting", "This function sets server settings which are stored in the mtaserver.conf file.", "bool", ["string name", "string value", "[ bool bSave = false ]"], {}).toCompletionItem(),
				new MTAFunction(0, "getServerConfigSetting", "This function retrieves server settings which are usually stored in the mtaserver.conf file.", "string", ["string name"], {}).toCompletionItem(),
				new MTAFunction(0, "loadMapData", "This function is intended to load data from a loaded XML file into the element tree. This could be used for loading an external map, or part of another map.", "element", ["xmlnode node", "element parent"], {}).toCompletionItem(),
				new MTAFunction(0, "getPedGravity", "This function returns the current gravity for the specified ped. The default gravity is 0.008.", "float", ["ped thePed"], {}).toCompletionItem(),
				new MTAFunction(0, "setPedGravity", "This function sets the gravity level of a ped.", "bool", ["ped thePed", "float gravity"], {}).toCompletionItem(),
				new MTAFunction(0, "setPedFightingStyle", "Changes a ped's fighting style. Most styles only change the 'special attack' which is done using the Aim and Enter keys.", "bool", ["ped thePed", "int style"], {}).toCompletionItem(),
				new MTAFunction(0, "removePedJetPack", "This function is used to remove a ped's jetpack.", "bool", ["ped thePed"], {}).toCompletionItem(),
				new MTAFunction(0, "getPlayerAnnounceValue", "This function retrieves a players ASE announce value under a certain key.", "string", ["element thePlayer", "string key"], {}).toCompletionItem(),
				new MTAFunction(0, "takeAllWeapons", "This function removes every weapons from a specified ped, rendering it unarmed.", "bool", ["ped thePed"], {}).toCompletionItem(),
				new MTAFunction(0, "toggleVehicleRespawn", "This function toggles whether or not the vehicle will be respawned after blown or idle.", "bool", ["vehicle theVehicle", "bool Respawn"], {}).toCompletionItem(),
				new MTAFunction(0, "setVehiclesLODDistance", "Sets the distance of vehicles LOD.", "bool", ["float vehiclesDistance", "float trainsAndPlanesDistance = vehiclesDistance * 2.14"], {}).toCompletionItem(),
				new MTAFunction(0, "setJetpackWeaponEnabled", "This function sets a weapon usable while using the Jetpack.", "bool", ["string weapon", "bool enabled"], {}).toCompletionItem(),
				new MTAFunction(0, "getJetpackWeaponEnabled", "This function checks if a weapon is usable while on a Jetpack.", "bool", ["string weapon"], {}).toCompletionItem(),
				new MTAFunction(0, "getPlayerCount", "This function returns the number of players currently connected to the server.", "int", [""], {}).toCompletionItem(),
				new MTAFunction(0, "getPlayerIP", "This function returns a string containing the IP address of the player.", "string", ["player thePlayer"], {}).toCompletionItem(),
				new MTAFunction(0, "getPlayerIdleTime", "This function gets the amount of time in milliseconds that a players position has not changed.This example will kick a player if they don't move for 5 minutes and the resource has access to \"function.kickPlayer\"", "int", ["player thePlayer"], {}).toCompletionItem(),
				new MTAFunction(0, "getDeadPlayers", "This function returns a table of all currently dead players on the server.", "table", [""], {}).toCompletionItem(),
				new MTAFunction(0, "getPlayerACInfo", "", "table", ["element thePlayer"], {}).toCompletionItem(),
				new MTAFunction(0, "getResources", "This function retrieves a table of all the resources that exist on the server.", "table", [""], {}).toCompletionItem(),
				new MTAFunction(0, "getPlayerSerial", "This function returns the serial for a specified player.", "string", ["player thePlayer"], {}).toCompletionItem(),
				new MTAFunction(0, "getPlayerVersion", "This example adds a command that allows players to see their own client version.", "string", ["player thePlayer"], {}).toCompletionItem(),
				new MTAFunction(0, "getAlivePlayers", "This function returns a table of all the alive players on the server. Opposite function of getDeadPlayers.", "table", [""], {}).toCompletionItem(),
				new MTAFunction(0, "deleteResource", "This function deletes a resource from the MTA memory and moves it to the /resources-cache/trash/ directory.", "bool", ["string resourceName"], {}).toCompletionItem(),
				new MTAFunction(0, "isPlayerMuted", "Use this function to check if a player has been muted.", "bool", ["player thePlayer"], {}).toCompletionItem(),
				new MTAFunction(0, "getRandomPlayer", "This function returns a random player.", "player", [""], {}).toCompletionItem(),
				new MTAFunction(0, "getResourceACLRequests", "This function retrieves the ACL request section from the meta.xml file of the given resource.", "table", ["resource theResource"], {}).toCompletionItem(),
				new MTAFunction(0, "callRemote", "This function allows you to call functions that have been exported with HTTP access by other MTA servers. The calls are asynchronous so you do not get an immediate result from the call, instead a callback function you specify is called when the call returns.", "bool", ["string host[", "string queueName = \"default\" ][", "int connectionAttempts = 10", "int connectTimeout = 10000 ]", "string resourceName", "string functionName", "callback callbackFunction", "[ arguments... ]"], {}).toCompletionItem(),
				new MTAFunction(0, "redirectPlayer", "This function redirects the player to a specified server.", "bool", ["player thePlayer", "string serverIP", "int serverPort", "[ string serverPassword ]"], {}).toCompletionItem(),

				//**************** CLIENT FUNCTIONS *******************//

				new MTAFunction(1, "getSoundEffects", "Returns the states of all effects of a sound.", "table", ["element sound"], {}).toCompletionItem(),
				new MTAFunction(1, "getRadioChannel", "This function retrieves the ID of the currently active radio channel.", "int", [""], {}).toCompletionItem(),
				new MTAFunction(1, "getSoundLevelData", "This function gets the left/right level from a sound element.If the element is a player, this function will use the players voice.", "int, int", ["element theSound"], {}).toCompletionItem(),
				new MTAFunction(1, "isPlayerMapVisible", "This function checks if the local player has their map showing", "bool", [""], {}).toCompletionItem(),
				new MTAFunction(1, "getSoundMetaTags", "Used to get the meta tags attached to a sound. These provide information about the sound, for instance the title or the artist.", "table", ["element sound"], {}).toCompletionItem(),
				new MTAFunction(1, "createProjectile", "This function creates a projectile of the specified type on the specified coordinates.", "projectile", ["element creator", "int weaponType [", "float posX", "float posY", "float posZ", "float force = 1.0", "element target = nil", "float rotX", "float rotY", "float rotZ", "float velX", "float velY", "float velZ", "int model ]"], {}).toCompletionItem(),
				new MTAFunction(1, "getSoundFFTData", "This function gets the fast fourier transform data for an audio stream which is a table of floats representing the current audio frame.This allows things like visualisations.", "table", ["element sound", "int iSamples [", "int iBands = 0 ]"], {}).toCompletionItem(),
				new MTAFunction(1, "getSoundBPM", "This function gets the beats per minute of a specific sound element.", "int", ["element sound"], {}).toCompletionItem(),
				new MTAFunction(1, "getSoundMaxDistance", "Gets a custom sound max distance at which the sound stops.", "int", ["element sound"], {}).toCompletionItem(),
				new MTAFunction(1, "getCursorPosition", "This function gets the current position of the mouse cursor. Note that for performance reasons, the world position returned is always 300 units away. If you want the exact world point (similar to onClientClick), use processLineOfSight between the camera position and the worldX/Y/Z result of this function. (See example below)", "float float float float float", [""], {}).toCompletionItem(),
				new MTAFunction(1, "guiMoveToBack", "This function moves a GUI element to the very back of all other GUI elements.", "bool", ["element guiElement"], {}).toCompletionItem(),
				new MTAFunction(1, "getSoundLength", "This function is used to return the playback length of the specified sound element.If the element is a player, this function will use the players voice.", "float", ["element theSound"], {}).toCompletionItem(),
				new MTAFunction(1, "guiSetAlpha", "This changes the alpha level (the visibleness/transparency) of a GUI element", "bool", ["element guielement", "float alpha"], {}).toCompletionItem(),
				new MTAFunction(1, "getSFXStatus", "This function checks if a big sound container is available to use or not.", "bool", ["string audioContainer"], {}).toCompletionItem(),
				new MTAFunction(1, "getRadioChannelName", "This function gets the given radio channel name.", "string", ["int id"], {}).toCompletionItem(),
				new MTAFunction(1, "getSoundWaveData", "This function gets the wave form data for an audio stream which is a table of floats representing the current audio frame as a wave.This allows things like visualisations.", "table", ["element sound", "int iSamples"], {}).toCompletionItem(),
				new MTAFunction(1, "getSoundSpeed", "This function is used to return the playback speed of the specified sound element.", "float", ["element theSound"], {}).toCompletionItem(),
				new MTAFunction(1, "isSoundPaused", "This function is used to return the current pause state of the specified sound element.", "bool", ["element theSound"], {}).toCompletionItem(),
				new MTAFunction(1, "getSoundVolume", "This function is used to return the volume level of the specified sound element.If the element is a player, this function will use the players voice.", "float", ["element theSound"], {}).toCompletionItem(),
				new MTAFunction(1, "playSound", "Creates a sound element and plays it immediately after creation for the local player. Note: The only supported audio formats are MP3, WAV, OGG, RIFF, MOD, XM, IT, S3M and PLS(e.g. Webstream).", "element", ["string soundPath", "[ bool looped = false", "bool throttled = true ]"], {}).toCompletionItem(),
				new MTAFunction(1, "getSoundPan", "This function is used to get the pan level of the specified sound element.", "float", ["element theSound"], {}).toCompletionItem(),
				new MTAFunction(1, "executeBrowserJavascript", "This function executes a Javascript string to the specified browser. Works only with local browsers.", "bool", ["browser webBrowser", "string jsCode"], {}).toCompletionItem(),
				new MTAFunction(1, "getSoundProperties", "This function gets the properties of a specific sound.", "float, float, float, bool", ["element sound"], {}).toCompletionItem(),
				new MTAFunction(1, "focusBrowser", "This function will attempt to focus the browser or unfocus all browsers. The browser that is focused will retrieve keyboard input.This example creates browser and focus it", "bool", ["browser webBrowser"], {}).toCompletionItem(),
				new MTAFunction(1, "getCamera", "This function returns an element that corresponds to the game camera", "element", [""], {}).toCompletionItem(),
				new MTAFunction(1, "getElementDistanceFromCentreOfMassToBaseOfModel", "This function is used to retrieve the distance between a element's centre of mass to the base of the model. This can be used to calculate the position the element has to be set to, to have it on ground level.", "float", ["element theElement"], {}).toCompletionItem(),
				new MTAFunction(1, "isPedTargetingMarkerEnabled", "This example will toggle the targeting markers with the command /togtargetmarkers.", "bool", [""], {}).toCompletionItem(),
				new MTAFunction(1, "setSoundSpeed", "This function can be used to change the playback speed of the specified sound element.", "bool", ["element theSound", "float speed"], {}).toCompletionItem(),
				new MTAFunction(1, "playSound3D", "Creates a sound element in the GTA world and plays it immediately after creation for the local player. setElementPosition can be used to move the sound element around after it has been created. Remember to use setElementDimension after creating the sound to play it outside of dimension 0.", "element", ["string soundPath", "float x", "float y", "float z", "[ bool looped = false ]"], {}).toCompletionItem(),
				new MTAFunction(1, "isSoundPanningEnabled", "This function checks whether panning is enabled in a sound element or not.", "bool", ["element theSound"], {}).toCompletionItem(),
				new MTAFunction(1, "setSoundMaxDistance", "Sets a custom sound max distance at which the sound stops.", "bool", ["element sound", "int distance"], {}).toCompletionItem(),
				new MTAFunction(1, "getSoundMinDistance", "Gets a custom sound Minimum distance at which the sound stops getting louder.", "int", ["element sound"], {}).toCompletionItem(),
				new MTAFunction(1, "playSFX", "This function plays a sound from GTA's big sound containers.", "element", ["string containerName", "int bankId", "int soundId [", "bool looped = false ]"], {}).toCompletionItem(),
				new MTAFunction(1, "getSoundPosition", "This function is used to return the current seek position of the specified sound element.If the element is a player, this function will use the players voice.", "float", ["element theSound"], {}).toCompletionItem(),
				new MTAFunction(1, "playSFX3D", "This function plays a sound in the GTA world from GTA's big sound containers.", "element", ["string containerName", "int bankId", "int soundId", "float x", "float y", "float z [", "bool looped = false ]"], {}).toCompletionItem(),
				new MTAFunction(1, "setSoundPanningEnabled", "This function toggles the panning of a sound (hearing it closer to the left or right side of the speakers due to the camera position). By default a sound has its panning enabled.", "bool", ["element sound", "bool enable"], {}).toCompletionItem(),
				new MTAFunction(1, "setSoundPosition", "This function is used to change the seek position of the specified sound element.Use a player element to control a players voice with this function.", "bool", ["element theSound", "float pos"], {}).toCompletionItem(),
				new MTAFunction(1, "setSoundPaused", "This function is used to either pause or unpause the playback of the specified sound element.", "bool", ["element theSound", "bool paused"], {}).toCompletionItem(),
				new MTAFunction(1, "stopSound", "Stops the sound playback for specified sound element. The sound element is also destroyed.", "bool", ["element theSound"], {}).toCompletionItem(),
				new MTAFunction(1, "dxCreateFont", "This function creates a DX font element that can be used in dxDrawText. Successful font creation is not guaranteed, and may fail due to hardware or memory limitations.", "element", ["string filepath[", "int size=9", "bool bold=false", "string quality=\"proof\" ]"], {}).toCompletionItem(),
				new MTAFunction(1, "setPedAimTarget", "This function allows you to set a ped's aim target to a specific point. If a ped is within a certain range defined by getPedTargetStart and getPedTargetEnd he will be targeted and shot.", "bool", ["ped thePed", "float x", "float y", "float z"], {}).toCompletionItem(),
				new MTAFunction(1, "setPedCameraRotation", "", "bool", ["ped thePed", "float cameraRotation"], {}).toCompletionItem(),
				new MTAFunction(1, "guiCreateFont", "This function creates a GUI font element that can be used in guiSetFont. Successful font creation is not guaranteed, and may fail due to hardware or memory limitations.", "element", ["string filepath[", "int size=9 ]"], {}).toCompletionItem(),
				new MTAFunction(1, "isPedDoingTask", "This function checks if the specified ped is carrying out a certain task.", "bool", ["ped thePed", "string taskName"], {}).toCompletionItem(),
				new MTAFunction(1, "setSoundMinDistance", "Sets a custom sound Minimum distance at which the sound stops getting louder.", "bool", ["element sound", "int distance"], {}).toCompletionItem(),
				new MTAFunction(1, "setSoundPan", "", "bool", ["element theSound", "float pan"], {}).toCompletionItem(),
				new MTAFunction(1, "fxAddBulletImpact", "This example will create a Bullet Impact Effect on the position of the bullet impact.", "bool", ["float posX", "float posY", "float posZ", "float dirX", "float dirY", "float dirZ", "[int smokeSize=1", "int sparkCount=1", "float smokeIntensity=1.0]"], {}).toCompletionItem(),
				new MTAFunction(1, "setSoundEffectEnabled", "Used to enable or disable specific sound effects.Use a player element to control a players voice with this function.", "bool", ["element sound", "string effectName", "bool bEnable"], {}).toCompletionItem(),
				new MTAFunction(1, "fxAddDebris", "This example will create a Debris Effect next to you when typing /debris in the Chatbox.", "bool", ["float posX", "float posY", "float posZ", "[int colorR=255", "int colorG=0", "int colorB=0", "int colorA=255", "float scale=1.0", "int count=1]"], {}).toCompletionItem(),
				new MTAFunction(1, "setSoundVolume", "This function is used to change the volume level of the specified sound element.Use a player element to control a players voice with this function.", "bool", ["element theSound", "float volume"], {}).toCompletionItem(),
				new MTAFunction(1, "fxAddTankFire", "This example will create a Tank Fire Effect at your weapon's muzzle position", "bool", ["float posX", "float posY", "float posZ", "float dirX", "float dirY", "float dirZ"], {}).toCompletionItem(),
				new MTAFunction(1, "fxAddFootSplash", "This example will create a Foot Splash at the position of the bullet impact whenever you shoot.", "bool", ["float posX", "float posY", "float posZ"], {}).toCompletionItem(),
				new MTAFunction(1, "fxAddBulletSplash", "This example will add a Bullet Splash Effect next to your player when typing /bsplash in the Chatbox.", "bool", ["float posX", "float posY", "float posZ"], {}).toCompletionItem(),
				new MTAFunction(1, "Vector3", "", "vector3", ["[ float x = 0", "float y = 0", "float z = 0 ]"], {}).toCompletionItem(),
				new MTAFunction(1, "setSoundProperties", "This function edit's the properties of a specific sound.", "bool", ["element sound", "float fSampleRate", "float fTempo", "float fPitch", "bool bReverse"], {}).toCompletionItem(),
				new MTAFunction(1, "fxAddSparks", "This example will add Fire Bins to all locations added in the table.", "bool", ["float posX", "float posY", "float posZ", "float dirX", "float dirY", "float dirZ", "[float force=1", "int count=1", "float acrossLineX=0", "float acrossLineY=0", "float acrossLineZ=0", "bool blur=false", "float spread=1", "float life=1]"], {}).toCompletionItem(),
				new MTAFunction(1, "setRadioChannel", "This function sets the heard radio channel, even while not in a vehicle.", "bool", ["int ID"], {}).toCompletionItem(),
				new MTAFunction(1, "getPedVoice", "Gets the current voice of a ped.", "string string", ["ped thePed"], {}).toCompletionItem(),
				new MTAFunction(1, "getPedWeaponMuzzlePosition", "This Example draws a red 3D-Line when a Player shoots,between the Players WeaponMuzzlePosition and the Point where the Bullet hits.[Tested]", "float, float, float", ["ped thePed"], {}).toCompletionItem(),
				new MTAFunction(1, "getPlayerMapBoundingBox", "This function gets the GUI bounding box of the radar map texture.", "int, int, int, int", [""], {}).toCompletionItem(),
				new MTAFunction(1, "canPedBeKnockedOffBike", "This function checks if the given ped can fall off bikes.", "bool", ["ped thePed"], {}).toCompletionItem(),
				new MTAFunction(1, "dxGetPixelColor", "This function gets the color of a single pixel from pixels contained in a string. It only works with 'plain' format pixels.", "int r,g,b,a", ["string pixels", "int x", "int y"], {}).toCompletionItem(),
				new MTAFunction(1, "isElementLocal", "This function checks whether a clientside element is local to the client (doesn't exist in the server) or not.", "bool", ["element theElement"], {}).toCompletionItem(),
				new MTAFunction(1, "givePedWeapon", "This function gives the specified weapon to the specified ped. This function can't be used on players, use giveWeapon for that.", "bool", ["ped thePed", "int weapon [", "int ammo=30", "bool setAsCurrent=false ]"], {}).toCompletionItem(),
				new MTAFunction(1, "engineReplaceModel", "Client-side example for replacing vehicle model and texture with custom ones.Server-side example function for triggering the replace.Client-side example for replacing weapons with custom mods.Client-Side example for replacing object collision, texture and model with custom ones.Server-side example function for triggering the replace.", "bool", ["dff theModel", "int modelID [", "bool alphaTransparency = false ]"], {}).toCompletionItem(),
				new MTAFunction(1, "isElementSyncer", "This function checks whether an element is synced by the local player or not. Accepted elements are peds and vehicles.This example draws a string above peds synced by local player in 50m proximity", "bool", ["element theElement"], {}).toCompletionItem(),
				new MTAFunction(1, "dxDrawText", "Draws a string of text on the screen for one frame. In order for the text to stay visible continuously, you need to call this function with the same parameters on each frame update (see onClientRender).", "bool", ["string text", "float left", "float top [", "float right=left", "float bottom=top", "int color=white", "float scale=1", "mixed font=\"default\"", "string alignX=\"left\"", "string alignY=\"top\"", "bool clip=false", "bool wordBreak=false", "bool postGUI=false", "bool colorCoded=false", "bool subPixelPositioning=false", "float fRotation=0", "float fRotationCenterX=0", "float fRotationCenterY=0 ]"], {}).toCompletionItem(),
				new MTAFunction(1, "tocolor", "Draws an image on the screen for a single frame. In order for the image to stay visible continuously, you need to call this function with the same parameters on each frame update (see onClientRender).Image files should ideally have dimensions that are a power of two, to prevent possible blurring.Power of two: 2px, 4px, 8px, 16px, 32px, 64px, 128px, 256px, 512px, 1024px...", "bool dxDrawImage ( float posX, float posY, float width, float height, mixed image, [ float rotation = 0, float rotationCenterOffsetX = 0, float rotationCenterOffsetY = 0, int color =", ["255,255,255,255"], {}).toCompletionItem(),
				new MTAFunction(1, "dxDrawImageSection", "Differing from dxDrawImage, this function only draws a part of an image on the screen for a single frame. In order for the image to stay visible continuously, you need to call this function with the same parameters on each frame update (see onClientRender).", "bool", ["float posX", "float posY", "float width", "float height", "float u", "float v", "float usize", "float vsize", "mixed image", "[ float rotation = 0", "float rotationCenterOffsetX = 0", "float rotationCenterOffsetY = 0", "int color = white", "bool postGUI = false ]"], {}).toCompletionItem(),
				new MTAFunction(1, "dxGetPixelsSize", "This function gets the dimensions of pixels contained in a string. It works with all pixel formats.", "int int", ["string pixels"], {}).toCompletionItem(),
				new MTAFunction(1, "fxAddTyreBurst", "This example will create a Tyre Burst Effect next to you when typing /tyreburst in the Chatbox.", "bool", ["float posX", "float posY", "float posZ", "float dirX", "float dirY", "float dirZ"], {}).toCompletionItem(),
				new MTAFunction(1, "dxSetShaderTessellation", "", "bool", ["element theShader", "int tessellationX", "int tessellationY"], {}).toCompletionItem(),
				new MTAFunction(1, "setCursorPosition", "This function sets the current position of the mouse cursor.", "bool", ["int cursorX", "int cursorY"], {}).toCompletionItem(),
				new MTAFunction(1, "dxCreateScreenSource", "This function creates a screen source, which is a special type of texture that contains the screen as rendered by GTA", "element", ["int width", "int height"], {}).toCompletionItem(),
				new MTAFunction(1, "dxCreateTexture", "This function creates a texture element that can be used in the dxDraw functions.", "element", ["string filepath [", "string textureFormat = \"argb\"", "bool mipmaps = true", "string textureEdge = \"wrap\" ]"], {}).toCompletionItem(),
				new MTAFunction(1, "dxDrawLine3D", "This function draws a 3D line between two points in the 3D world - rendered for one frame. This should be used in conjunction with onClientRender in order to display continuously.", "bool", ["float startX", "float startY", "float startZ", "float endX", "float endY", "float endZ[", "int color = white", "int width = 1", "bool postGUI = false ]"], {}).toCompletionItem(),
				new MTAFunction(1, "dxDrawLine", "This function draws a 2D line across the screen - rendered for one frame. This should be used in conjunction with onClientRender in order to display continuously.", "bool", ["int startX", "int startY", "int endX", "int endY", "int color", "[float width=1", "bool postGUI=false]"], {}).toCompletionItem(),
				new MTAFunction(1, "dxCreateShader", "This function creates a shader element that can be used in the dxDraw functions. Successful shader creation is not guaranteed unless the Effect File contains a fallback technique which will work on every PC in the universe.", "element, string", ["string filepath [", "float priority = 0", "float maxDistance = 0", "bool layered = false", "string elementTypes = \"world,vehicle,object,other\" ]"], {}).toCompletionItem(),
				new MTAFunction(1, "dxGetMaterialSize", "This gets the dimensions of the supplied material element.", "int, int [, int]", ["element material"], {}).toCompletionItem(),
				new MTAFunction(1, "dxGetStatus", "This function gets information about various internal datum", "table", [""], {}).toCompletionItem(),
				new MTAFunction(1, "dxSetTexturePixels", "", "bool", ["[ int surfaceIndex = 0", "] element texture", "string pixels [", "int x = 0", "int y = 0", "int width = 0", "int height = 0 ]"], {}).toCompletionItem(),
				new MTAFunction(1, "dxDrawRectangle", "This function draws a 2D rectangle across the screen - rendered for one frame. This should be used in conjunction with onClientRender in order to display continuously. Example of MOTD (message of the day), made using DxDrawText, -Line and -Rectangle.", "bool", ["float startX", "float startY", "float width", "float height [", "int color = white", "bool postGUI = false", "bool subPixelPositioning = false ]"], {}).toCompletionItem(),
				new MTAFunction(1, "dxSetShaderTransform", "", "bool", ["element theShader", "float rotationX", "float rotationY", "float rotationZ", "[ float rotationCenterOffsetX = 0", "float rotationCenterOffsetY = 0", "float rotationCenterOffsetZ = 0", "bool bRotationCenterOffsetOriginIsScreen = false", "float perspectiveCenterOffsetX = 0", "float perspectiveCenterOffsetY = 0", "bool bPerspectiveCenterOffsetOriginIsScreen = false ]"], {}).toCompletionItem(),
				new MTAFunction(1, "dxSetTestMode", "This function is used for testing scripts written using guiCreateFont, dxCreateFont, dxCreateShader and dxCreateRenderTarget.", "bool", ["string testMode"], {}).toCompletionItem(),
				new MTAFunction(1, "fxAddWaterHydrant", "", "bool", ["float posX", "float posY", "float posZ"], {}).toCompletionItem(),
				new MTAFunction(1, "getEffectDensity", "This function gets the density of certain effect.", "float", ["effect theEffect"], {}).toCompletionItem(),
				new MTAFunction(1, "fxAddGlass", "", "bool", ["float posX", "float posY", "float posZ", "[int colorR=255", "int colorG=0", "int colorB=0", "int colorA=255", "float scale=1.0", "int count=1]"], {}).toCompletionItem(),
				new MTAFunction(1, "dxGetBlendMode", "", "string", [""], {}).toCompletionItem(),
				new MTAFunction(1, "getElementBoundingBox", "This function returns the minimum and maximum coordinates of an element's bounding box.", "float float float float float float", ["element theElement"], {}).toCompletionItem(),
				new MTAFunction(1, "createBrowser", "This function creates a new web browser element.", "element", ["int width", "int height", "bool isLocal [", "bool transparent = false ]"], {}).toCompletionItem(),
				new MTAFunction(1, "fxAddWood", "This example will create a Wood Effect next to you when typing /woodfx in the Chatbox.", "bool", ["float posX", "float posY", "float posZ", "float dirX", "float dirY", "float dirZ", "[int count=1", "float brightness=1.0]"], {}).toCompletionItem(),
				new MTAFunction(1, "dxUpdateScreenSource", "This function updates the contents of a screen source texture with the screen output from GTA", "bool", ["element screenSource [", "bool resampleNow = false ]"], {}).toCompletionItem(),
				new MTAFunction(1, "dxSetShaderValue", "This sets a named parameter for a shader element", "bool", ["element theShader", "string parameterName", "mixed value"], {}).toCompletionItem(),
				new MTAFunction(1, "dxDrawMaterialLine3D", "This function draws a textured 3D line between two points in the 3D world - rendered for one frame. This should be used in conjunction with onClientPreRender in order to display continuously.Draws an Image ( \"test.png\" Download : test.png ) from the Position 0,0,3 to 0,0,15", "bool", ["float startX", "float startY", "float startZ", "float endX", "float endY", "float endZ", "element material", "float width", "[ int color = white", "float faceTowardX", "float faceTowardY", "float faceTowardZ ]"], {}).toCompletionItem(),
				new MTAFunction(1, "dxCreateRenderTarget", "This function creates a render target element, which is a special type of texture that can be drawn on with the dx functions. Successful render target creation is not guaranteed, and may fail due to hardware or memory limitations.", "element", ["int width", "int height [", "bool withAlpha = false ]"], {}).toCompletionItem(),
				new MTAFunction(1, "fxAddGunshot", "This example adds a gunshot with sparks in front of your face.", "bool", ["float posX", "float posY", "float posZ", "float dirX", "float dirY", "float dirZ", "[bool includeSparks=true]"], {}).toCompletionItem(),
				new MTAFunction(1, "dxGetTextWidth", "This function retrieves the theoretical width of a certain piece of text, if it were to be drawn using dxDrawText.This will show you the width of a message in a normal chatbox sent by a player", "float", ["string text", "[float scale=1", "mixed font=\"default\"", "bool bColorCoded=false]"], {}).toCompletionItem(),
				new MTAFunction(1, "fxAddBlood", "This example creates blood effects when a player gets shot.", "bool", ["float posX", "float posY", "float posZ", "float dirX", "float dirY", "float dirZ", "[int count=1", "float brightness=1.0]"], {}).toCompletionItem(),
				new MTAFunction(1, "fxAddWaterSplash", "This example will create a Water Splash at the position of the bullet impact whenever you shoot.", "bool", ["float posX", "float posY", "float posZ"], {}).toCompletionItem(),
				new MTAFunction(1, "dxGetPixelsFormat", "This function returns the format of pixels contained in a string.", "string", ["string pixels"], {}).toCompletionItem(),
				new MTAFunction(1, "guiGetEnabled", "This function determines if a GUI element is enabled.", "bool", ["element guiElement"], {}).toCompletionItem(),
				new MTAFunction(1, "getPedTargetCollision", "This function allows retrieval of where a ped's target is blocked. It will only be blocked if there is an obstacle within a ped's target range.", "float float float", ["ped targetingPed"], {}).toCompletionItem(),
				new MTAFunction(1, "createFire", "", "bool", ["float x", "float y", "float z [", "float size = 1.8 ]"], {}).toCompletionItem(),
				new MTAFunction(1, "guiGetInputEnabled", "This function checks whether user input is focused on the GUI or the game.", "bool", [""], {}).toCompletionItem(),
				new MTAFunction(1, "guiGetFont", "This function is used to get the current font that is used to draw text in GUI elements.", "string, element", ["element guiElement"], {}).toCompletionItem(),
				new MTAFunction(1, "fxAddPunchImpact", "This example will create a Punch Impact Effect next to you when typing /pimpact in the Chatbox.", "bool", ["float posX", "float posY", "float posZ", "float dirX", "float dirY", "float dirZ"], {}).toCompletionItem(),
				new MTAFunction(1, "dxSetBlendMode", "This function sets the current blend mode for the dxDraw functions. Changing the blend mode can increase the quality when drawing text or certain other images to a render target. As a general guide use modulate_add when drawing text to a render target, and add when drawing the render target to the screen. Don't forget to restore the default blend at the end - See the example below.", "bool", ["string blendMode"], {}).toCompletionItem(),
				new MTAFunction(1, "dxGetTexturePixels", "This function fetches the pixels from a texture element. It can be used with a standard texture, render target or screen source.", "string", ["[ int surfaceIndex = 0", "] element texture [", "int x = 0", "int y = 0", "int width = 0", "int height = 0 ]"], {}).toCompletionItem(),
				new MTAFunction(1, "dxConvertPixels", "This function converts pixels from one format to another.", "string", ["string pixels", "string newFormat [", "int quality = 80 ]"], {}).toCompletionItem(),
				new MTAFunction(1, "setEffectSpeed", "This function sets the speed of a specified effect.", "bool", ["effect theEffect", "float speed"], {}).toCompletionItem(),
				new MTAFunction(1, "dxDrawMaterialSectionLine3D", "This function draws a textured 3D line between two points in the 3D world - rendered for one frame. This should be used in conjunction with onClientPreRender in order to display continuously.", "bool", ["float startX", "float startY", "float startZ", "float endX", "float endY", "float endZ", "float u", "float v", "float usize", "float vsize", "element material", "int width", "[ int color = white", "float faceTowardX", "float faceTowardY", "float faceTowardZ ]"], {}).toCompletionItem(),
				new MTAFunction(1, "createEffect", "Creates an effect on specified position.", "effect", ["string name", "float x", "float y", "float z [", "float rX", "float rY", "float rZ", "float drawDistance = 0", "soundEnabled = false ]"], {}).toCompletionItem(),
				new MTAFunction(1, "dxSetAspectRatioAdjustmentEnabled", "This function allows for the positioning of dxDraw calls to be automatically adjusted according to the client's aspect ratio setting. This lasts for a single execution of an event handler for one of the following events: onClientRender, onClientPreRender and onClientHUDRender. So the function has to be called every frame, just like dxDraws.", "bool", ["bool bEnabled [", "float sourceRatio = 4/3 ]"], {}).toCompletionItem(),
				new MTAFunction(1, "dxSetPixelColor", "This example creates a 64x64 texture with random pixel colors, and draw it on the screen.", "bool", ["string pixels", "int x", "int y", "int r", "int g", "int b [", "int a = 255 ]"], {}).toCompletionItem(),
				new MTAFunction(1, "dxSetRenderTarget", "This function changes the drawing destination for the dx functions. It can be used to select a previously created render target, or if called with no arguments, restore drawing directly to the screen.", "bool", ["[ element renderTarget", "bool clear = false ]"], {}).toCompletionItem(),
				new MTAFunction(1, "dxGetFontHeight", "This function retrieves the theoretical height of a certain piece of text, if it were to be drawn using dxDrawText.", "int", ["[float scale=1", "mixed font=\"default\"]"], {}).toCompletionItem(),
				new MTAFunction(1, "getPedTask", "This function is used to get any simple or complex task of a certain type for a ped.", "string, string, string, string", ["ped thePed", "string priority", "int taskType"], {}).toCompletionItem(),
				new MTAFunction(1, "getObjectMass", "This function returns the mass of a specified object.", "float", ["object theObject"], {}).toCompletionItem(),
				new MTAFunction(1, "setPedOxygenLevel", "This function allows you to set the oxygen level of a ped.", "bool", ["ped thePed", "float oxygen"], {}).toCompletionItem(),
				new MTAFunction(1, "getGroundPosition", "This function gets the Z level of the highest ground below a point.", "float", ["float x", "float y", "float z"], {}).toCompletionItem(),
				new MTAFunction(1, "setProjectileCounter", "Will change the projectile counter timer which depending on the projectile type will do different things:With this example you can use /setbombtime to set a delay duration of a projectile explosion.", "bool", ["projectile projectile", "int timeToDetonate"], {}).toCompletionItem(),
				new MTAFunction(1, "getGarageBoundingBox", "This function outputs the bounding box of a garage. Checks if the player is inside the bounding box of the garage and outputs the result to the chat", "float, float, float, float", ["int garageID"], {}).toCompletionItem(),
				new MTAFunction(1, "givePedWeapon", "This function gives the specified weapon to the specified ped. This function can't be used on players, use giveWeapon for that.", "bool", ["ped thePed", "int weapon [", "int ammo=30", "bool setAsCurrent=false ]"], {}).toCompletionItem(),
				new MTAFunction(1, "setElementCollidableWith", "This function can be used to set an element to collide with another element. An element with collisions disabled does not interact physically with the other element.Note: You can only use this function with the element types listed below.", "bool", ["element theElement", "element withElement", "bool enabled"], {}).toCompletionItem(),
				new MTAFunction(1, "getPedAnimation", "Gets the animation of a player or ped that was set using setPedAnimation.", "string string", ["ped thePed"], {}).toCompletionItem(),
				new MTAFunction(1, "getElementRadius", "This function gets the radius of an element. Normally, sphere or circle-shaped elements tend to return a more accurate and expected radius than others with another shapes.", "float", ["element theElement"], {}).toCompletionItem(),
				new MTAFunction(1, "setPedFootBloodEnabled", "This function makes a players foot prints bloody.", "bool", ["element thePlayer", "bool enabled"], {}).toCompletionItem(),
				new MTAFunction(1, "isElementStreamedIn", "This function checks whether an element is currently streamed in (not virtualized) and are actual GTA objects in the world. You can force an element to be streamed in using setElementStreamable.", "bool", ["element theElement"], {}).toCompletionItem(),
				new MTAFunction(1, "guiGetInputMode", "This function returns the current input mode as set by guiSetInputMode.Default mode is \"allow_binds\".", "string", [""], {}).toCompletionItem(),
				new MTAFunction(1, "setEffectDensity", "This function sets the density of a specified effect.", "bool", ["effect theEffect", "float density"], {}).toCompletionItem(),
				new MTAFunction(1, "getEffectSpeed", "This function gets the speed of a specified effect.", "float", ["effect theEffect"], {}).toCompletionItem(),
				new MTAFunction(1, "isElementWaitingForGroundToLoad", "The next code snippet outputs a message when a vehicle respawns far away from players, above an object.", "bool", ["element theElement"], {}).toCompletionItem(),
				new MTAFunction(1, "triggerServerEvent", "This function triggers an event previously registered on the server. This is the primary means of passing information between the client and the server. Servers have a similar triggerClientEvent function that can do the reverse. You can treat this function as if it was an asynchronous function call, using triggerClientEvent to pass back any returned information if necessary.", "bool", ["string event", "element theElement", "[arguments...]"], {}).toCompletionItem(),
				new MTAFunction(1, "guiGetVisible", "This function determines if a GUI element is visible.", "bool", ["element guiElement"], {}).toCompletionItem(),
				new MTAFunction(1, "guiGetScreenSize", "This function retrieves the local screen size according to the resolution they are using.", "float float", [""], {}).toCompletionItem(),
				new MTAFunction(1, "setLightRadius", "This function sets the radius for a light element.", "bool", ["Light theLight", "float radius"], {}).toCompletionItem(),
				new MTAFunction(1, "guiGetCursorType", "This function is used to get the type of the current cursor image.", "string", [""], {}).toCompletionItem(),
				new MTAFunction(1, "guiGetPosition", "This function allows retrieval of a GUI element's current position, relative to its parent.", "float, float", ["element guiElement", "bool relative"], {}).toCompletionItem(),
				new MTAFunction(1, "engineGetVisibleTextureNames", "This function returns a list of the world textures which are being used to draw the current scene.", "table", ["[ string nameFilter = \"*\"", "string modelId = \"\" ]"], {}).toCompletionItem(),
				new MTAFunction(1, "isElementStreamable", "", "bool", ["element theElement"], {}).toCompletionItem(),
				new MTAFunction(1, "setPedTargetingMarkerEnabled", "", "bool", ["bool enabled"], {}).toCompletionItem(),
				new MTAFunction(1, "getLocalPlayer", "This function gets the player element of the client running the current script.", "player", [""], {}).toCompletionItem(),
				new MTAFunction(1, "setPedControlState", "This function makes a ped press or release a certain control. It doesn't work with the local player, so use setControlState instead.", "bool", ["ped thePed", "string control", "bool state"], {}).toCompletionItem(),
				new MTAFunction(1, "isElementCollidableWith", "This function can be used to check whether specified element is collidable with another element.Note: You can only use this function with the element types listed below.", "bool", ["element theElement", "element withElement"], {}).toCompletionItem(),
				new MTAFunction(1, "guiGetProperties", "This function gets a list of the CEGUI property names and values of a GUI element. To find out what the different properties mean, check out the CEGUI properties page.", "table", ["element guiElement"], {}).toCompletionItem(),
				new MTAFunction(1, "getSearchLightEndPosition", "", "float float float", ["searchlight theSearchLight"], {}).toCompletionItem(),
				new MTAFunction(1, "setAnalogControlState", "This sets the analog control state of a control for the local player.", "bool", ["string controlName [", "float state]"], {}).toCompletionItem(),
				new MTAFunction(1, "getSearchLightEndRadius", "", "searchlight", ["searchlight theSearchLight"], {}).toCompletionItem(),
				new MTAFunction(1, "getProjectileTarget", "This function returns the target of the specified projectile.", "element", ["projectile theProjectile"], {}).toCompletionItem(),
				new MTAFunction(1, "getPedTargetStart", "This function allows retrieval of the position a ped's target range begins, when he is aiming with a weapon.", "float float float", ["ped targetingPed"], {}).toCompletionItem(),
				new MTAFunction(1, "toggleObjectRespawn", "This function is used to toggle if an object should respawn after it got destroyed", "bool", ["object theObject", "bool respawn"], {}).toCompletionItem(),
				new MTAFunction(1, "getPedControlState", "Checks whether a ped has a certain control pressed.", "bool", ["ped thePed", "string control"], {}).toCompletionItem(),
				new MTAFunction(1, "triggerLatentServerEvent", "This function is the same as triggerServerEvent except the transmission rate of the data contained in the arguments can be limited and other network traffic is not blocked while the data is being transferred.", "bool", ["string event", "[int bandwidth=5000", "bool persist=false,] element theElement", "[arguments...]"], {}).toCompletionItem(),
				new MTAFunction(1, "guiGetProperty", "This function gets the value of a specific CEGUI property of a GUI element. For a list of properties and their meaning, see the CEGUI properties page.", "string", ["element guiElement", "string property"], {}).toCompletionItem(),
				new MTAFunction(1, "guiGetText", "This function is used to get the text of GUI elements like edit boxes, labels, buttons etc.", "string", ["element guiElement"], {}).toCompletionItem(),
				new MTAFunction(1, "guiBringToFront", "This function brings a GUI element on top of others.", "bool", ["element guiElement"], {}).toCompletionItem(),
				new MTAFunction(1, "getPedTargetEnd", "This function allows retrieval of the position where a ped's target range ends, when he is aiming with a weapon.", "float float float", ["ped targetingPed"], {}).toCompletionItem(),
				new MTAFunction(1, "setElementStreamable", "This function can be used to disable streaming for an element. This will make sure the element is not virtualized (streamed out from GTA) when the player moves far away from it. This function only works in elements with a physical representation in the world (entities), such as players, peds, vehicles and objects.", "bool", ["element theElement", "bool streamable"], {}).toCompletionItem(),
				new MTAFunction(1, "engineLoadCOL", "", "col", ["string col_file / string raw_data"], {}).toCompletionItem(),
				new MTAFunction(1, "setObjectMass", "This function sets the mass of a specified object. Changing the mass leads to a different movement behavior for especially dynamic objects.", "bool", ["object theObject", "float mass"], {}).toCompletionItem(),
				new MTAFunction(1, "setPedVoice", "Changes the voice of a ped.", "bool", ["ped thePed", "string voiceType", "string voiceName"], {}).toCompletionItem(),
				new MTAFunction(1, "setElementMatrix", "", "bool", ["element theElement", "table theMatrix"], {}).toCompletionItem(),
				new MTAFunction(1, "engineRemoveShaderFromWorldTexture", "This function removes a shader from one or more world textures.", "bool", ["element shader", "string textureName [", "element targetElement = nil ]"], {}).toCompletionItem(),
				new MTAFunction(1, "isElementOnScreen", "This function will check if an element is on the screen. Elements behind objects but still in the camera view count as being on screen.", "bool", ["element theElement"], {}).toCompletionItem(),
				new MTAFunction(1, "engineImportTXD", "", "bool", ["txd texture", "int model_id"], {}).toCompletionItem(),
				new MTAFunction(1, "engineGetModelTextureNames", "This function returns a table of the world textures which are applied to the specified model.", "table", ["string modelId = \"\""], {}).toCompletionItem(),
				new MTAFunction(1, "getHelicopterRotorSpeed", "Retrieves the speed at which the rotor of a helicopter rotates.", "float", ["vehicle heli"], {}).toCompletionItem(),
				new MTAFunction(1, "setSearchLightStartPosition", "This function sets the start position of a searchlight element.", "searchlight", ["searchlight theSearchLight", "float startX", "float startY", "float startZ"], {}).toCompletionItem(),
				new MTAFunction(1, "getProjectileType", "This function returns the type of the specified projectile.", "int", ["projectile theProjectile"], {}).toCompletionItem(),
				new MTAFunction(1, "isPlayerHudComponentVisible", "This function can be used to check whether an hud component is visable or not.", "bool", ["string component"], {}).toCompletionItem(),
				new MTAFunction(1, "getInteriorFurnitureEnabled", "This function will tell you if interior furniture are enabled or disabled in a specified room ID.", "bool", ["int roomID"], {}).toCompletionItem(),
				new MTAFunction(1, "setLightDirection", "This function sets the direction for a light element.", "bool", ["light theLight", "float x", "float y", "float z"], {}).toCompletionItem(),
				new MTAFunction(1, "getPedAnalogControlState", "", "float", ["ped thePed", "string controlName"], {}).toCompletionItem(),
				new MTAFunction(1, "getBirdsEnabled", "This function will tell you if the birds are enabled or disabled.", "bool", [""], {}).toCompletionItem(),
				new MTAFunction(1, "getHeliBladeCollisionsEnabled", "This function gets the state of the helicopter blades collisions on the specified vehicle.This example shows the blade collisions state", "bool", ["vehicle theVehicle"], {}).toCompletionItem(),
				new MTAFunction(1, "getInteriorSoundsEnabled", "This function checks to see if the music played by default in clubs is disabled or not.", "bool", [""], {}).toCompletionItem(),
				new MTAFunction(1, "getGaragePosition", "This function outputs X, Y and Z position of given garage.This element has to create a blip at the nearest garage and removes it in 10 seconds.", "float, float, float", ["int garageID"], {}).toCompletionItem(),
				new MTAFunction(1, "engineGetModelLODDistance", "This function gets the LOD distance for any object / model ID.", "float", ["int model"], {}).toCompletionItem(),
				new MTAFunction(1, "engineSetAsynchronousLoading", "This function enables or disables asynchronous model loading. Enabling asynchronous model loading may reduce the small pauses that occur when a new model is displayed for the first time. However, it can cause the new models to appear slightly later than they might have otherwise.", "bool", ["bool enable", "bool force"], {}).toCompletionItem(),
				new MTAFunction(1, "engineRestoreCOL", "This function restores the original collision model of the given model ID. Reverses the effect of engineReplaceCOL.Client-Side example for restoring object collision with default one.Server-side example function for triggering the restore.", "bool", ["int modelID"], {}).toCompletionItem(),
				new MTAFunction(1, "engineLoadTXD", "", "txd", ["string txd_file / string raw_data [", "bool filteringEnabled = true ]"], {}).toCompletionItem(),
				new MTAFunction(1, "engineReplaceCOL", "Client-Side example for replacing object collision with custom one.Server-side example function for triggering the replace.", "bool", ["col theCol", "int modelID"], {}).toCompletionItem(),
				new MTAFunction(1, "guiSetInputMode", "This function controls the input mode to define whether or not (and when) keybinds or MTA binds are overridden (disabled) so that text can be input into an editbox, for example.The binds can be either:", "bool", ["string mode"], {}).toCompletionItem(),
				new MTAFunction(1, "engineLoadDFF", "", "dff", ["string dff_file / string raw_data"], {}).toCompletionItem(),
				new MTAFunction(1, "getPedMoveState", "Example 1: This example shows how you can output a players current movestate.", "string", ["ped thePed"], {}).toCompletionItem(),
				new MTAFunction(1, "engineGetModelNameFromID", "This function gets the model name of an object model from model ID.", "string", ["int modelID"], {}).toCompletionItem(),
				new MTAFunction(1, "guiGetAlpha", "Alpha represents the transparency of a gui element. This function allows retrieval of a gui element's current alpha.", "float", ["element guiElement"], {}).toCompletionItem(),
				new MTAFunction(1, "engineRestoreModel", "This function restores the visual DFF model of the given model ID. This restores the result of engineReplaceModel.Client-Side example for restoring model / vehicle.Server-Side example for triggering model / vehicle restore function with \"restore\" command.", "bool", ["int modelID"], {}).toCompletionItem(),
				new MTAFunction(1, "engineApplyShaderToWorldTexture", "This function applies a shader to one or more world textures.", "bool", ["element shader", "string textureName [", "element targetElement = nil", "bool appendLayers = true ]"], {}).toCompletionItem(),
				new MTAFunction(1, "getChatboxLayout", "Returns information about how the chatbox looks.", "bool/int/table", ["[ string CVar ]"], {}).toCompletionItem(),
				new MTAFunction(1, "engineGetModelIDFromName", "This function gets the model ID of an object model from object name. This function is the inverse of engineGetModelNameFromID", "int", ["string modelName"], {}).toCompletionItem(),
				new MTAFunction(1, "engineSetModelLODDistance", "This function sets a custom LOD distance for any object / model ID. This is the distance at which objects of that model ID are switched to their LOD model, or (if there is no LOD model) become invisible.", "bool", ["int model", "float distance"], {}).toCompletionItem(),
				new MTAFunction(1, "guiSetVisible", "This function changes the visibility state of a GUI element.", "bool", ["element guiElement", "bool state"], {}).toCompletionItem(),
				new MTAFunction(1, "guiSetSize", "This function sets the dimensions (size) of a GUI element. It refers to the bounding box size for GUI elements. It does not make GUI elements smaller or larger in appearance.", "bool", ["element guiElement", "float width", "float height", "bool relative"], {}).toCompletionItem(),
				new MTAFunction(1, "createSWATRope", "Creates a SWAT rope like that of the rope in single player used by SWAT Teams abseiling from the Police Maverick.", "bool", ["float fx", "float fy", "float fZ", "int duration"], {}).toCompletionItem(),
				new MTAFunction(1, "getGarageSize", "This function outputs the size of garage.This example adds the command /garagesize <garage ID>", "float, float, float", ["int garageID"], {}).toCompletionItem(),
				new MTAFunction(1, "getBoundKeys", "Returns a list of key names that are bound to the specified game control or console command.", "table", ["string command/control"], {}).toCompletionItem(),
				new MTAFunction(1, "getKeyState", "This function determines if a certain key is pressed or not.", "bool", ["string keyName"], {}).toCompletionItem(),
				new MTAFunction(1, "setLightColor", "This function sets the color for a light element.", "bool", ["light theLight", "float r", "float g", "float b"], {}).toCompletionItem(),
				new MTAFunction(1, "createLight", "This function creates a 3D light in the world.", "light", ["int lightType", "float posX", "float posY", "float posZ [", "float radius = 3", "int r = 255", "int g = 0", "int b = 0", "float dirX = 0", "float dirY = 0", "float dirZ = 0", "bool createsShadow = false ]"], {}).toCompletionItem(),
				new MTAFunction(1, "isChatBoxInputActive", "This function returns whether the ingame chatbox is being used (accepting chatbox input) or not.", "bool", [""], {}).toCompletionItem(),
				new MTAFunction(1, "getProjectileCreator", "This function returns the creator of the specified projectile.This example will output a message in the chatbox saying who createdthe projectile.", "element", ["projectile theProjectile"], {}).toCompletionItem(),
				new MTAFunction(1, "setDebugViewActive", "This function enables or disables the debug window.", "bool", ["bool enabled"], {}).toCompletionItem(),
				new MTAFunction(1, "getLightType", "This function returns the type for a light element.", "int", ["light theLight"], {}).toCompletionItem(),
				new MTAFunction(1, "getLightDirection", "This function returns the direction for a light element.", "float, float, float", ["light theLight"], {}).toCompletionItem(),
				new MTAFunction(1, "getLightRadius", "This function returns the radius for a light element.", "float", ["light theLight"], {}).toCompletionItem(),
				new MTAFunction(1, "guiSetFont", "This function sets the font of a GUI element to be used when drawing text.", "bool", ["element guiElement", "mixed font"], {}).toCompletionItem(),
				new MTAFunction(1, "getLightColor", "This function returns the color for a light element.", "int, int, int", ["light theLight"], {}).toCompletionItem(),
				new MTAFunction(1, "isMTAWindowActive", "This function returns whether any system windows that take focus are active. This includes:", "bool", [""], {}).toCompletionItem(),
				new MTAFunction(1, "guiGetSize", "This function gets the size of a GUI element.", "float float", ["element theElement", "bool relative"], {}).toCompletionItem(),
				new MTAFunction(1, "getPedOxygenLevel", "This function returns the current oxygen level of the specified ped.This example defines a \"showoxygen\" console command that shows the player that executes it which oxygen level he has.", "float", ["ped thePed"], {}).toCompletionItem(),
				new MTAFunction(1, "guiSetEnabled", "This function enables/disables a GUI element. A disabled GUI element can't be used, gets a gray aspect and doesn't receive any events.", "bool", ["element guiElement", "bool enabled"], {}).toCompletionItem(),
				new MTAFunction(1, "guiSetProperty", "This function sets the value of a specific CEGUI property of a GUI element. For a list of properties and their meaning, see the CEGUI properties page.", "bool", ["element guiElement", "string property", "string value"], {}).toCompletionItem(),
				new MTAFunction(1, "setSearchLightEndPosition", "", "searchlight", ["searchlight theSearchLight", "float endX", "float endY", "float endZ"], {}).toCompletionItem(),
				new MTAFunction(1, "getSearchLightStartRadius", "", "searchlight", ["searchlight theSearchLight"], {}).toCompletionItem(),
				new MTAFunction(1, "setSearchLightStartRadius", "", "searchlight", ["searchlight theSearchlight", "float startRadius"], {}).toCompletionItem(),
				new MTAFunction(1, "isConsoleActive", "This function returns whether the ingame console window is visible or not.", "bool", [""], {}).toCompletionItem(),
				new MTAFunction(1, "isMainMenuActive", "This function returns whether the user is in the mainmenu or not.", "bool", [""], {}).toCompletionItem(),
				new MTAFunction(1, "guiSetInputEnabled", "This function enables or disables input focus for the GUI. This means that any keybinds or MTA binds are overidden so that text can be input into an editbox, for example. In other words, keys such as t and y which activate the chatbox are disabled.", "bool", ["bool enabled"], {}).toCompletionItem(),
				new MTAFunction(1, "createSearchLight", "This function creates a searchlight. A searchlight is a spotlight which looks like the one available in the Police Maverick.", "searchlight", ["float startX", "float startY", "float startZ", "float endX", "float endY", "float endZ", "float startRadius", "float endRadius [", "bool renderSpot = true ]"], {}).toCompletionItem(),
				new MTAFunction(1, "isDebugViewActive", "This function returns whether the ingame debug window is visible or not. This is the debugwindow visible using the \"debugscript <level>\" command.", "bool", [""], {}).toCompletionItem(),
				new MTAFunction(1, "setSearchLightEndRadius", "", "searchlight", ["searchlight theSearchlight", "float endRadius"], {}).toCompletionItem(),
				new MTAFunction(1, "getProjectileCounter", "Get the time left before a projectile detonates.With this example you can find out how long does it take for a projectile to explode/end", "int", ["projectile projectile"], {}).toCompletionItem(),
				new MTAFunction(1, "guiSetText", "This function sets the text of a GUI element.", "bool", ["element guiElement", "string text"], {}).toCompletionItem(),
				new MTAFunction(1, "getProjectileForce", "This function returns the force of the specified projectile.", "float", ["projectile theProjectile"], {}).toCompletionItem(),
				new MTAFunction(1, "getSearchLightStartPosition", "", "searchlight", ["searchlight theSearchLight"], {}).toCompletionItem(),
				new MTAFunction(1, "setPedCanBeKnockedOffBike", "This function controls if a ped can fall of his bike by accident - namely by banging into a wall.", "bool", ["ped thePed", "bool canBeKnockedOffBike"], {}).toCompletionItem(),
				new MTAFunction(1, "guiSetPosition", "This function sets the position of a GUI element.", "bool", ["element theElement", "float x", "float y", "bool relative"], {}).toCompletionItem(),
				new MTAFunction(1, "Vector2", "The Vector2 class is a class introduced in 1.4", "vector2", ["float x = 0", "float y = 0"], {}).toCompletionItem(),
				new MTAFunction(1, "Matrix", "Matrices are one of the most powerful features of MTA OOP. We did have a presence of Matrices before with getElementMatrix, but we were given an ugly disgusting table to play with. Now, with the new Matrix class, we can make and magically manipulate Matrices.", "matrix", ["Vector3 position[", "Vector3 rotation]"], {}).toCompletionItem(),
				new MTAFunction(1, "setPedAnalogControlState", "Sets an analog state of a specified ped's control, as if they pressed or released it.", "bool", ["ped thePed", "string control", "float state"], {}).toCompletionItem(),
				new MTAFunction(1, "setPedLookAt", "", "bool", ["ped thePed", "float x", "float y", "float z [", "int time = 3000 [", "int blend = 1000 ]", "element target = nil ]"], {}).toCompletionItem(),
				new MTAFunction(1, "isTransferBoxActive", "This function returns whether the file downloading dialog box is active or not. This appears when a resource is started and the client doesn't have all the files that resource requires the client to have.", "bool", [""], {}).toCompletionItem(),
				new MTAFunction(1, "getPedBonePosition", "Returns the 3D world coordinates of a specific bone of a given ped.", "float float float", ["ped thePed", "int bone"], {}).toCompletionItem(),
				new MTAFunction(1, "setObjectBreakable", "This function sets an object to be breakable/unbreakable.", "bool", ["object theObject", "bool breakable"], {}).toCompletionItem(),
				new MTAFunction(1, "breakObject", "This function breaks a specific object.", "bool", ["object theObject"], {}).toCompletionItem(),
				new MTAFunction(1, "Vector4", "The Vector4 class is a class introduced in 1.4", "vector4", ["float x = 0", "float y = 0", "float z = 0", "float w = 0"], {}).toCompletionItem(),
				new MTAFunction(1, "getPedCameraRotation", "", "float", ["ped thePed"], {}).toCompletionItem(),
				new MTAFunction(1, "isObjectBreakable", "This function checks if an object is breakable.", "bool", ["object theObject"], {}).toCompletionItem(),
				new MTAFunction(1, "respawnObject", "This function respawns a specific object.", "bool", ["object theObject"], {}).toCompletionItem(),
				new MTAFunction(1, "getPedSimplestTask", "This function is used to get the name of a specified ped's current simplest task.", "string", ["ped thePed"], {}).toCompletionItem(),

				//**************** SHARED FUNCTIONS *******************//

				new MTAFunction(2, "xmlLoadFile", "This function provides an alternative way to load XML files to getResourceConfig.This function loads an XML file and returns the node by specifying a specific file path, while getResourceConfig allows for loading an XML file from a resource.Print error if something wrong with xml.", "xmlnode", [" string filePath "], {}).toCompletionItem(),
				new MTAFunction(2, "xmlNodeSetAttribute", "This function is used to edit an attribute of a node in a configuration file.In a gamemode, we want a command to change the marker color in the configuration file and remove a deprecated attribute.", "bool", [" xmlnode node", "string name", "string/float value "], {}).toCompletionItem(),
				new MTAFunction(2, "getMarkerIcon", "This function returns the icon name for a marker.", "string", [" marker theMarker "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.ncasecmp", "This example shows a simple comparsion of two different strings.This example shows how to greet a player, when he write 'hello' into the chat.", "int", [" string a", "string b "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.reverse", "This example shows how to reverse a UTF-8 string.", "string", [" string input "], {}).toCompletionItem(),
				new MTAFunction(2, "setBlipIcon", "This function sets the icon for an existing blip element.", "bool", [" blip theBlip", "int icon "], {}).toCompletionItem(),
				new MTAFunction(2, "getAircraftMaxHeight", "This function gets the maximum height at which aircraft can fly without their engines turning off.This example returns the max aircraft height to a player if they use the command 'aircraftmaxheight'.", "float", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "xmlNodeGetValue", "In this example a sample value is returned from a XML file. This shows an example of a clientside XML file. You can use this to store user preferences and load them the next time the script loads. Almost always, you should have an options GUI for clients to interact with to set these values. Since the XML will change, it should NOT be included in the resource's meta.xml file. MTA will think that file is corrupted and will download it again from the server. Instead, you should create the XML within the script, and then load it within the script on future script runs if it exists.", "string", [" xmlnode theXMLNode "], {}).toCompletionItem(),
				new MTAFunction(2, "createVehicle", "This example creates a vehicle five units to the right of a player when they type createvehicle and its name in the console:This script spawns a Rhino on top of one lucky individual.This example adds a /spveh command to spawn a car model in the provided coordinates. If any car created by this command gets blown up, it will respawn where it was created.This script spawns a Rhino on top of the local player.This is an example of how this function is executed in an OOP environment.This script will create an Infernus at the center (0, 0, 3) of San Andreas upon execution.", "vehicle", [" int model", "float x", "float y", "float z [", "float rx", "float ry", "float rz", "string numberplate", "bool bDirection", "int variant1", "int variant2 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "createBlip", "This function creates a blip element, which is displayed as an icon on the client's radar.Example 1: This example creates a radar blip at a random player's position and makes it so that it is only visible to that player.", "blip", [" float x", "float y", "float z [", "int icon = 0", "int size = 2", "int r = 255", "int g = 0", "int b = 0", "int a = 255", "int ordering = 0", "float visibleDistance = 99999.0", "visibleTo = getRootElement( ) ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getAttachedElements", "This function returns a table of all the elements attached to the specified element", "table", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "getPickupAmount", "This function retrieves the amount of health or armor given from a pickup.", "int", [" pickup thePickup "], {}).toCompletionItem(),
				new MTAFunction(2, "getBlipColor", "This function will tell you what color a blip is. This color is only applicable to the default blip icon (, or ). All other icons will ignore this.", "int int int int", [" blip theBlip "], {}).toCompletionItem(),
				new MTAFunction(2, "setBlipSize", "This function sets the size of a blip's icon.", "bool", [" blip theBlip", "int iconSize "], {}).toCompletionItem(),
				new MTAFunction(2, "setPlayerNametagColor", "This allows you to change the RGB color mixture in the name tags of players.", "bool", [" player thePlayer", "int r", "int g", "int b "], {}).toCompletionItem(),
				new MTAFunction(2, "setBlipColor", "This function will let you change the color of a blip. This color is only applicable to the default blip icon (, or ). All other icons will ignore this.", "bool", [" blip theBlip", "int red", "int green", "int blue", "int alpha "], {}).toCompletionItem(),
				new MTAFunction(2, "getPickupWeapon", "This function retrieves the weapon ID of a weapon pickup.", "int", [" pickup thePickup "], {}).toCompletionItem(),
				new MTAFunction(2, "getBlipIcon", "This function returns the icon a blip currently has.", "int", [" blip theBlip "], {}).toCompletionItem(),
				new MTAFunction(2, "addPedClothes", "This example adds a 'moto' helmet to a player when he gets on a nrg bike, and removes it when he gets off.", "bool", [" ped thePed", "string clothesTexture", "string clothesModel", "int clothesType "], {}).toCompletionItem(),
				new MTAFunction(2, "getBlipOrdering", "This function gets the Z ordering value of a blip. The Z ordering determines if a blip appears on top of or below other blips. Blips with a higher Z ordering value appear on top of blips with a lower value. The default value for all blips is 0.", "int", [" blip theBlip "], {}).toCompletionItem(),
				new MTAFunction(2, "createBlipAttachedTo", "This function creates a blip that is attached to an element. This blip is displayed as an icon on the client's radar and will 'follow' the element that it is attached to around.This example creates a radar blip attached to a random player, visible to everyone. The blip will follow the player around as they move. This could be used for manhunt, to emphasise a random player.", "blip", [" element elementToAttachTo [", "int icon = 0", "int size = 2", "int r = 255", "int g = 0", "int b = 0", "int a = 255", "int ordering = 0", "float visibleDistance = 99999.0", "visibleTo = getRootElement( ) ] "], {}).toCompletionItem(),
				new MTAFunction(2, "detachElements", "This function detaches attached elements from one another.", "bool", [" element theElement", "[ element theAttachToElement ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementAlpha", "This example outputs whether the player is invisible.", "int", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementAttachedOffsets", "This function returns the offsets of an element that has been attached to another element using attachElements.Example: This example creates a car with a minigun", "float, float, float, float, float, float", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "fadeCamera", "When a player gets damaged, place a quick fade-to-red effect on his screen.", "bool", [" player thePlayer", "bool fadeIn", "[ float timeToFade = 1.0", "int red = 0", "int green = 0", "int blue = 0 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerName", "This function returns a string containing the name of the specified player.This example outputs the local player name to the chatbox.", "string", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "getTypeIndexFromClothes", "This function is used to get the clothes type and index from the texture and model.(Scans through the list of clothes for the specific type).", "int int", [" string clothesTexture", "string clothesModel "], {}).toCompletionItem(),
				new MTAFunction(2, "getClothesByTypeIndex", "This function is used to get the texture and model of clothes by the clothes type and index.(Scans through the list of clothes for the specific type).", "string string", [" int clothesType", "int clothesIndex "], {}).toCompletionItem(),
				new MTAFunction(2, "getBlipSize", "This function gets the size of a blip.", "int", [" blip theBlip "], {}).toCompletionItem(),
				new MTAFunction(2, "getBodyPartName", "This function is used to get the name of a body part on a player.", "string", [" int bodyPartID "], {}).toCompletionItem(),
				new MTAFunction(2, "setPlayerNametagText", "This will change the text of a player's nickname in the world to something besides the nickname he chose. This will not change the player's actual nickname, it only changes the visible aspect inside the world (you will see his original nickname in the scoreboard and will refer to his original name in scripts).This console command lets you change the name tag of lamers.", "bool", [" player thePlayer", "string text "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementID", "This function sets the ID of an element to a string. This can be anything from an identifying number, to a name.You can only change the ID of an element clientside if that element has been created clientside as well.", "bool", [" element theElement", "string name "], {}).toCompletionItem(),
				new MTAFunction(2, "isVoiceEnabled", "Added to client side.This function allows you to make the server reveal whether or not voice is currently enabled.This example shows how to forbid use voice for muted (in chat) players", "bool", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "setBlipOrdering", "This function sets the Z ordering of a blip. It allows you to make a blip appear on top of or below other blips.", "bool", [" blip theBlip", "int ordering "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerWantedLevel", "This function gets a player's current wanted level. The wanted level is indicated by the amount of stars a player has on the GTA HUD.This example finds which players in the server have a wanted level:This script output your wanted level when you type /wanted.", "int", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedClothes", "This example prints the model and texture of the current clothing on the player who enters the \"clothes\" command. For example: \"clothes 3\" for the shoes.", "string string", [" ped thePed", "int clothesType "], {}).toCompletionItem(),
				new MTAFunction(2, "playSoundFrontEnd", "This example plays a sound when a player spawns.This example plays a sound when the player types the command '/sound'.", "bool", [" player thePlayer", "int sound "], {}).toCompletionItem(),
				new MTAFunction(2, "getClothesTypeName", "This function is used to get the name of a certain clothes type.", "string", [" int clothesType "], {}).toCompletionItem(),
				new MTAFunction(2, "createColSphere", "This function creates a collision sphere. This is a shape that has a position and a radius. See Wikipedia for a definition of a sphere.Example 1: This example displays a chat message when a player enters the colshape and allows the colshape to be created using a console function set_zone.", "colshape", [" float fX", "float fY", "float fZ", "float fRadius "], {}).toCompletionItem(),
				new MTAFunction(2, "createColCircle", "This function creates a collision circle. This is a shape that has a position and a radius and infinite height that you can use to detect a player's presence. Events will be triggered when a player enters or leaves it.This example displays a chat message when a player enters the colshape and allows the colshape to be created using a console function set_zone.", "colshape", [" float fX", "float fY", "float radius "], {}).toCompletionItem(),
				new MTAFunction(2, "createColRectangle", "This function creates a collision rectangle. This is a shape that has a position and a width and a depth. See Rectangle for a definition of a rectangle. XY marks on the south west corner of the colshape.This example displays a chat message when a player enters the colshape and allows the colshape to be created using a console function set_zone.", "colshape", [" float fX", "float fY", "float fWidth", "float fHeight"], {}).toCompletionItem(),
				new MTAFunction(2, "isCursorShowing", "This function is used to determine whether or not a player's cursor is showing.This serverside function toggles a player's cursor state.With little of tweaking this can also be used clientside", "bool", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "showCursor", "This function is used to show or hide a player's cursor.This example shows the cursor for a player named \"Dave\", then outputs a message if it was shown successfully.This example shows the cursor all the time", "bool", [" player thePlayer", "bool show", "[ bool toggleControls = true ] "], {}).toCompletionItem(),
				new MTAFunction(2, "removeEventHandler", "This functions removes a handler function from an event, so that the function is not called anymore when the event is triggered. See event system for more information on how the event system works.This example shows how to toggle a message on/off a screen with a command.", "bool", [" string eventName", "element attachedTo", "function functionVar "], {}).toCompletionItem(),
				new MTAFunction(2, "xmlNodeGetAttribute", "This function is used to return an attribute of a node in a configuration file.", "string", [" xmlnode node", "string name "], {}).toCompletionItem(),
				new MTAFunction(2, "xmlDestroyNode", "This function destroys a XML node from the XML node tree.This example will add a command called '/delnode' and it will create an xml file called 'test.xml'.", "bool", [" xmlnode theXMLNode "], {}).toCompletionItem(),
				new MTAFunction(2, "triggerEvent", "This function will trigger a named event on a specific element in the element tree. See event system for more information on how the event system works.", "bool", [" string eventName", "element baseElement", "[ var argument1", "... ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementDimension", "This function allows you to retrieve the dimension of any element. The dimension determines what/who the element is visible to.", "int", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementAttachedOffsets", "This function updates the offsets of an element that has been attached to another element using attachElements.Example: This example creates a car with a minigun", "bool", [" element theElement", "[ float xPosOffset", "float yPosOffset", "float zPosOffset", "float xRotOffset", "float yRotOffset", "float zRotOffset ]"], {}).toCompletionItem(),
				new MTAFunction(2, "setElementVelocity", "This example adds a function which copies the speed of a random player to another random player. If there are less than 2 players it returns false.", "bool", [" element theElement", "float speedX", "float speedY", "float speedZ "], {}).toCompletionItem(),
				new MTAFunction(2, "getEventHandlers", "This function gets the attached functions from the event and attached element from current lua script.", "table", [" string eventName", "element attachedTo "], {}).toCompletionItem(),
				new MTAFunction(2, "fileExists", "This functions checks whether a specified file exists inside a resource.", "bool", [" string filePath "], {}).toCompletionItem(),
				new MTAFunction(2, "getMarkerTarget", "This function returns the position of the specified marker's target, the position it points to. This only works for checkpoint markers and ring markers. For checkpoints it returns the position the arrow is pointing to, for ring markers it returns the position the ring is facing. You can set this target with setMarkerTarget.", "float float float", [" marker theMarker "], {}).toCompletionItem(),
				new MTAFunction(2, "cancellatentevent", "Stops a latent event from completing", "????", [], {}).toCompletionItem(),
				new MTAFunction(2, "setMarkerType", "This function changes a marker's type. The type controls how the marker is displayed in the game. It's important that you use marker types that users are used to from the single player game. For example, checkpoints are used in races, rings are used for aircraft races, arrows are used for entering buildings etc.", "bool", [" marker theMarker", "string markerType "], {}).toCompletionItem(),
				new MTAFunction(2, "createColTube", "This function creates a collision tube. This is a shape that has a position and a 2D (X/Y) radius and a height. See Cylinder for a definition of a tube. A tube is similar to a colcircle, except that it has a limited height, this means you can limit the distance above the position defined by (fX, fY, fZ) that the collision is detected.This example displays a chat message when a player enters the colshape and allows the colshape to be created using a console function set_zone.", "colshape", [" float fX", "float fY", "float fZ", "float fRadius", "float fHeight"], {}).toCompletionItem(),
				new MTAFunction(2, "fileClose", "Closes a file handle obtained by fileCreate or fileOpen.", "bool", [" file theFile "], {}).toCompletionItem(),
				new MTAFunction(2, "fileDelete", "Deletes the specified file.", "bool", [" string filePath "], {}).toCompletionItem(),
				new MTAFunction(2, "isElementAttached", "This functions checks whether or not an element is attached to another element.", "bool", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "takePlayerMoney", "This function subtracts money from a player's current money amount.This example takes money from a player when he types \"takecash number\" in the console.", "bool", [" player thePlayer", "int amount "], {}).toCompletionItem(),
				new MTAFunction(2, "createObject", "This example creates an object when the resource starts:This example creates an object near player who write createObject:", "object", [" int modelid", "float x", "float y", "float z", "[ float rx", "float ry", "float rz", "bool isLowLOD = false ] "], {}).toCompletionItem(),
				new MTAFunction(2, "setMarkerTarget", "This function sets the 'target' for a marker. Only the checkpoint and ring marker types can have a target.", "bool", [" marker theMarker", "float x", "float y", "float z "], {}).toCompletionItem(),
				new MTAFunction(2, "fileCopy", "This example copies a file called 'test.txt' and called it 'test1.txt'.This example copies a file called 'test.txt' and called it 'test1.txt'.", "bool", [" string filePath", "string copyToFilePath [", "bool overwrite = false ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getLatentEventHandles", "", "table", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "cancelEvent", "This function is used to stop the automatic internal handling of events, for example this can be used to prevent an item being given to a player when they walk over a pickup, by canceling the onPickupUse event. This example stops the player huntedPlayer from entering a vehicle:This example prevents any damage to a player clientside by making cancelEvent an event handler for the onClientPlayerDamage event.", "bool", [" [ bool cancel = true", "string reason = \"\" ] "], {}).toCompletionItem(),
				new MTAFunction(2, "createColCuboid", "This function creates a collision cuboid. This is a shape that has a position, width, depth and height. See Wikipedia for a definition of a cuboid. The XYZ of the col starts at the southwest bottom corner of the shape.This example displays a chat message when a player enters the colshape and allows the colshape to be created using a console function set_zone.", "colshape", [" float fX", "float fY", "float fZ", "float fWidth", "float fDepth", "float fHeight "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementType", "This example destroys a haystack when a player targets it", "string", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "attachElements", "This function attaches one element to another, so that the first one follows the second whenever it moves. Example 1: This example attaches a marker to the player who steals the Mr. Whoopee:Example 3: This function adds a tank on top of a player (for extra defense), clientside. This means it will be invisible to other players.", "bool", [" element theElement", "element theAttachToElement", "[ float xPosOffset = 0", "float yPosOffset = 0", "float zPosOffset = 0", "float xRotOffset = 0", "float yRotOffset = 0", "float zRotOffset = 0 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "removePedClothes", "This function is used to remove the current clothes of a certain type on a ped. It will remove them if the clothesTexture and clothesModel aren't specified, or if they match the current clothes on that slot.This example adds a 'moto' helmet to a player when he gets on a nrg bike, and removes it when he gets off.", "bool", [" ped thePed", "int clothesType", "[ string clothesTexture", "string clothesModel ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getlatenteventstatus", "Gets the status of one queued latent event.The example starts a latent event and outputs the status of the transfer to the client console", "????", [], {}).toCompletionItem(),
				new MTAFunction(2, "setElementInterior", "In this example, if a player were to type /interior 1, they would be teleported into this interiorIn this example, if a player were to type /interior 1, they would be teleported into this interior", "bool", [" element theElement", "int interior [", "float x", "float y", "float z] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementChildren", "This function is used to retrieve a list of the child elements of a given parent element. Note that it will only return direct children and not elements that are further down the element tree.", "table", [" element parent [", "string theType = nil ] "], {}).toCompletionItem(),
				new MTAFunction(2, "createElement", "This function is used to create a new dummy element in the element tree which do not necessarily represent an entity within the San Andreas world. A common use for this function is for creating custom elements, such as a Flag or a Base.", "element", [" string elementType", "[ string elementID = nil ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getTrainDirection", "Gets the direction in which a train is driving (clockwise or counterclockwise).", "bool", [" vehicle train "], {}).toCompletionItem(),
				new MTAFunction(2, "fileCreate", "Creates a new file in a directory of a resource. If there already exists a file with the specified name, it is overwritten with an empty file.", "file", [" string filePath "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementCallPropagationEnabled", "This function enables/disables call propagation on a certain element. Look at the example for a practical application.", "bool", [" element theElement", "bool enabled "], {}).toCompletionItem(),
				new MTAFunction(2, "destroyElement", "This function destroys an element and all elements within it in the hierarchy (its children, the children of those children etc). Player elements cannot be destroyed using this function. A player can only be removed from the hierarchy when they quit or are kicked. The root element also cannot be destroyed, however, passing the root as an argument will wipe all elements from the server, except for the players and clients, which will become direct descendants of the root node, and other elements that cannot be destroyed, such as resource root elements.", "bool", [" element elementToDestroy "], {}).toCompletionItem(),
				new MTAFunction(2, "getSlotFromWeapon", "This function allows you to identify the weapon slot that a weapon belongs to.", "int", [" int weaponid "], {}).toCompletionItem(),
				new MTAFunction(2, "getOriginalHandling", "This example creates a new function called getVehicleOriginalProperty, which simulates the previous syntax of this function.", "table", [" int modelID "], {}).toCompletionItem(),
				new MTAFunction(2, "createWater", "Example code for creating a water area to cover the entire San Andreas Map (flood the cities). Also, setWaterLevel is used to raise the existing rivers and lakes.This example creates water at the given coordinates and sets the height of the water level to 20 for when the client joins.This example fills the Easter Basin with water.", "water", [" int x1", "int y1", "float z1", "int x2", "int y2", "float z2", "int x3", "int y3", "float z3 [", "int x4", "int y4", "float z4 ] [", "bool bShallow = false ] "], {}).toCompletionItem(),
				new MTAFunction(2, "createExplosion", "Creates an explosion of a certain type at a specified point in the world. If creator is specified, the explosion will occur only in its dimension.Example 1: This code will create an explosion at the player's position when they spawn.Example 1: This code will create an explosion for the local player when they spawn.", "bool", [" float x", "float y", "float z", "int theType [", "player creator = nil ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementByID", "This function returns an element from the specified ID. If more than one element with the same ID exists, only the first one in the order it appears in the XML tree will be returned by this function.", "element", [" string id [", "int index = 0 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementModel", "This example destroys a haystack when a player targets it.This example prints out a message when a Shamal or AT-400 is entered by a player.", "int", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementCollisionsEnabled", "This function indicates if a specific element is set to have collisions disabled. An element without collisions does not interact with the physical environment and remains static.", "bool", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementData", "This function retrieves element data attached to an element under a certain key.", "var", [" element theElement", "string key [", "inherit = true] "], {}).toCompletionItem(),
				new MTAFunction(2, "setLowLODElement", "This function assigns a low LOD element to an element. The low LOD element is displayed when its associated element is not fully visible. If a low LOD element is assigned to several elements, it will be displayed when any of these elements are not fully visible.This example shows how to create and link a normal and low LOD object:This example shows how to create and link a composite objectChanging the draw distance for a model has to be done on the client:", "bool", [" element theElement", "element lowLODElement "], {}).toCompletionItem(),
				new MTAFunction(2, "addEvent", "This function allows you to register a custom event. Custom events function exactly like the built-in events. See event system for more information on the event system.", "bool", [" string eventName [", "bool allowRemoteTrigger = false ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementAttachedTo", "This example defines a console command that outputs the type of the element that the player is attached to.", "element", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "wasEventCancelled", "This function checks if the last completed event was cancelled. This is mainly useful for custom events created by scripts.", "bool", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "addEventHandler", "This serverside example sends a message to everyone in the server when a player spawns.", "bool", [" string eventName", "element attachedTo", "function handlerFunction", "[ bool getPropagated = true", "string priority = \"normal\" ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementHealth", "This example outputs the health of the player who enters the command 'showhealth', and their vehicle's health.", "float", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementData", "This example allows a player to add a custom tag onto their nickname, and also reverts it back to normal if they wish.", "bool", [" element theElement", "string key", "var value [", "bool synchronize = true ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementChild", "This function returns one of the child elements of a given parent element. The child element is selected by its index (0 for the first child, 1 for the second and so on).", "element", [" element parent", "int index "], {}).toCompletionItem(),
				new MTAFunction(2, "fileFlush", "Forces pending disk writes to be executed. fileWrite doesn't directly write to the hard disk but places the data in a temporary buffer; only when there is enough data in the buffer it is actually written to disk. Call this function if you need the data written right now without closing the file. This is useful for log files that might want to be read while the resource is still executing. fileFlush can be called after each log entry is written. Without this, the file may appear empty or outdated to the user.", "bool", [" file theFile "], {}).toCompletionItem(),
				new MTAFunction(2, "getMarkerCount", "Returns the number of markers that currently exist in the world.", "int", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "getMarkerSize", "This function returns a float containing the size of the specified marker.", "float", [" marker myMarker "], {}).toCompletionItem(),
				new MTAFunction(2, "setMarkerIcon", "", "bool", [" marker theMarker", "string icon "], {}).toCompletionItem(),
				new MTAFunction(2, "bindKey", "This alternative syntax allows you to bind a key with a command. This will also allow users to customize the control in their Settings menu. Use in conjunction with addCommandHandler to add handler functions to the keybind.This alternative syntax allows you to bind a key with a command. This will also allow users to customize the control in their Settings menu. Use in conjunction with addCommandHandler to add handler functions to the keybind.This example will bind a player's 'F1' key and 'fire' control to 1 input function.This example will bind a player's 'F1' key and 'fire' control to 1 input function, clientside.This example says how cool is the MTA:SA is if players wants to move.", "bool", [" player thePlayer", "string key", "string keyState", "function handlerFunction", "[ var arguments", "... ] "], {}).toCompletionItem(),
				new MTAFunction(2, "isPedChoking", "This function checks if the specified ped is choking (coughing) or not. This happens as a result of weapons that produce smoke - smoke grenades, fire extinguisher and the spray can. This example checks if a random player is choking or not, and if so displays a message in the chat box.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementParent", "Consider the following map file:", "element", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementMatrix", "-- create a Ped (0, 0, 5, 0) and put the player to 10 m of distance, front to front", "table", [" element theElement [", "bool legacy = true ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementsWithinColShape", "This function is used to retrieve a list of all elements in a colshape, of the specified type. Please note that for legacy reasons, a colshape created on the client does not collide with elements already existing at that location until they first move. Please also note that before 1.0.3, this did not function correctly when moving a colshape", "table", [" colshape shape", "[ string elemType = nil ] "], {}).toCompletionItem(),
				new MTAFunction(2, "setPedWalkingStyle", "Sets the walking style of a ped. A walking style consists of a set of animations that are used for walking, running etc.Changes the walking style of the player to Drunkman when the resource is started", "bool", [" ped thePed", "int style "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementColShape", "This example creates a marker inside Toreno's house and adds a command to check whether you are standing on it.", "colshape", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "setMarkerSize", "This function sets the size of the specified marker.", "bool", [" marker theMarker", "float size "], {}).toCompletionItem(),
				new MTAFunction(2, "getMarkerColor", "This function returns the color and transparency for a marker element. Not all marker types support transparency.This example script fully heals players who hit a white marker, and kills players who hit a red one.", "int, int, int, int", [" marker theMarker "], {}).toCompletionItem(),
				new MTAFunction(2, "createMarker", "This function creates a marker. A marker is a 3D model in the world that can highlight a particular point or area, often used to instruct players where to go to perform actions such as entering buildings.This example creates a marker next to the player when they type 'createmarker':", "marker", [" float x", "float y", "float z [", "string theType = \"checkpoint\"", "float size = 4.0", "int r = 0", "int g = 0", "int b = 255", "int a = 255", "visibleTo = getRootElement( ) ] "], {}).toCompletionItem(),
				new MTAFunction(2, "stopObject", "This will allow you to stop an object that is currently moving.", "bool", [" object theobject "], {}).toCompletionItem(),
				new MTAFunction(2, "unbindKey", "Removes an existing key bind from the specified player.This function binds the player's F1 key to a function goMoo which outputs a chat message when pressed. The key is then unbound so that it can effectively only be used once per life.", "bool", [" player thePlayer", "string key", "string keyState", "string command "], {}).toCompletionItem(),
				new MTAFunction(2, "moveObject", "This function will smoothly move an object from its current position to a specified rotation and position.Example 1: This example moves every object in the game up 100 units in ten seconds.Example 2: This example created a model (of a bed) near a player called someguy, if they exist in the game. It will then move the model towards the player over 3 seconds.Example 3: This example creates a ball moving (in front of CJ's house in Grove Street) using easing functions. Test command is \"/smove\" for instance \"/smove OutBounce\". This example is a serverside code but the same could be done clientside (adapting the command handler)Example 4: This example move a gate with easing.", "bool", [" object theObject", "int time", "float targetx", "float targety", "float targetz", "[ float moverx", "float movery", "float moverz", "string strEasingType", "float fEasingPeriod", "float fEasingAmplitude", "float fEasingOvershoot ] "], {}).toCompletionItem(),
				new MTAFunction(2, "setObjectScale", "This function changes the visible size of an object.", "bool", [" object theObject", "float scale [", "float scaleY", "float scaleZ ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedAmmoInClip", "This function returns an integer that contains the ammo in a specified ped's weapon. See Weapon Info", "int", [" ped thePed [", "int weaponSlot = current ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getMarkerType", "This function returns a marker's type.This function creates a default marker at a given position and outputs its type.", "string", [" marker theMarker "], {}).toCompletionItem(),
				new MTAFunction(2, "createPed", "Creates a Ped in the GTA world.This example creates an ped when the resource starts:This example creates a ped, and makes it damage proof:", "ped", [" int modelid", "float x", "float y", "float z [", "float rot = 0.0", "bool synced = true ] "], {}).toCompletionItem(),
				new MTAFunction(2, "setPedAnimation", "This example creates a ped, rotates him, and makes him walk:This example makes the player sit down and remain seated.", "bool", [" ped thePed [", "string block=nil", "string anim=nil", "int time=-1", "bool loop=true", "bool updatePosition=true", "bool interruptable=true", "bool freezeLastFrame=true", "int blendTime=250] "], {}).toCompletionItem(),
				new MTAFunction(2, "isPedDucked", "This function checks if the specified ped is ducked (crouched) or not.This example checks if a random player is ducked or not, and if so displays a message in the chat box.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "getTeamName", "This function gets the team name of a team object.", "string", [" team theTeam "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.escape", "This example escapes two byte-string literals to UTF-8 format by using the utf8.escape function.", "string", [" string input "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.byte", "This example will print every codepoint in the input string to the server console.This example will print the codepoint of the first character (read: 'M') in the string literal.", "int,...", [" string input [", "int i=1", "int j=1 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.charpos", "This example takes the second codepoint character and shows the byte-string position and the codepoint character code.This example extracts the first character by calculating the character length with the UTF8 functions and the inbuilt Lua function string.sub, which processes byte strings.", "int, int", [" string input [[", "int charpos = 0 ]", "int offset = 1 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.find", "This example shows how to search for parts of a string.", "string", [" string input", "string pattern [", "int startpos = 1", "boolean plain = false ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getTrainSpeed", "This example outputs how fast a player is going if they're in a train. The command is \"/speed\".", "float", [" vehicle train "], {}).toCompletionItem(),
				new MTAFunction(2, "getTeamFriendlyFire", "This function tells you if friendly fire is turned on for the specified team.", "bool", [" team theTeam "], {}).toCompletionItem(),
				new MTAFunction(2, "getTeamFromName", "This function finds a team object by the team's name.", "team", [" string teamName "], {}).toCompletionItem(),
				new MTAFunction(2, "base64decode", "This function returns the decrypted data from base64 representation of the encrypted block", "????", [], {}).toCompletionItem(),
				new MTAFunction(2, "adddebughook", "This function allows tracing of MTA functions and events. It should only be used when debugging scripts as it may degrade script performance.This example shows how to disable addDebugHook", "????", [], {}).toCompletionItem(),
				new MTAFunction(2, "outputDebugString", "This script notifies when its resource has been loaded using a debug message:", "bool", [" string text", "[ int level=3", "int red=255", "int green=255", "int blue=255 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.gsub", "This example shows how to remove color codes from a string and how to uppercase each single character in a string.This example uses a table to replace specific words in the input string by an other value.This example shows a simple bad word filter, which censors the word 'ugly' in the input string.", "string", [" string input", "string pattern", "mixed replace [", "int match_limit = utf8.len( input ) ] "], {}).toCompletionItem(),
				new MTAFunction(2, "outputConsole", "This outputs the specified text string to the console window (accessed with F8 or ~ key). It can be specified as a message to certain player(s) or all players.", "bool", [" string text "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.char", "This example separates an input string into single codepoints and then joins these back together, representing the original input string.This example takes three code points to generate the string \"MTA\".This example takes the first five code points from the input string and then joins them back together.", "string", [" [ int codepoints... ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getCloudsEnabled", "This function will tell you if clouds are enabled or disabled.", "bool", [""], {}).toCompletionItem(),
				new MTAFunction(2, "getWeaponNameFromID", "This function allows you to retrieve the name of a weapon from an ID. Note it also allows you to retrieve the name of other methods of death, such as Fall and Rammed.This example displays a death message in the format of \"* Killer killed dead (Weapon)\"", "string", [" int id "], {}).toCompletionItem(),
				new MTAFunction(2, "killPed", "This function kills the specified ped.", "bool", [" ped thePed", "[ ped theKiller = nil", "int weapon=255", "int bodyPart=255", "bool stealth = false ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getObjectScale", "This function returns the visible size of an object.This example adds a command get_scale which create object and prints out a scale of the object.", "float", [" object theObject "], {}).toCompletionItem(),
				new MTAFunction(2, "setPickupType", "This function allows changing the type of a pickup to a Weapon, Armour or Health pickup, and allows you to set the health points or the weapon and ammo that the pickup will give.", "bool", [" pickup thePickup", "int theType", "int amount/weapon/model", "[ int ammo ] "], {}).toCompletionItem(),
				new MTAFunction(2, "removePedFromVehicle", "This function removes a ped from a vehicle immediately. This works for drivers and passengers. Note that this removes the ped from the vehicle and puts him in the exact position where the command was initiated.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "setPlayerNametagShowing", "This function allows you to set whether a player's nametag visibility both clientside and serverside", "bool", [" player thePlayer", "bool showing "], {}).toCompletionItem(),
				new MTAFunction(2, "showChat", "This function is used to show or hide the player's chat.This example toggle's the player's chat when they press the \"i\" key.", "bool", [" bool show "], {}).toCompletionItem(),
				new MTAFunction(2, "setPedAnimationProgress", "Sets the current animation progress of a player or ped.This example creates a ped, apply animation to it, and \"freeze\" the animation at half of overall animation time.", "bool", [" ped thePed [", "string anim", "float progress] "], {}).toCompletionItem(),
				new MTAFunction(2, "createRadarArea", "This function can be used to create custom radar areas on the radar.This example creates a radar area for the King of the hill script, and a colsquare. When the player enters the radar area it flashes, and stops flashing when a player leaves it.", "radararea", [" float startPosX", "float startPosY", "float sizeX", "float sizeY", "[ int r = 255", "int g = 0", "int b = 0", "int a = 255", "element visibleTo = getRootElement() ] "], {}).toCompletionItem(),
				new MTAFunction(2, "setPedDoingGangDriveby", "This example turns on driveby mode when the local player types driveby in the console.", "bool", [" ped thePed", "bool state "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedOccupiedVehicle", "This function gets the vehicle that the ped is currently in or is trying to enter, if any.", "vehicle", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedTotalAmmo", "This function returns an integer that contains the total ammo in a specified ped's weapon. See Weapon Info", "int", [" ped thePed", "[ int weaponSlot = current ] "], {}).toCompletionItem(),
				new MTAFunction(2, "setPedStat", "", "bool", [" ped thePed", "int stat", "float value "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedContactElement", "This function detects the element a ped is standing on. This can be a vehicle or an object.This clientside function outputs the name of the vehicle the specified player is standing on, or a message saying he isn't on one.", "element", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "isElementWithinMarker", "This function is used to determine if an element is within a marker.", "bool", [" element theElement", "marker theMarker "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.sub", "This example shows how to extract a substring from a UTF-8 string.", "string", [" string input [", "int i = 1", "int j = utf8.len( input ) ] "], {}).toCompletionItem(),
				new MTAFunction(2, "isPedOnFire", "This function checks if the specified ped is on fire or not.This example checks if a random player is on fire, and if so gives him a fire extinguisher.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedSkin", "", "int", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "addVehicleUpgrade", "This function adds an upgrade to an existing vehicle, eg: nos, hyrdraulics.This serverside function allows the user to get an upgrade by typing a command:This client-side script gives vehicles a nitro upgrade whenever they pass through a certain collision shape:", "bool", [" vehicle theVehicle", "int upgrade "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedClothes", "This example prints the model and texture of the current clothing on the player who enters the \"clothes\" command. For example: \"clothes 3\" for the shoes.", "string string", [" ped thePed", "int clothesType "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedWeapon", "This function tells you which weapon type is in a certain weapon slot of a ped. See Weapon Info", "int", [" ped thePed", "[ int weaponSlot = current ] "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.insert", "This example shows a command handler for '/insert [something]', which will concatenate the '[something]' after the 'hello ' string in 2 ways.", "string", [" string input [", "int insert_pos = utf8.len( input ) + 1 ]", "string substring "], {}).toCompletionItem(),
				new MTAFunction(2, "setMarkerColor", "", "bool", [" marker theMarker", "int r", "int g", "int b", "int a "], {}).toCompletionItem(),
				new MTAFunction(2, "fixVehicle", "This function will set a vehicle's health to full and fix its damage model. If you wish to only change the vehicle's health, without affecting its damage model, use setElementHealth.", "bool", [" vehicle theVehicle "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedWeaponSlot", "This function gets a ped's selected weapon slot.", "int", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "doesPedHaveJetPack", "Checks whether or not a ped currently has a jetpack.Example 1: This examples adds a \"jetpack\" console command, which gives or removes a jetpack from the player.Example 2: This example provides a check to see if players have a jetpack when they enter a particular marker.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.len", "This example calculates the length of the input of the command /length and shows it in the chatbox.", "int", [" string input [", "int i = 1", "int j = utf8.len( input ) ] "], {}).toCompletionItem(),
				new MTAFunction(2, "isPedInVehicle", "Checks whether or not a given ped is currently in a vehicle. This also returns true if they're trying to enter a vehicle.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementInterior", "This function allows you to retrieve the interior of any element. An interior is the current loaded place, 0 being outside.This example shows a player if he is outside or not, when he enters the command 'AmIOutside'.", "int", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementsByType", "This function is used to retrieve a list of all elements of the specified type. This can be useful, as it disregards where in the element tree it is. It can be used with either the built in types (listed below) or with any custom type used in a .map file. For example, if there is an element of type \"flag\" (e.g. <flag />) in the .map file, the using \"flag\" as the type argument would find it.", "table", [" string theType", "[ element startat=getRootElement() ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementChildrenCount", "This function returns the number of children an element has. Note that only the direct children are counted and not elements that are further down the element tree.", "int", [" element parent "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementRotation", "Retrieve the rotation of elements.", "float float float", [" element theElement [", "string rotOrder = \"default\" ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementID", "This function gets the ID of an element. This is the \"id\" attribute of the element and is a string, NOT a number like a model ID, weapons ID or similar.", "string", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "getRootElement", "This function returns the root node of the element tree, called root. This node contains every other element: all resource root elements, players and remote clients. It is never destroyed and cannot be destroyed using destroyElement.", "element", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "isElementCallPropagationEnabled", "", "bool", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "getWeaponIDFromName", "This function will obtain the ID of a particular weapon from its name.This example will give the player the weapon they specify 20 ammo whenever they type \"weapon name\" into the console.", "int", [" string name "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementPosition", "The getElementPosition function allows you to retrieve the position coordinates of an element. This can be any real world element, including:", "float, float, float", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "isPedDoingGangDriveby", "This example turns on driveby mode when the local player types driveby in the console.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "isElementFrozen", "This example binds the \"p\" key to a function to freeze/unfreeze the player's current vehicle.", "bool", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "isElementInWater", "This function checks whether an element is submerged in water.", "bool", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "isPedOnGround", "This function is used to determine whether or not a ped is on the ground. This is for on-foot usage only.This example checks if the player who enters the 'amiflying' command is on the ground and outputs a message.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "isElement", "This function checks if a value is an element or not.This serverside function kills a player when it's passed his name or his element.", "bool", [" var theValue "], {}).toCompletionItem(),
				new MTAFunction(2, "getValidPedModels", "This function returns all valid ped models.", "table", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedOccupiedVehicleSeat", "This function is now available client side.This function gets the seat that a specific ped is sitting in in a vehicle.", "int", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedTarget", "This function is used to get the element a ped is currently targeting.This example blows up any vehicle a player targets (aims at).", "element", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedStat", "This function returns the value of the specified statistic of a specific ped.This example announces whether a player is fat upon spawn", "float", [" ped thePed", "int stat "], {}).toCompletionItem(),
				new MTAFunction(2, "getLowLODElement", "This function return the low LOD element that an element is associated with.This example is not done yet:", "element", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementVelocity", "This example retrieves, calculates, and displays the speed of a random player.", "float float float", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "isElementDoubleSided", "This function checks whether an element is double-sided as set by setElementDoubleSided or not.", "bool", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "isElementWithinColShape", "This function is used to determine if an element is within a collision shape. Please note that for legacy reasons, a colshape created on the client does not collide with elements already existing at that location until they first move. Please also note that before 1.0.3, this did not function correctly when moving a colshape.", "bool", [" element theElement", "colshape theShape "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementCollisionsEnabled", "This function can disable or enable an element's collisions. An element without collisions does not interact with the physical environment and remains static.", "bool", [" element theElement", "bool enabled "], {}).toCompletionItem(),
				new MTAFunction(2, "isElementLowLOD", "", "bool", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementAlpha", "This example makes the player invisible.This example lets you toggle invisibility when you write /invis.", "bool", [" element theElement", "int alpha "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementPosition", "This function sets the position of an element to the specified coordinates.This example adds a \"setpos\" command to console, which allows setting of a player's position.This example adds a \"setpos\" command to console, which allows setting of the local player's position.This example enables a player to type /warpto <playername> to warp to them. If the player being warped to is in a vehicle with a free passenger seat, it will warp into the vehicle.", "bool", [" element theElement", "float x", "float y", "float z [", "bool warp = true ] "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementParent", "This example sets the parent of each spawnpoint to a dummy element:", "bool", [" element theElement", "element parent "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementHealth", "This example adds a 'hpslap' console command that lets players \"slap\" others (doing 20 damage).This example setting health by a command.", "bool", [" element theElement", "float newHealth "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementRotation", "Sets the rotation of elements according to the world (does not work with players that are on the ground).", "bool", [" element theElement", "float rotX", "float rotY", "float rotZ [", "string rotOrder = \"default\"", "bool conformPedRotation = false ] "], {}).toCompletionItem(),
				new MTAFunction(2, "isPedHeadless", "With this function, you can check if a ped has a head or not.Add a command to check whether the player is a zombie or notAdd a command to check whether a player is a zombie or not", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementDoubleSided", "This example shows how to set the double-sidedness of an object in a map file.", "bool", [" element theElement", "bool enable "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementFrozen", "This function freezes an element (stops it in its position and disables movement) or unfreezes it.This example binds the \"p\" key to a function to freeze/unfreeze the player's current vehicle.", "bool", [" element theElement", "bool freezeStatus "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementModel", "This will continually change an object model every 2.5 seconds at the location -1084.52, -1634.81, 76.36 (Truth's farm).", "bool", [" element theElement", "int model "], {}).toCompletionItem(),
				new MTAFunction(2, "getJetpackMaxHeight", "This function gets the maximum height at which your jetpack can fly without failing to go higher.This example returns the max jetpack height to a player if they use the command 'jetpackmaxheight'.", "float", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerTeam", "This example finds the team a player is on, and then changes its name.", "team", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "xmlNodeSetValue", "In this example a sample value is inserted into a XML file.This shows an example of a clientside XML file. You can use this to store user preferences and load them the next time the script loads. Almost always, you should have an options GUI for clients to interact with to set these values. Since the XML will change, it should NOT be included in the resource's meta.xml file. MTA will think that file is corrupted and will download it again from the server. Instead, you should create the XML within the script, and then load it within the script on future script runs if it exists.", "bool", [" xmlnode theXMLNode", "string value [", "bool setCDATA = false] "], {}).toCompletionItem(),
				new MTAFunction(2, "xmlSaveFile", "This function saves a loaded XML file.This example allows a player to use the command 'createfile' to create an .xml file.", "bool", [" xmlnode rootNode "], {}).toCompletionItem(),
				new MTAFunction(2, "isPlayerMapForced", "This function checks if the specified player's radar map has been forced on or not.This example forces a players radar map on for 10 seconds if it hasn't been already.", "bool", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "getFarClipDistance", "This function will tell you what is the current render distance.", "float", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "detonateSatchels", "This function can be used to detonate a players satchels.", "bool", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "setPedHeadless", "With this function, you can set if a ped has a head or not.This example enables a player to behead themselves, and give them their head back.", "bool", [" ped thePed", "bool headState "], {}).toCompletionItem(),
				new MTAFunction(2, "areTrafficLightsLocked", "Gets whether the traffic lights are currently locked or not. If the lights are locked, it means they won't change unless you do setTrafficLightState.", "bool", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.fold", "This example shows how to convert a string to lowercase, which can be used to compare with other folded strings.", "string|int utf8.lower ( string|int input )string|int", [" string|int input "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayersInTeam", "This function retrieves all the players of the specified team.Find and kill all the players in the specified team (for example 'killTeam Red').This example will show all players in a team when a player types the 'showTeam TeamName' command.", "table", [" team theTeam "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.title", "This example shows how to convert a string to uppercase.", "string utf8.upper ( string|int input )string", [" string|int input "], {}).toCompletionItem(),
				new MTAFunction(2, "getWeaponProperty", "This function gets a weapon property of the specified custom weapon (clientside only) or specified player-held weapon (both client and server).", "int", [" int weaponID/string weaponName", "string weaponSkill", "string property "], {}).toCompletionItem(),
				new MTAFunction(2, "getOriginalWeaponProperty", "This function gets the original weapon property of the specified weapons specified weapon type.", "int", [" int weaponID/string weaponName", "string weaponSkill", "string property "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerNametagColor", "This function gets the current color of a player's name tag as RGB values. These are in the range 0-255.This console command will tell the player what his tag color is. The color is composed of a red, a green and a blue component, each ranging from 0-255.", "int, int, int", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "forcePlayerMap", "This function is used to forcefully show a player's radar map.OOP Syntax Help! I don't understand this!OOP Syntax Help! I don't understand this!", "bool", [" player thePlayer", "bool forceOn "], {}).toCompletionItem(),
				new MTAFunction(2, "getMinuteDuration", "Tells you how long an ingame minute takes in real-world milliseconds. The default GTA value is 1000.", "int", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "xmlUnloadFile", "Unloads an XML document from memory.", "bool", [" xmlnode node "], {}).toCompletionItem(),
				new MTAFunction(2, "detachTrailerFromVehicle", "This function detaches an already attached trailer from a vehicle.", "bool", [" vehicle theVehicle [", "vehicle theTrailer = nil ] "], {}).toCompletionItem(),
				new MTAFunction(2, "xmlCreateFile", "This function creates a new XML document, which can later be saved to a file by using xmlSaveFile. This function will overwrite the file specified if it already exists.", "xmlnode", [" string filePath", "string rootNodeName "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerPing", "This function returns the ping of a specified player. The ping is the number of milliseconds that data takes to travel from the player's client to the server or vice versa.This example checks every players ping every 5 seconds and if it's over 500 they get kicked.This example checks the ping of every player entering the 'ping' command and warns him if it's over 100.", "int", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "setPedOnFire", "This function can be used to set a ped on fire or extinguish a fire on it.", "bool", [" ped thePed", "bool isOnFire "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerMoney", "Returns the amount of money a player currently has.When a player types '/checkMoney' this example retrieves the player's money and outputs a message according to the value.", "int/bool", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "setPlayerMoney", "Sets a player's money to a certain value, regardless of current player money. It should be noted that setting negative values does not work and in fact gives the player large amounts of money.", "bool", [" player thePlayer", "int amount [", "bool instant = false ] "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementDimension", "In this example the player's dimension is set to ID 1 when they enter a vehicle, and set back to dimension 0 when they exit the vehicle.", "bool", [" element theElement", "int dimension "], {}).toCompletionItem(),
				new MTAFunction(2, "warpPedIntoVehicle", "This function is used to warp or force a ped into a vehicle. There are no animations involved when this happens.", "bool", [" ped thePed", "vehicle theVehicle", "[ int seat=0 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "blowVehicle", "This function will blow up a vehicle. This will cause an explosion and will kill the driver and any passengers inside it.This example will blow up every vehicle in the game.This example will blow a player's vehicle when he enters the car, like a carbomb.This script will create an Infernus at the center (0, 0, 3) of San Andreas upon execution.", "bool", [" vehicle vehicleToBlow", "[ bool explode=true ] "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.title", "This example shows how to convert a string to uppercase.", "string utf8.upper ( string|int input )string", [" string|int input "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedArmor", "This function returns the current armor of the specified ped.This example defines a \"showarmor\" console command that shows the player that executes it how much armor he has.", "float", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "isPedDead", "This function checks if the specified ped is dead or not.This example allows a player to use the command 'amidead' to see if they are dead or not.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "createColCircle", "This function creates a collision circle. This is a shape that has a position and a radius and infinite height that you can use to detect a player's presence. Events will be triggered when a player enters or leaves it.This example displays a chat message when a player enters the colshape and allows the colshape to be created using a console function set_zone.", "colshape", [" float fX", "float fY", "float radius "], {}).toCompletionItem(),
				new MTAFunction(2, "attachTrailerToVehicle", "This function attaches a trailer type vehicle to a trailer-towing-type vehicle.", "bool", [" vehicle theVehicle", "vehicle theTrailer "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.width", "This example shows the difference when ambi_is_double is set to false or true.", "int", [" string|int input [", "bool ambi_is_double = false", "int default_width = 0 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "setWindVelocity", "This function changes the wind velocity. The wind shakes the vegetation and makes particles fly in a direction. The intensity and direction of the effect deppends of the wind velocity in each axis.This example shows how to make a simple /windVelocity command.", "bool", [" float velocityX", "float velocityY", "float velocityZ "], {}).toCompletionItem(),
				new MTAFunction(2, "setSunColor", "This function is used to set the color of the sun.", "bool", [" int aRed", "int aGreen", "int aBlue", "int bRed", "int bGreen", "int bBlue "], {}).toCompletionItem(),
				new MTAFunction(2, "getSunColor", "This function is used to get the color of the sun.", "int, int, int, int, int, int", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "getFogDistance", "This function will tell you what is the current fog render distance.", "float", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "resetSunColor", "This function is used to reset the color of the sun to its normal color.", "bool", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "setRainLevel", "This function sets the rain level to any weather available in GTA. Use resetRainLevel to undo the changes.This example will make it rain when you enter a vehicle and stop it when you leave the vehicle.", "bool", [" float level "], {}).toCompletionItem(),
				new MTAFunction(2, "getLowLODElement", "This function return the low LOD element that an element is associated with.This example is not done yet:", "element", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "createColSphere", "This function creates a collision sphere. This is a shape that has a position and a radius. See Wikipedia for a definition of a sphere.Example 1: This example displays a chat message when a player enters the colshape and allows the colshape to be created using a console function set_zone.", "colshape", [" float fX", "float fY", "float fZ", "float fRadius "], {}).toCompletionItem(),
				new MTAFunction(2, "isCursorShowing", "This function is used to determine whether or not a player's cursor is showing.This serverside function toggles a player's cursor state.With little of tweaking this can also be used clientside", "bool", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "setFogDistance", "This example makes any weather very clear when the resource that contains it starts.", "bool", [" float distance "], {}).toCompletionItem(),
				new MTAFunction(2, "createColRectangle", "This function creates a collision rectangle. This is a shape that has a position and a width and a depth. See Rectangle for a definition of a rectangle. XY marks on the south west corner of the colshape.This example displays a chat message when a player enters the colshape and allows the colshape to be created using a console function set_zone.", "colshape", [" float fX", "float fY", "float fWidth", "float fHeight"], {}).toCompletionItem(),
				new MTAFunction(2, "setElementCallPropagationEnabled", "This function enables/disables call propagation on a certain element. Look at the example for a practical application.", "bool", [" element theElement", "bool enabled "], {}).toCompletionItem(),
				new MTAFunction(2, "createColTube", "This function creates a collision tube. This is a shape that has a position and a 2D (X/Y) radius and a height. See Cylinder for a definition of a tube. A tube is similar to a colcircle, except that it has a limited height, this means you can limit the distance above the position defined by (fX, fY, fZ) that the collision is detected.This example displays a chat message when a player enters the colshape and allows the colshape to be created using a console function set_zone.", "colshape", [" float fX", "float fY", "float fZ", "float fRadius", "float fHeight"], {}).toCompletionItem(),
				new MTAFunction(2, "createColCuboid", "This function creates a collision cuboid. This is a shape that has a position, width, depth and height. See Wikipedia for a definition of a cuboid. The XYZ of the col starts at the southwest bottom corner of the shape.This example displays a chat message when a player enters the colshape and allows the colshape to be created using a console function set_zone.", "colshape", [" float fX", "float fY", "float fZ", "float fWidth", "float fDepth", "float fHeight "], {}).toCompletionItem(),
				new MTAFunction(2, "getMoonSize", "This function returns the moon size. Using this function server-side will return the server-side value, not necessarily the same that is set client-side.This example will tell the moon size to everyone when the resource is started.", "int", [""], {}).toCompletionItem(),
				new MTAFunction(2, "xmlCopyFile", "This function copies all contents of a certain node in a XML document to a new document file, so the copied node becomes the new file's root node.The new file will not be saved to file system until xmlSaveFile() is called", "xmlnode", [" xmlnode nodeToCopy", "string newFilePath "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.remove", "This example shows how to remove substrings from strings.", "string", [" string input", "int start = 1 [", "int stop = -1 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementVelocity", "This example retrieves, calculates, and displays the speed of a random player.", "float float float", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "isElement", "This function checks if a value is an element or not.This serverside function kills a player when it's passed his name or his element.", "bool", [" var theValue "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementRotation", "Sets the rotation of elements according to the world (does not work with players that are on the ground).", "bool", [" element theElement", "float rotX", "float rotY", "float rotZ [", "string rotOrder = \"default\"", "bool conformPedRotation = false ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementType", "This example destroys a haystack when a player targets it", "string", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "getValidPedModels", "This function returns all valid ped models.", "table", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementParent", "Consider the following map file:", "element", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedTarget", "This function is used to get the element a ped is currently targeting.This example blows up any vehicle a player targets (aims at).", "element", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedWalkingStyle", "Returns the walking style ID of a ped. This ID determines the set of animations that is used for walking, running etc.", "int", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementsWithinColShape", "This function is used to retrieve a list of all elements in a colshape, of the specified type. Please note that for legacy reasons, a colshape created on the client does not collide with elements already existing at that location until they first move. Please also note that before 1.0.3, this did not function correctly when moving a colshape", "table", [" colshape shape", "[ string elemType = nil ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getResourceFromName", "This extract shows adding of a \"kills\" column to the scoreboard resource. This then sets the gameShowKills variable to true, telling the rest of the script to start outputting kills.This extract shows adding of a \"kills\" column to the scoreboard resource. This then sets the gameShowKills variable to true, telling the rest of the script to start outputting kills.", "call (", [], {}).toCompletionItem(),
				new MTAFunction(2, "setMarkerType", "This function changes a marker's type. The type controls how the marker is displayed in the game. It's important that you use marker types that users are used to from the single player game. For example, checkpoints are used in races, rings are used for aircraft races, arrows are used for entering buildings etc.", "bool", [" marker theMarker", "string markerType "], {}).toCompletionItem(),
				new MTAFunction(2, "givePlayerMoney", "This function adds money to a player's current money amount. To set absolute values, setPlayerMoney can be used.This example gives a player money when using \"givecash\" command.This example gives a player one thousand dollars, as a reward for killing another player.This example Creates money Money (dollar symbol) pickup and gives 30,000 dollars on Pick up hit.", "bool", [" player thePlayer", "int amount "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementPosition", "The getElementPosition function allows you to retrieve the position coordinates of an element. This can be any real world element, including:", "float, float, float", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "setPlayerBlurLevel", "This example allows the player to set their blur level via a command", "bool", [" player thePlayer", "int level "], {}).toCompletionItem(),
				new MTAFunction(2, "getCameraMatrix", "This function gets the position of the camera and the position of the point it is facing.", "float float float float float float float float", ["player thePlayer"], {}).toCompletionItem(),
				new MTAFunction(2, "getElementsByType", "This function is used to retrieve a list of all elements of the specified type. This can be useful, as it disregards where in the element tree it is. It can be used with either the built in types (listed below) or with any custom type used in a .map file. For example, if there is an element of type \"flag\" (e.g. <flag />) in the .map file, the using \"flag\" as the type argument would find it.", "table", [" string theType", "[ element startat=getRootElement() ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerNametagText", "This will allow you to retrieve the name tag a player is currently using.", "string", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "getPickupAmmo", "This function retrieves the amount of ammo in a weapon pickup.", "int", [" pickup thePickup "], {}).toCompletionItem(),
				new MTAFunction(2, "countPlayersInTeam", "This function is for returning the number of players in the specified team.This example adds a command in the console to find out how many players are on your team.This example adds a command in the console to find out how many players are on your team, clientsideThis example balances a gamemode, to ensure equal number of players between the \"grove\" and \"ballas\" teams. This could be triggered when a player joins the server, or for all players currently in the server when the gamemode starts.", "int", [" team theTeam "], {}).toCompletionItem(),
				new MTAFunction(2, "showPlayerHudComponent", "This example hides the ammo and weapon displays for players when they join.", "bool", [" player thePlayer", "string component", "bool show "], {}).toCompletionItem(),
				new MTAFunction(2, "isPlayerNametagShowing", "This function will allow you to determine if a player's name tag is currently showing.", "bool", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "getFogDistance", "This function will tell you what is the current fog render distance.", "float", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "createPickup", "This function creates a pickup element, which is placed in the GTA world and can be picked up to retrieve a health, armour or a weapon. This example creates a pickup after a player dies so that he drops his weapon.This example creates a custom pickup(money) after a player dies and sets it's value.", "pickup", [" float x", "float y", "float z", "int theType", "int amount/weapon/model", "[ int respawnTime = 30000", "int ammo = 50 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.gmatch", "This example prints every word in the UTF-8 string", "iterator", [" string input", "string pattern "], {}).toCompletionItem(),
				new MTAFunction(2, "getAircraftMaxVelocity", "This function returns the maximum velocity at which aircrafts could fly. Using this function server-side will return the server-side value, not necessarily the same that is set client-side.This example will increase or decrease the max velocity by pressing numpad keys + or -.This example will tell the max velocity to everyone when the resource is started.", "float", [""], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerFromName", "This function returns a player element for the player with the name passed to the function.", "player", [" string playerName "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.match", "This example shows how to extract values from an input string by using a pattern to match the value parts.", "string,...", [" string input", "string pattern [", "int index = 1 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.width", "This example", "int, int, int", [" string input", "int location [", "bool ambi_is_double = false", "int default_width = 0 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.next", "This example shows how to traverse a UTF-8 string the proper way without running into problems as in byte strings.", "int, int", [" string input [[", "int charpos = 0 ]", "int offset = 1 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getTeamColor", "This example defines a console command that outputs the player's team name and colors if he is on a team.", "int, int, int", [" team theTeam "], {}).toCompletionItem(),
				new MTAFunction(2, "createElement", "This function is used to create a new dummy element in the element tree which do not necessarily represent an entity within the San Andreas world. A common use for this function is for creating custom elements, such as a Flag or a Base.", "element", [" string elementType", "[ string elementID = nil ] "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.escape", "This example escapes two byte-string literals to UTF-8 format by using the utf8.escape function.", "string", [" string input "], {}).toCompletionItem(),
				new MTAFunction(2, "getHeatHaze", "This function will return the current heat haze effect settings.This example outputs current heat haze settings to the chat when player uses command 'get_haze'.", "int, int, int, int, int, int, int, int, bool", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "setWeatherBlended", "This function will change the current weather to another in a smooth manner, over the period of 2 in-game hours (unlike setWeather, which sets a new weather instantly). To ensure this transition performs as expected, you should not call this function until getWeather indicates that no transition is already being done.", "bool", [" int weatherID "], {}).toCompletionItem(),
				new MTAFunction(2, "areTrafficLightsLocked", "Gets whether the traffic lights are currently locked or not. If the lights are locked, it means they won't change unless you do setTrafficLightState.", "bool", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "setGarageOpen", "This function opens or closes the specified garage door in the world.This example opens a garage door when a player enters a collision shape near it, and closes it when they leave:", "bool", [" int garageID", "bool open "], {}).toCompletionItem(),
				new MTAFunction(2, "createWater", "Example code for creating a water area to cover the entire San Andreas Map (flood the cities). Also, setWaterLevel is used to raise the existing rivers and lakes.This example creates water at the given coordinates and sets the height of the water level to 20 for when the client joins.This example fills the Easter Basin with water.", "water", [" int x1", "int y1", "float z1", "int x2", "int y2", "float z2", "int x3", "int y3", "float z3 [", "int x4", "int y4", "float z4 ] [", "bool bShallow = false ] "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.fold", "This example shows how to convert a string to lowercase, which can be used to compare with other folded strings.", "string|int utf8.lower ( string|int input )string|int", [" string|int input "], {}).toCompletionItem(),
				new MTAFunction(2, "getGameSpeed", "This example adds a 'gamespeed' console command that prints the game speed to the chatbox.", "float", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerBlurLevel", "This example adds a command blurlevel with which you can check your current blur level.", "int", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "getPickupType", "This function retrieves the type of a pickup, either a health, armour or weapon pickup.", "int", [" pickup thePickup "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementCollisionsEnabled", "This function can disable or enable an element's collisions. An element without collisions does not interact with the physical environment and remains static.", "bool", [" element theElement", "bool enabled "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementInterior", "In this example, if a player were to type /interior 1, they would be teleported into this interiorIn this example, if a player were to type /interior 1, they would be teleported into this interior", "bool", [" element theElement", "int interior [", "float x", "float y", "float z] "], {}).toCompletionItem(),
				new MTAFunction(2, "isElementWithinColShape", "This function is used to determine if an element is within a collision shape. Please note that for legacy reasons, a colshape created on the client does not collide with elements already existing at that location until they first move. Please also note that before 1.0.3, this did not function correctly when moving a colshape.", "bool", [" element theElement", "colshape theShape "], {}).toCompletionItem(),
				new MTAFunction(2, "getBlipColor", "This function will tell you what color a blip is. This color is only applicable to the default blip icon (, or ). All other icons will ignore this.", "int int int int", [" blip theBlip "], {}).toCompletionItem(),
				new MTAFunction(2, "getBlipIcon", "This function returns the icon a blip currently has.", "int", [" blip theBlip "], {}).toCompletionItem(),
				new MTAFunction(2, "createBlipAttachedTo", "This function creates a blip that is attached to an element. This blip is displayed as an icon on the client's radar and will 'follow' the element that it is attached to around.This example creates a radar blip attached to a random player, visible to everyone. The blip will follow the player around as they move. This could be used for manhunt, to emphasise a random player.", "blip", [" element elementToAttachTo [", "int icon = 0", "int size = 2", "int r = 255", "int g = 0", "int b = 0", "int a = 255", "int ordering = 0", "float visibleDistance = 99999.0", "visibleTo = getRootElement( ) ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getClothesByTypeIndex", "This function is used to get the texture and model of clothes by the clothes type and index.(Scans through the list of clothes for the specific type).", "string string", [" int clothesType", "int clothesIndex "], {}).toCompletionItem(),
				new MTAFunction(2, "setBlipIcon", "This function sets the icon for an existing blip element.", "bool", [" blip theBlip", "int icon "], {}).toCompletionItem(),
				new MTAFunction(2, "getCameraInterior", "Returns the interior of the local camera (independent of the interior of the local player).", "int", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "getBodyPartName", "This function is used to get the name of a body part on a player.", "string", [" int bodyPartID "], {}).toCompletionItem(),
				new MTAFunction(2, "getBlipSize", "This function gets the size of a blip.", "int", [" blip theBlip "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementFrozen", "This function freezes an element (stops it in its position and disables movement) or unfreezes it.This example binds the \"p\" key to a function to freeze/unfreeze the player's current vehicle.", "bool", [" element theElement", "bool freezeStatus "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementDimension", "In this example the player's dimension is set to ID 1 when they enter a vehicle, and set back to dimension 0 when they exit the vehicle.", "bool", [" element theElement", "int dimension "], {}).toCompletionItem(),
				new MTAFunction(2, "detachElements", "This function detaches attached elements from one another.", "bool", [" element theElement", "[ element theAttachToElement ] "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementHealth", "This example adds a 'hpslap' console command that lets players \"slap\" others (doing 20 damage).This example setting health by a command.", "bool", [" element theElement", "float newHealth "], {}).toCompletionItem(),
				new MTAFunction(2, "getRootElement", "This function returns the root node of the element tree, called root. This node contains every other element: all resource root elements, players and remote clients. It is never destroyed and cannot be destroyed using destroyElement.", "element", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "setLowLODElement", "This function assigns a low LOD element to an element. The low LOD element is displayed when its associated element is not fully visible. If a low LOD element is assigned to several elements, it will be displayed when any of these elements are not fully visible.This example shows how to create and link a normal and low LOD object:This example shows how to create and link a composite objectChanging the draw distance for a model has to be done on the client:", "bool", [" element theElement", "element lowLODElement "], {}).toCompletionItem(),
				new MTAFunction(2, "fileClose", "Closes a file handle obtained by fileCreate or fileOpen.", "bool", [" file theFile "], {}).toCompletionItem(),
				new MTAFunction(2, "isElementLowLOD", "", "bool", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "addEventHandler", "This serverside example sends a message to everyone in the server when a player spawns.", "bool", [" string eventName", "element attachedTo", "function handlerFunction", "[ bool getPropagated = true", "string priority = \"normal\" ] "], {}).toCompletionItem(),
				new MTAFunction(2, "addEvent", "This function allows you to register a custom event. Custom events function exactly like the built-in events. See event system for more information on the event system.", "bool", [" string eventName [", "bool allowRemoteTrigger = false ] "], {}).toCompletionItem(),
				new MTAFunction(2, "isElementInWater", "This function checks whether an element is submerged in water.", "bool", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedAmmoInClip", "This function returns an integer that contains the ammo in a specified ped's weapon. See Weapon Info", "int", [" ped thePed [", "int weaponSlot = current ] "], {}).toCompletionItem(),
				new MTAFunction(2, "isPedOnGround", "This function is used to determine whether or not a ped is on the ground. This is for on-foot usage only.This example checks if the player who enters the 'amiflying' command is on the ground and outputs a message.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "createObject", "This example creates an object when the resource starts:This example creates an object near player who write createObject:", "object", [" int modelid", "float x", "float y", "float z", "[ float rx", "float ry", "float rz", "bool isLowLOD = false ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getClothesTypeName", "This function is used to get the name of a certain clothes type.", "string", [" int clothesType "], {}).toCompletionItem(),
				new MTAFunction(2, "getControlState", "This example starts a repeating check when a player spawns, if a player presses the fire key, they'll be killed.", "bool", [" player thePlayer", "string controlName "], {}).toCompletionItem(),
				new MTAFunction(2, "getkeyboundtofunction", "getKeyBoundToFunction allows retrieval of the first key bound to a function./key command gives bounded key to our chat function", "????", [], {}).toCompletionItem(),
				new MTAFunction(2, "getPedContactElement", "This function detects the element a ped is standing on. This can be a vehicle or an object.This clientside function outputs the name of the vehicle the specified player is standing on, or a message saying he isn't on one.", "element", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "createExplosion", "Creates an explosion of a certain type at a specified point in the world. If creator is specified, the explosion will occur only in its dimension.Example 1: This code will create an explosion at the player's position when they spawn.Example 1: This code will create an explosion for the local player when they spawn.", "bool", [" float x", "float y", "float z", "int theType [", "player creator = nil ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getPickupAmmo", "This function retrieves the amount of ammo in a weapon pickup.", "int", [" pickup thePickup "], {}).toCompletionItem(),
				new MTAFunction(2, "getWeather", "This function returns the current Weather ID.", "int, int", [], {}).toCompletionItem(),
				new MTAFunction(2, "setHeatHaze", "This function changes the heat haze effect.", "bool", [" int intensity", "[ int randomShift = 0", "int speedMin = 12", "int speedMax = 18", "int scanSizeX = 75", "int scanSizeY = 80", "int renderSizeX = 80", "int renderSizeY = 85", "bool bShowInside = false ] "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.char", "This example separates an input string into single codepoints and then joins these back together, representing the original input string.This example takes three code points to generate the string \"MTA\".This example takes the first five code points from the input string and then joins them back together.", "string", [" [ int codepoints... ] "], {}).toCompletionItem(),
				new MTAFunction(2, "isPedHeadless", "With this function, you can check if a ped has a head or not.Add a command to check whether the player is a zombie or notAdd a command to check whether a player is a zombie or not", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "setBlipOrdering", "This function sets the Z ordering of a blip. It allows you to make a blip appear on top of or below other blips.", "bool", [" blip theBlip", "int ordering "], {}).toCompletionItem(),
				new MTAFunction(2, "getBlipOrdering", "This function gets the Z ordering value of a blip. The Z ordering determines if a blip appears on top of or below other blips. Blips with a higher Z ordering value appear on top of blips with a lower value. The default value for all blips is 0.", "int", [" blip theBlip "], {}).toCompletionItem(),
				new MTAFunction(2, "fileDelete", "Deletes the specified file.", "bool", [" string filePath "], {}).toCompletionItem(),
				new MTAFunction(2, "fileExists", "This functions checks whether a specified file exists inside a resource.", "bool", [" string filePath "], {}).toCompletionItem(),
				new MTAFunction(2, "fileCopy", "This example copies a file called 'test.txt' and called it 'test1.txt'.This example copies a file called 'test.txt' and called it 'test1.txt'.", "bool", [" string filePath", "string copyToFilePath [", "bool overwrite = false ] "], {}).toCompletionItem(),
				new MTAFunction(2, "xmlNodeSetValue", "In this example a sample value is inserted into a XML file.This shows an example of a clientside XML file. You can use this to store user preferences and load them the next time the script loads. Almost always, you should have an options GUI for clients to interact with to set these values. Since the XML will change, it should NOT be included in the resource's meta.xml file. MTA will think that file is corrupted and will download it again from the server. Instead, you should create the XML within the script, and then load it within the script on future script runs if it exists.", "bool", [" xmlnode theXMLNode", "string value [", "bool setCDATA = false] "], {}).toCompletionItem(),
				new MTAFunction(2, "setCameraTarget", "This function allows you to set a player's camera to follow other elements instead. Currently supported element type is:This syntax mantains the player targeted by the camera, but makes the camera look at the specified coordinates. It has no effect when the camera doesn't have a target.", "bool", [" player thePlayer [", "player target = nil ] "], {}).toCompletionItem(),
				new MTAFunction(2, "xmlCreateFile", "This function creates a new XML document, which can later be saved to a file by using xmlSaveFile. This function will overwrite the file specified if it already exists.", "xmlnode", [" string filePath", "string rootNodeName "], {}).toCompletionItem(),
				new MTAFunction(2, "setCameraMatrix", "This function sets the camera's position and direction. The first three arguments are the point at which the camera lies, the last three are the point the camera faces (or the point it \"looks at\").", "bool", [" player thePlayer", "float positionX", "float positionY", "float positionZ [", "float lookAtX", "float lookAtY", "float lookAtZ", "float roll = 0", "float fov = 70 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "setBlipSize", "This function sets the size of a blip's icon.", "bool", [" blip theBlip", "int iconSize "], {}).toCompletionItem(),
				new MTAFunction(2, "inspect", "This example draws the contents of a table and its data type:", "string", [" mixed var [", "table options] "], {}).toCompletionItem(),
				new MTAFunction(2, "getCameraTarget", "This function returns an element that corresponds to the current target of the specified player's camera (i.e. what it is following). OOP Syntax Help! I don't understand this!", "element", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "bindKey", "This alternative syntax allows you to bind a key with a command. This will also allow users to customize the control in their Settings menu. Use in conjunction with addCommandHandler to add handler functions to the keybind.This alternative syntax allows you to bind a key with a command. This will also allow users to customize the control in their Settings menu. Use in conjunction with addCommandHandler to add handler functions to the keybind.This example will bind a player's 'F1' key and 'fire' control to 1 input function.This example will bind a player's 'F1' key and 'fire' control to 1 input function, clientside.This example says how cool is the MTA:SA is if players wants to move.", "bool", [" player thePlayer", "string key", "string keyState", "function handlerFunction", "[ var arguments", "... ] "], {}).toCompletionItem(),
				new MTAFunction(2, "xmlSaveFile", "This function saves a loaded XML file.This example allows a player to use the command 'createfile' to create an .xml file.", "bool", [" xmlnode rootNode "], {}).toCompletionItem(),
				new MTAFunction(2, "createBlip", "This function creates a blip element, which is displayed as an icon on the client's radar.Example 1: This example creates a radar blip at a random player's position and makes it so that it is only visible to that player.", "blip", [" float x", "float y", "float z [", "int icon = 0", "int size = 2", "int r = 255", "int g = 0", "int b = 0", "int a = 255", "int ordering = 0", "float visibleDistance = 99999.0", "visibleTo = getRootElement( ) ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getFunctionsBoundToKey", "This loops through all the keys and outputs the keyname and the function bound to that key.This loops through all the keys and outputs the keyname and the function bound to that key.", "table", [" player thePlayer ", "string theKey "], {}).toCompletionItem(),
				new MTAFunction(2, "isControlEnabled", "This example uses a command handler to allow a player to toggle whether he can use vehicle weapons by disabling or enabling the primary and secondary vehicle fire keys. The command handler is trigged with 'toggleweapons'", "bool", [" player thePlayer", "string control "], {}).toCompletionItem(),
				new MTAFunction(2, "xmlCopyFile", "This function copies all contents of a certain node in a XML document to a new document file, so the copied node becomes the new file's root node.The new file will not be saved to file system until xmlSaveFile() is called", "xmlnode", [" xmlnode nodeToCopy", "string newFilePath "], {}).toCompletionItem(),
				new MTAFunction(2, "setBlipColor", "This function will let you change the color of a blip. This color is only applicable to the default blip icon (, or ). All other icons will ignore this.", "bool", [" blip theBlip", "int red", "int green", "int blue", "int alpha "], {}).toCompletionItem(),
				new MTAFunction(2, "isPedDucked", "This function checks if the specified ped is ducked (crouched) or not.This example checks if a random player is ducked or not, and if so displays a message in the chat box.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "setPedDoingGangDriveby", "This example turns on driveby mode when the local player types driveby in the console.", "bool", [" ped thePed", "bool state "], {}).toCompletionItem(),
				new MTAFunction(2, "getTypeIndexFromClothes", "This function is used to get the clothes type and index from the texture and model.(Scans through the list of clothes for the specific type).", "int int", [" string clothesTexture", "string clothesModel "], {}).toCompletionItem(),
				new MTAFunction(2, "killPed", "This function kills the specified ped.", "bool", [" ped thePed", "[ ped theKiller = nil", "int weapon=255", "int bodyPart=255", "bool stealth = false ] "], {}).toCompletionItem(),
				new MTAFunction(2, "createVehicle", "This example creates a vehicle five units to the right of a player when they type createvehicle and its name in the console:This script spawns a Rhino on top of one lucky individual.This example adds a /spveh command to spawn a car model in the provided coordinates. If any car created by this command gets blown up, it will respawn where it was created.This script spawns a Rhino on top of the local player.This is an example of how this function is executed in an OOP environment.This script will create an Infernus at the center (0, 0, 3) of San Andreas upon execution.", "vehicle", [" int model", "float x", "float y", "float z [", "float rx", "float ry", "float rz", "string numberplate", "bool bDirection", "int variant1", "int variant2 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "playSoundFrontEnd", "This example plays a sound when a player spawns.This example plays a sound when the player types the command '/sound'.", "bool", [" player thePlayer", "int sound "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.fold", "This example shows how to convert a string to lowercase, which can be used to compare with other folded strings.", "string|int utf8.lower ( string|int input )string|int", [" string|int input "], {}).toCompletionItem(),
				new MTAFunction(2, "setWeather", "This function sets the current weather to the given valid value. To change the weather gradually, see setWeatherBlended.", "bool", [" int weatherID "], {}).toCompletionItem(),
				new MTAFunction(2, "setGameSpeed", "This function sets the game speed to the given value.", "bool", [" float value "], {}).toCompletionItem(),
				new MTAFunction(2, "getResourceExportedFunctions", "Returns a table containing the names of the functions that a resource exports. It will return the exports of the current resource if there is no argument passed in.", "table|false", [" [ resource res ] "], {}).toCompletionItem(),
				new MTAFunction(2, "setTrafficLightsLocked", "Toggles whether you want the traffic lights to be locked. If the lights are locked, it means they won't change unless you do setTrafficLightState.", "bool", [" bool toggle "], {}).toCompletionItem(),
				new MTAFunction(2, "getResourceFromName", "This function is used to retrieve a resource from its name. A resource's name is the same as its folder or file archive name on the server (without the extension).This example prints out a message to the chatbox when a resource named playerblips is started.", "resource", [" string resourceName "], {}).toCompletionItem(),
				new MTAFunction(2, "getAircraftMaxVelocity", "This function returns the maximum velocity at which aircrafts could fly. Using this function server-side will return the server-side value, not necessarily the same that is set client-side.This example will increase or decrease the max velocity by pressing numpad keys + or -.This example will tell the max velocity to everyone when the resource is started.", "float", [""], {}).toCompletionItem(),
				new MTAFunction(2, "setMoonSize", "This function sets the moon size. Using this function server-side will overwrite the value that was previously set client-side.This example change moon size to looks more realistic for everyone when the resource is started.", "bool", [" int size "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.ncasecmp", "This example shows a simple comparsion of two different strings.This example shows how to greet a player, when he write 'hello' into the chat.", "int", [" string a", "string b "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.title", "This example shows how to convert a string to uppercase.", "string utf8.upper ( string|int input )string", [" string|int input "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.insert", "This example shows a command handler for '/insert [something]', which will concatenate the '[something]' after the 'hello ' string in 2 ways.", "string", [" string input [", "int insert_pos = utf8.len( input ) + 1 ]", "string substring "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.match", "This example shows how to extract values from an input string by using a pattern to match the value parts.", "string,...", [" string input", "string pattern [", "int index = 1 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.len", "This example calculates the length of the input of the command /length and shows it in the chatbox.", "int", [" string input [", "int i = 1", "int j = utf8.len( input ) ] "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.gsub", "This example shows how to remove color codes from a string and how to uppercase each single character in a string.This example uses a table to replace specific words in the input string by an other value.This example shows a simple bad word filter, which censors the word 'ugly' in the input string.", "string", [" string input", "string pattern", "mixed replace [", "int match_limit = utf8.len( input ) ] "], {}).toCompletionItem(),
				new MTAFunction(2, "setControlState", "This example will disable the use of the accelerate, brake/reverse and handbrake keys, then force the accelerate on for any player who enters a vehicle. This example will disable the use of the accelerate, brake/reverse and handbrake keys, then force the accelerate on for any player who enters a vehicle.", "bool", [" player thePlayer", "string control", "bool state "], {}).toCompletionItem(),
				new MTAFunction(2, "resetWindVelocity", "This function resets the wind velocity in San Andreas to its default state.This example returns the wind velocity to a player if they use the command 'resetwindvelocity'.This example returns the wind velocity for all players if they use the command 'resetwindvelocity'.", "bool", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "removeVehicleUpgrade", "This script defines a 'nos' console command that adds a NOS upgrade to the vehicle that the player who executes the command is sitting in. It also adds a 'removenos' command which allows removal of a player's nos.This script defines a 'nos' console command that adds a NOS upgrade to the vehicle that the player who executes the command is sitting in. It also adds a 'removenos' command which allows removal of a player's nos. This example is clientside and may cause desync.", "bool", [" vehicle theVehicle", "int upgrade "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.sub", "This example shows how to extract a substring from a UTF-8 string.", "string", [" string input [", "int i = 1", "int j = utf8.len( input ) ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getNetworkUsageData", "This function returns a table containing network usage information about inbound and outbound packets.", "table", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "toggleAllControls", "Enables or disables the use of all GTA controls for a specified player.This function will disable the use of all controls in order to freeze a player, which will be used every time someone enters a vehicle.", "bool", [" player thePlayer", "bool enabled", "[ bool gtaControls = true", "bool mtaControls = true ] "], {}).toCompletionItem(),
				new MTAFunction(2, "iprint", "This example prints some sample debug messages, assuming the server is running a typical freeroam/play environment:", "bool", [" mixed var1[", "mixed var2", "mixed var3...] "], {}).toCompletionItem(),
				new MTAFunction(2, "getDistanceBetweenPoints2D", "This example gets the distance between two vehicles, stored in variables vehicle1 and vehicle2.", "float", [" float x1", "float y1", "float x2", "float y2 "], {}).toCompletionItem(),
				new MTAFunction(2, "getTeamColor", "This example defines a console command that outputs the player's team name and colors if he is on a team.", "int, int, int", [" team theTeam "], {}).toCompletionItem(),
				new MTAFunction(2, "setMinuteDuration", "Sets the real-world duration of an ingame minute. The GTA default is 1000.", "bool", [" int milliseconds "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerName", "This function returns a string containing the name of the specified player.This example outputs the local player name to the chatbox.", "string", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "restoreWorldModel", "This function allows restoring of world object,which was removed with RemoveWorldModel.", "bool", [" int modelID", "float radius", "float x", "float y", "float z [", "int iInterior = -1 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "removeWorldModel", "This function is used to remove a world object.", "bool", [" int modelID", "float radius", "float x", "float y", "float z [", "int interior = 0 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "removePedClothes", "This function is used to remove the current clothes of a certain type on a ped. It will remove them if the clothesTexture and clothesModel aren't specified, or if they match the current clothes on that slot.This example adds a 'moto' helmet to a player when he gets on a nrg bike, and removes it when he gets off.", "bool", [" ped thePed", "int clothesType", "[ string clothesTexture", "string clothesModel ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementHealth", "This example outputs the health of the player who enters the command 'showhealth', and their vehicle's health.", "float", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "resetFogDistance", "This function resets the fog render distance to its default state.", "bool", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "isElementDoubleSided", "This function checks whether an element is double-sided as set by setElementDoubleSided or not.", "bool", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "isElementAttached", "This functions checks whether or not an element is attached to another element.", "bool", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementID", "This function sets the ID of an element to a string. This can be anything from an identifying number, to a name.You can only change the ID of an element clientside if that element has been created clientside as well.", "bool", [" element theElement", "string name "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerNametagColor", "This function gets the current color of a player's name tag as RGB values. These are in the range 0-255.This console command will tell the player what his tag color is. The color is composed of a red, a green and a blue component, each ranging from 0-255.", "int, int, int", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "getFarClipDistance", "This function will tell you what is the current render distance.", "float", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "toggleControl", "Enables or disables the use of a GTA control for a specific player.This function will disable the use of the vehicle secondary-fire key for anyone in a Hydra, consequently removing the ability to fire rockets.This function will disable the use of the vehicle secondary-fire key for anyone in a Hydra, consequently removing the ability to fire rockets.", "bool", [" player thePlayer", "string control", "bool enabled "], {}).toCompletionItem(),
				new MTAFunction(2, "resetFarClipDistance", "This function resets the far clip distance to its default state.", "bool", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "setPedAnimationProgress", "Sets the current animation progress of a player or ped.This example creates a ped, apply animation to it, and \"freeze\" the animation at half of overall animation time.", "bool", [" ped thePed [", "string anim", "float progress] "], {}).toCompletionItem(),
				new MTAFunction(2, "setPedFrozen", "", "bool", [" ped thePed", "bool frozen "], {}).toCompletionItem(),
				new MTAFunction(2, "getMarkerTarget", "This function returns the position of the specified marker's target, the position it points to. This only works for checkpoint markers and ring markers. For checkpoints it returns the position the arrow is pointing to, for ring markers it returns the position the ring is facing. You can set this target with setMarkerTarget.", "float float float", [" marker theMarker "], {}).toCompletionItem(),
				new MTAFunction(2, "createMarker", "This function creates a marker. A marker is a 3D model in the world that can highlight a particular point or area, often used to instruct players where to go to perform actions such as entering buildings.This example creates a marker next to the player when they type 'createmarker':", "marker", [" float x", "float y", "float z [", "string theType = \"checkpoint\"", "float size = 4.0", "int r = 0", "int g = 0", "int b = 255", "int a = 255", "visibleTo = getRootElement( ) ] "], {}).toCompletionItem(),
				new MTAFunction(2, "setFarClipDistance", "This example adjusts the visibility range of the game world.This example adjusts the visibility range of the game world.", "bool", [" float distance "], {}).toCompletionItem(),
				new MTAFunction(2, "getDistanceBetweenPoints3D", "", "float", [" float x1", "float y1", "float z1", "float x2", "float y2", "float z2 "], {}).toCompletionItem(),
				new MTAFunction(2, "getColorFromString", "This example will set the blip attached to a player to a color they specify by typing set_my_color [color] in the console.", "int int int int", [" string theColor "], {}).toCompletionItem(),
				new MTAFunction(2, "fileFlush", "Forces pending disk writes to be executed. fileWrite doesn't directly write to the hard disk but places the data in a temporary buffer; only when there is enough data in the buffer it is actually written to disk. Call this function if you need the data written right now without closing the file. This is useful for log files that might want to be read while the resource is still executing. fileFlush can be called after each log entry is written. Without this, the file may appear empty or outdated to the user.", "bool", [" file theFile "], {}).toCompletionItem(),
				new MTAFunction(2, "isGarageOpen", "This function checks whether or not a specific garage door is open.This example opens a garage door when a player enters a collision shape near it, and closes it when they leave:", "bool", [" int garageID "], {}).toCompletionItem(),
				new MTAFunction(2, "getAttachedElements", "This function returns a table of all the elements attached to the specified element", "table", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementInterior", "This function allows you to retrieve the interior of any element. An interior is the current loaded place, 0 being outside.This example shows a player if he is outside or not, when he enters the command 'AmIOutside'.", "int", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "getNetworkStats", "This function returns network status information.This example outputs the local players network status information to their console when using the /netstatus command", "table", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "setTime", "This function sets the current GTA time to the given time.This serverside function sets the time and notifies players.This example freeze the time.", "bool", [" int hour", "int minute "], {}).toCompletionItem(),
				new MTAFunction(2, "getRainLevel", "This function is used to get the current rain level.Example: Sets the rain (So it can detect it) before returning it. (In this case, when resource starts.)Example: Sets the rain (So it can detect it) before returning it. (In this case, when resource starts.)", "float", [], {}).toCompletionItem(),
				new MTAFunction(2, "getElementAlpha", "This example outputs whether the player is invisible.", "int", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "interpolateBetween", "This clientside example uses interpolateBetween to create position and color interpolation(with effect) on a marker.The command to test it is \"/marker\".The position is interpolated with \"OutBounce\" as strEasingType to make the marker bounce off the ground and \"Linear\" interpolation for the color.This clientside example uses interpolateBetween to create size and position interpolation (with effect) on a gui-window.The command to test it is \"/window\".When the window pops up it uses \"OutElastic\" as the strEasingType to create the bouncing/elastic effect.When it fades away, it uses \"InQuad\" to have an accelerating fading.This clientside example uses interpolateBetween to create and position interpolation (with effect) on a camera.The command to test it is \"/ccam\".When the camera pops up it uses \"OutQuad\" as the strEasingType to create the slow down effect.", "float float float", [" float x1", "float y1", "float z1", "float x2", "float y2", "float z2", "float fProgress", "string strEasingType", "[ float fEasingPeriod", "float fEasingAmplitude", "float fEasingOvershoot ] "], {}).toCompletionItem(),
				new MTAFunction(2, "destroyElement", "This function destroys an element and all elements within it in the hierarchy (its children, the children of those children etc). Player elements cannot be destroyed using this function. A player can only be removed from the hierarchy when they quit or are kicked. The root element also cannot be destroyed, however, passing the root as an argument will wipe all elements from the server, except for the players and clients, which will become direct descendants of the root node, and other elements that cannot be destroyed, such as resource root elements.", "bool", [" element elementToDestroy "], {}).toCompletionItem(),
				new MTAFunction(2, "getMarkerSize", "This function returns a float containing the size of the specified marker.", "float", [" marker myMarker "], {}).toCompletionItem(),
				new MTAFunction(2, "unbindKey", "Removes an existing key bind from the specified player.This function binds the player's F1 key to a function goMoo which outputs a chat message when pressed. The key is then unbound so that it can effectively only be used once per life.", "bool", [" player thePlayer", "string key", "string keyState", "string command "], {}).toCompletionItem(),
				new MTAFunction(2, "setSunSize", "This function is used to set the size of the sun.", "bool", [" int Size "], {}).toCompletionItem(),
				new MTAFunction(2, "getMarkerColor", "This function returns the color and transparency for a marker element. Not all marker types support transparency.This example script fully heals players who hit a white marker, and kills players who hit a red one.", "int, int, int, int", [" marker theMarker "], {}).toCompletionItem(),
				new MTAFunction(2, "setMarkerIcon", "", "bool", [" marker theMarker", "string icon "], {}).toCompletionItem(),
				new MTAFunction(2, "isPedDoingGangDriveby", "This example turns on driveby mode when the local player types driveby in the console.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedStat", "This function returns the value of the specified statistic of a specific ped.This example announces whether a player is fat upon spawn", "float", [" ped thePed", "int stat "], {}).toCompletionItem(),
				new MTAFunction(2, "setMarkerSize", "This function sets the size of the specified marker.", "bool", [" marker theMarker", "float size "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementByID", "This function returns an element from the specified ID. If more than one element with the same ID exists, only the first one in the order it appears in the XML tree will be returned by this function.", "element", [" string id [", "int index = 0 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getPerformanceStats", "This function returns performance information.", "table table", [" string category [", "string options = \"\"", "string filter = \"\" ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementCollisionsEnabled", "This function indicates if a specific element is set to have collisions disabled. An element without collisions does not interact with the physical environment and remains static.", "bool", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "fadeCamera", "When a player gets damaged, place a quick fade-to-red effect on his screen.", "bool", [" player thePlayer", "bool fadeIn", "[ float timeToFade = 1.0", "int red = 0", "int green = 0", "int blue = 0 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "geteasingvalue", "This clientside example uses getEasingValue to make a custom camera fade.The command to test it is \"/fade\".The fading out is done with \"InQuad\" to have a slow fading which then accelerates and \"OutQuad\" is used for fading in to have a smooth end of the fading.In this example interpolateBetween could have been used directly to interpolate the alpha between 0 and 255 and then 255 and 0 but is example is just to illustrate the use of getEasingValue by itself.", "????", [], {}).toCompletionItem(),
				new MTAFunction(2, "setCameraInterior", "Sets the interior of the local camera. Only the interior of the camera is changed, the local player stays in the interior he was in. This example make a command to change your cam interior to a selected one. This example make a command to change your cam interior to a selected one.", "bool", [" player thePlayer", "int interior "], {}).toCompletionItem(),
				new MTAFunction(2, "getTime", "This function is used to get the current time in the game. If you want to get the real server time, use getRealTime.", "int int", [""], {}).toCompletionItem(),
				new MTAFunction(2, "setSkyGradient", "This function changes the sky color to a two-color gradient.", "bool", [" [ int topRed = 0", "int topGreen = 0", "int topBlue = 0", "int bottomRed = 0", "int bottomGreen = 0", "int bottomBlue = 0 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getTimerDetails", "This function is for getting the details of a running timer.", "int, int, int", [" timer theTimer "], {}).toCompletionItem(),
				new MTAFunction(2, "getrealtime", "This function gets the server or client (if used client sided it returns time as set on client's computer) real time and returns it in a table. If you want to get the in-game time (shown on GTA's clock) use getTime.", "????", [], {}).toCompletionItem(),
				new MTAFunction(2, "getTickCount", "This function returns amount of time that your system has been running in milliseconds. By comparing two values of getTickCount, you can determine how much time has passed (in milliseconds) between two events. This could be used to determine how efficient your code is, or to time how long a player takes to complete a task.", "int", [""], {}).toCompletionItem(),
				new MTAFunction(2, "getMarkerCount", "Returns the number of markers that currently exist in the world.", "int", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "setTrafficLightState", "Sets the current traffic light state. This state controls the traffic light colors. For instance, state 1 will cause the north and south traffic lights to be amber, and the ones left and east will turn red.", "bool", [" int state "], {}).toCompletionItem(),
				new MTAFunction(2, "getMarkerIcon", "This function returns the icon name for a marker.", "string", [" marker theMarker "], {}).toCompletionItem(),
				new MTAFunction(2, "isElementWithinMarker", "This function is used to determine if an element is within a marker.", "bool", [" element theElement", "marker theMarker "], {}).toCompletionItem(),
				new MTAFunction(2, "fileCreate", "Creates a new file in a directory of a resource. If there already exists a file with the specified name, it is overwritten with an empty file.", "file", [" string filePath "], {}).toCompletionItem(),
				new MTAFunction(2, "getGravity", "This function returns the current gravity level for the context in which it is called (server or client).This serverside command outputs the serverside gravity level.", "float", [], {}).toCompletionItem(),
				new MTAFunction(2, "getElementChild", "This function returns one of the child elements of a given parent element. The child element is selected by its index (0 for the first child, 1 for the second and so on).", "element", [" element parent", "int index "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementAttachedOffsets", "This function returns the offsets of an element that has been attached to another element using attachElements.Example: This example creates a car with a minigun", "float, float, float, float, float, float", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementRotation", "Retrieve the rotation of elements.", "float float float", [" element theElement [", "string rotOrder = \"default\" ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementData", "This function retrieves element data attached to an element under a certain key.", "var", [" element theElement", "string key [", "inherit = true] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementAttachedTo", "This example defines a console command that outputs the type of the element that the player is attached to.", "element", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "stopObject", "This will allow you to stop an object that is currently moving.", "bool", [" object theobject "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementColShape", "This example creates a marker inside Toreno's house and adds a command to check whether you are standing on it.", "colshape", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementPosition", "This function sets the position of an element to the specified coordinates.This example adds a \"setpos\" command to console, which allows setting of a player's position.This example adds a \"setpos\" command to console, which allows setting of the local player's position.This example enables a player to type /warpto <playername> to warp to them. If the player being warped to is in a vehicle with a free passenger seat, it will warp into the vehicle.", "bool", [" element theElement", "float x", "float y", "float z [", "bool warp = true ] "], {}).toCompletionItem(),
				new MTAFunction(2, "setInteriorSoundsEnabled", "This example disables the dancing club ambient music, without disabling other interiors' ambient sounds.", "bool", [" bool enabled "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementChildrenCount", "This function returns the number of children an element has. Note that only the direct children are counted and not elements that are further down the element tree.", "int", [" element parent "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.width", "This example", "int, int, int", [" string input", "int location [", "bool ambi_is_double = false", "int default_width = 0 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getMarkerType", "This function returns a marker's type.This function creates a default marker at a given position and outputs its type.", "string", [" marker theMarker "], {}).toCompletionItem(),
				new MTAFunction(2, "addPedClothes", "This example adds a 'moto' helmet to a player when he gets on a nrg bike, and removes it when he gets off.", "bool", [" ped thePed", "string clothesTexture", "string clothesModel", "int clothesType "], {}).toCompletionItem(),
				new MTAFunction(2, "getZoneName", "This function allows you to retrieve the zone name of a certain location.Example 1: This example shows you how to return a zone name by doing /loc x y z in the chatbox or just loc x y z in console ( replace x, y and z with the co-ords you wanna check, eg /loc 1200 523 12.3 )", "string", [" float x", "float y", "float z", "[bool citiesonly=false] "], {}).toCompletionItem(),
				new MTAFunction(2, "addVehicleUpgrade", "This function adds an upgrade to an existing vehicle, eg: nos, hyrdraulics.This serverside function allows the user to get an upgrade by typing a command:This client-side script gives vehicles a nitro upgrade whenever they pass through a certain collision shape:", "bool", [" vehicle theVehicle", "int upgrade "], {}).toCompletionItem(),
				new MTAFunction(2, "setMarkerTarget", "This function sets the 'target' for a marker. Only the checkpoint and ring marker types can have a target.", "bool", [" marker theMarker", "float x", "float y", "float z "], {}).toCompletionItem(),
				new MTAFunction(2, "detachTrailerFromVehicle", "This function detaches an already attached trailer from a vehicle.", "bool", [" vehicle theVehicle [", "vehicle theTrailer = nil ] "], {}).toCompletionItem(),
				new MTAFunction(2, "resetRainLevel", "This function resets the rain level of the current weather to its default.This example will make it rain when you enter a vehicle and stop it when you leave the vehicle.", "bool", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "createPed", "Creates a Ped in the GTA world.This example creates an ped when the resource starts:This example creates a ped, and makes it damage proof:", "ped", [" int modelid", "float x", "float y", "float z [", "float rot = 0.0", "bool synced = true ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementMatrix", "-- create a Ped (0, 0, 5, 0) and put the player to 10 m of distance, front to front", "table", [" element theElement [", "bool legacy = true ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getSunSize", "This function is used to get the size of the sun.", "float", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "moveObject", "This function will smoothly move an object from its current position to a specified rotation and position.Example 1: This example moves every object in the game up 100 units in ten seconds.Example 2: This example created a model (of a bed) near a player called someguy, if they exist in the game. It will then move the model towards the player over 3 seconds.Example 3: This example creates a ball moving (in front of CJ's house in Grove Street) using easing functions. Test command is \"/smove\" for instance \"/smove OutBounce\". This example is a serverside code but the same could be done clientside (adapting the command handler)Example 4: This example move a gate with easing.", "bool", [" object theObject", "int time", "float targetx", "float targety", "float targetz", "[ float moverx", "float movery", "float moverz", "string strEasingType", "float fEasingPeriod", "float fEasingAmplitude", "float fEasingOvershoot ] "], {}).toCompletionItem(),
				new MTAFunction(2, "isPedInWater", "This example shows all players that are in water in a list to the player who enters the 'playersInWater' command.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "base64Encode", "This function returns the base64 representation of the encoded block of data", "string", [" string data "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayersInTeam", "This function retrieves all the players of the specified team.Find and kill all the players in the specified team (for example 'killTeam Red').This example will show all players in a team when a player types the 'showTeam TeamName' command.", "table", [" team theTeam "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.gmatch", "This example prints every word in the UTF-8 string", "iterator", [" string input", "string pattern "], {}).toCompletionItem(),
				new MTAFunction(2, "getResourceRootElement", "This example retrieves the current resource's root element and attaches it to an onResourceStart event handler. This causes the event handler to get called only when the current resource is started rather than when any resource is started, thereby reducing unnecessary overhead.", "element", [" [resource theResource=getThisResource()] "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.remove", "This example shows how to remove substrings from strings.", "string", [" string input", "int start = 1 [", "int stop = -1 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "setMarkerColor", "", "bool", [" marker theMarker", "int r", "int g", "int b", "int a "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.fold", "This example shows how to convert a string to lowercase, which can be used to compare with other folded strings.", "string|int utf8.lower ( string|int input )string|int", [" string|int input "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.byte", "This example will print every codepoint in the input string to the server console.This example will print the codepoint of the first character (read: 'M') in the string literal.", "int,...", [" string input [", "int i=1", "int j=1 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getPickupWeapon", "This function retrieves the weapon ID of a weapon pickup.", "int", [" pickup thePickup "], {}).toCompletionItem(),
				new MTAFunction(2, "xmlUnloadFile", "Unloads an XML document from memory.", "bool", [" xmlnode node "], {}).toCompletionItem(),
				new MTAFunction(2, "resetSunSize", "This function is used to reset the size of the sun to its normal size.", "bool", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "setRadarAreaColor", "Sets the color of an existing radar area.", "bool", [" radararea theRadarArea", "int r", "int g", "int b", "int a "], {}).toCompletionItem(),
				new MTAFunction(2, "setRadarAreaFlashing", "This function makes an existing radar area flash in transparency.", "bool", [" radararea theRadarArea", "bool flash "], {}).toCompletionItem(),
				new MTAFunction(2, "getRadarAreaSize", "This function is used for getting the X and Y size of an existing radar area.", "float, float", [" radararea theRadararea "], {}).toCompletionItem(),
				new MTAFunction(2, "createRadarArea", "This function can be used to create custom radar areas on the radar.This example creates a radar area for the King of the hill script, and a colsquare. When the player enters the radar area it flashes, and stops flashing when a player leaves it.", "radararea", [" float startPosX", "float startPosY", "float sizeX", "float sizeY", "[ int r = 255", "int g = 0", "int b = 0", "int a = 255", "element visibleTo = getRootElement() ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerNametagText", "This will allow you to retrieve the name tag a player is currently using.", "string", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "setPickupType", "This function allows changing the type of a pickup to a Weapon, Armour or Health pickup, and allows you to set the health points or the weapon and ammo that the pickup will give.", "bool", [" pickup thePickup", "int theType", "int amount/weapon/model", "[ int ammo ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementDimension", "This function allows you to retrieve the dimension of any element. The dimension determines what/who the element is visible to.", "int", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "forcePlayerMap", "This function is used to forcefully show a player's radar map.OOP Syntax Help! I don't understand this!OOP Syntax Help! I don't understand this!", "bool", [" player thePlayer", "bool forceOn "], {}).toCompletionItem(),
				new MTAFunction(2, "getVersion", "This function gives you various version information about MTA and the operating system.", "table", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "getFPSLimit", "This function retrieves the maximum FPS (Frames per second) that players on the server can run their game at.", "int", [""], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerBlurLevel", "This example adds a command blurlevel with which you can check your current blur level.", "int", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerTeam", "This example finds the team a player is on, and then changes its name.", "team", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "isPedOnFire", "This function checks if the specified ped is on fire or not.This example checks if a random player is on fire, and if so gives him a fire extinguisher.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "isPlayerMapForced", "This function checks if the specified player's radar map has been forced on or not.This example forces a players radar map on for 10 seconds if it hasn't been already.", "bool", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "getResourceFromName", "This extract shows adding of a \"kills\" column to the scoreboard resource. This then sets the gameShowKills variable to true, telling the rest of the script to start outputting kills.This extract shows adding of a \"kills\" column to the scoreboard resource. This then sets the gameShowKills variable to true, telling the rest of the script to start outputting kills.", "call (", [], {}).toCompletionItem(),
				new MTAFunction(2, "isVoiceEnabled", "Added to client side.This function allows you to make the server reveal whether or not voice is currently enabled.This example shows how to forbid use voice for muted (in chat) players", "bool", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "fromJSON", "This function is available client-side in 1.2 and onwards.", "var", [" string json "], {}).toCompletionItem(),
				new MTAFunction(2, "isRadarAreaFlashing", "This function allows detection of whether a radar area is flashing or not.", "bool", [" radararea theRadararea "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedOccupiedVehicleSeat", "This function is now available client side.This function gets the seat that a specific ped is sitting in in a vehicle.", "int", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "setPedAnimation", "This example creates a ped, rotates him, and makes him walk:This example makes the player sit down and remain seated.", "bool", [" ped thePed [", "string block=nil", "string anim=nil", "int time=-1", "bool loop=true", "bool updatePosition=true", "bool interruptable=true", "bool freezeLastFrame=true", "int blendTime=250] "], {}).toCompletionItem(),
				new MTAFunction(2, "detonateSatchels", "This function can be used to detonate a players satchels.", "bool", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerFromName", "This function returns a player element for the player with the name passed to the function.", "player", [" string playerName "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedOccupiedVehicle", "This function gets the vehicle that the ped is currently in or is trying to enter, if any.", "vehicle", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerMoney", "Returns the amount of money a player currently has.When a player types '/checkMoney' this example retrieves the player's money and outputs a message according to the value.", "int/bool", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "setRadarAreaSize", "This function changes the size of an existing radar area.", "bool", [" radararea theRadararea", "float x", "float y "], {}).toCompletionItem(),
				new MTAFunction(2, "getOriginalWeaponProperty", "This function gets the original weapon property of the specified weapons specified weapon type.", "int", [" int weaponID/string weaponName", "string weaponSkill", "string property "], {}).toCompletionItem(),
				new MTAFunction(2, "isPedChoking", "This function checks if the specified ped is choking (coughing) or not. This happens as a result of weapons that produce smoke - smoke grenades, fire extinguisher and the spray can. This example checks if a random player is choking or not, and if so displays a message in the chat box.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementData", "This example allows a player to add a custom tag onto their nickname, and also reverts it back to normal if they wish.", "bool", [" element theElement", "string key", "var value [", "bool synchronize = true ] "], {}).toCompletionItem(),
				new MTAFunction(2, "setPedWeaponSlot", "This function changes the selected weapon slot of a ped.This example allows the player to type the command 'giveweapons', which gives the player a weapon for every slot. Instead of equipping the last given weapon, the script randomly decides which weapon to equip after all the weapons are given.", "bool", [" ped thePed", "int weaponSlot "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerPing", "This function returns the ping of a specified player. The ping is the number of milliseconds that data takes to travel from the player's client to the server or vice versa.This example checks every players ping every 5 seconds and if it's over 500 they get kicked.This example checks the ping of every player entering the 'ping' command and warns him if it's over 100.", "int", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "removePedFromVehicle", "This function removes a ped from a vehicle immediately. This works for drivers and passengers. Note that this removes the ped from the vehicle and puts him in the exact position where the command was initiated.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "fixVehicle", "This function will set a vehicle's health to full and fix its damage model. If you wish to only change the vehicle's health, without affecting its damage model, use setElementHealth.", "bool", [" vehicle theVehicle "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.charpos", "This example takes the second codepoint character and shows the byte-string position and the codepoint character code.This example extracts the first character by calculating the character length with the UTF8 functions and the inbuilt Lua function string.sub, which processes byte strings.", "int, int", [" string input [[", "int charpos = 0 ]", "int offset = 1 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.find", "This example shows how to search for parts of a string.", "string", [" string input", "string pattern [", "int startpos = 1", "boolean plain = false ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getTimers", "This function returns a table of all active timers that the resource that calls it has created. Alternatively, only the timers with a remaining time less than or equal to a certain value can be retrieved.", "table", [" [ theTime = nil ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getOcclusionsEnabled", "This function is used to get \"occlusions enabled\" state.", "bool", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "getPickupAmount", "This function retrieves the amount of health or armor given from a pickup.", "int", [" pickup thePickup "], {}).toCompletionItem(),
				new MTAFunction(2, "getResourceName", "This simple example outputs a message in the console whenever a resource starts, stating the name of the resource.", "string", [" resource res "], {}).toCompletionItem(),
				new MTAFunction(2, "setPedHeadless", "With this function, you can set if a ped has a head or not.This example enables a player to behead themselves, and give them their head back.", "bool", [" ped thePed", "bool headState "], {}).toCompletionItem(),
				new MTAFunction(2, "getRadarAreaColor", "This function can be used to retrieve the current color of a radar area.", "int, int, int, int", [" radararea theRadararea "], {}).toCompletionItem(),
				new MTAFunction(2, "isElementFrozen", "This example binds the \"p\" key to a function to freeze/unfreeze the player's current vehicle.", "bool", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedTotalAmmo", "This function returns an integer that contains the total ammo in a specified ped's weapon. See Weapon Info", "int", [" ped thePed", "[ int weaponSlot = current ] "], {}).toCompletionItem(),
				new MTAFunction(2, "gettok", "This function splits a string using the given separating character and returns one specified substring.This example retrieves the startskin and endskin for spawning a player from a string of two numbers \"a,b\"", "string", [" string text", "int tokenNumber", "string / int separatingCharacter "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerWantedLevel", "This function gets a player's current wanted level. The wanted level is indicated by the amount of stars a player has on the GTA HUD.This example finds which players in the server have a wanted level:This script output your wanted level when you type /wanted.", "int", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "createPickup", "This function creates a pickup element, which is placed in the GTA world and can be picked up to retrieve a health, armour or a weapon. This example creates a pickup after a player dies so that he drops his weapon.This example creates a custom pickup(money) after a player dies and sets it's value.", "pickup", [" float x", "float y", "float z", "int theType", "int amount/weapon/model", "[ int respawnTime = 30000", "int ammo = 50 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getWindVelocity", "This function gets the wind velocity in San Andreas.", "int, int, int", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementAlpha", "This example makes the player invisible.This example lets you toggle invisibility when you write /invis.", "bool", [" element theElement", "int alpha "], {}).toCompletionItem(),
				new MTAFunction(2, "setPedOnFire", "This function can be used to set a ped on fire or extinguish a fire on it.", "bool", [" ped thePed", "bool isOnFire "], {}).toCompletionItem(),
				new MTAFunction(2, "isPlayerNametagShowing", "This function will allow you to determine if a player's name tag is currently showing.", "bool", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "getHeatHaze", "This function will return the current heat haze effect settings.This example outputs current heat haze settings to the chat when player uses command 'get_haze'.", "int, int, int, int, int, int, int, int, bool", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementChildren", "This function is used to retrieve a list of the child elements of a given parent element. Note that it will only return direct children and not elements that are further down the element tree.", "table", [" element parent [", "string theType = nil ] "], {}).toCompletionItem(),
				new MTAFunction(2, "isInsideRadarArea", "This function checks if a 2D position is inside a radar area or not.", "bool", [" radararea theArea", "float posX", "float posY "], {}).toCompletionItem(),
				new MTAFunction(2, "getResourceState", "This function returns the state of a given resource", "string", [" resource theResource "], {}).toCompletionItem(),
				new MTAFunction(2, "countPlayersInTeam", "This function is for returning the number of players in the specified team.This example adds a command in the console to find out how many players are on your team.This example adds a command in the console to find out how many players are on your team, clientsideThis example balances a gamemode, to ensure equal number of players between the \"grove\" and \"ballas\" teams. This could be triggered when a player joins the server, or for all players currently in the server when the gamemode starts.", "int", [" team theTeam "], {}).toCompletionItem(),
				new MTAFunction(2, "givePlayerMoney", "This function adds money to a player's current money amount. To set absolute values, setPlayerMoney can be used.This example gives a player money when using \"givecash\" command.This example gives a player one thousand dollars, as a reward for killing another player.This example Creates money Money (dollar symbol) pickup and gives 30,000 dollars on Pick up hit.", "bool", [" player thePlayer", "int amount "], {}).toCompletionItem(),
				new MTAFunction(2, "xmlDestroyNode", "This function destroys a XML node from the XML node tree.This example will add a command called '/delnode' and it will create an xml file called 'test.xml'.", "bool", [" xmlnode theXMLNode "], {}).toCompletionItem(),
				new MTAFunction(2, "xmlNodeGetAttribute", "This function is used to return an attribute of a node in a configuration file.", "string", [" xmlnode node", "string name "], {}).toCompletionItem(),
				new MTAFunction(2, "setPedStat", "", "bool", [" ped thePed", "int stat", "float value "], {}).toCompletionItem(),
				new MTAFunction(2, "isElementCallPropagationEnabled", "", "bool", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "xmlNodeGetValue", "In this example a sample value is returned from a XML file. This shows an example of a clientside XML file. You can use this to store user preferences and load them the next time the script loads. Almost always, you should have an options GUI for clients to interact with to set these values. Since the XML will change, it should NOT be included in the resource's meta.xml file. MTA will think that file is corrupted and will download it again from the server. Instead, you should create the XML within the script, and then load it within the script on future script runs if it exists.", "string", [" xmlnode theXMLNode "], {}).toCompletionItem(),
				new MTAFunction(2, "getSlotFromWeapon", "This function allows you to identify the weapon slot that a weapon belongs to.", "int", [" int weaponid "], {}).toCompletionItem(),
				new MTAFunction(2, "xmlLoadFile", "This function provides an alternative way to load XML files to getResourceConfig.This function loads an XML file and returns the node by specifying a specific file path, while getResourceConfig allows for loading an XML file from a resource.Print error if something wrong with xml.", "xmlnode", [" string filePath "], {}).toCompletionItem(),
				new MTAFunction(2, "restoreAllWorldModels", "This function allows restoring of all world objects,which were removed with RemoveWorldModel.", "bool", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementModel", "This example destroys a haystack when a player targets it.This example prints out a message when a Shamal or AT-400 is entered by a player.", "int", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementParent", "This example sets the parent of each spawnpoint to a dummy element:", "bool", [" element theElement", "element parent "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedWeapon", "This function tells you which weapon type is in a certain weapon slot of a ped. See Weapon Info", "int", [" ped thePed", "[ int weaponSlot = current ] "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementModel", "This will continually change an object model every 2.5 seconds at the location -1084.52, -1634.81, 76.36 (Truth's farm).", "bool", [" element theElement", "int model "], {}).toCompletionItem(),
				new MTAFunction(2, "getThisResource", "This function retrieves the resource from which the function call was made.", "resource", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "addCommandHandler", "Example 1: This example defines a command handler for the command createmarker. This will create a red marker at the position of the player player who uses it.Example 2: This example makes use of Lua's vararg expression to implement a check_parameters command to count the number of parameters passed, merge them all into a single string and output it. This is also shows you how you can use table.concat to merge all the passed arguments. This is particularly useful when you want to read in a sentence of text passed from the user. Example 3: This example shows using a single function to handle multiple command handlers. This isn't advised for general usage, as it makes code harder to understand, but where multiple command handlers share some logic, it can be a useful way of reducing duplicated code. Generally, it would be preferable to put this shared logic in a separate function instead, as this gives you more control over the flow.Example 1: This example warps the local player to a random nearby location (useful for when a player gets stuck somewhere).", "bool", [" string commandName", "function handlerFunction", "[bool restricted = false", "bool caseSensitive = true] "], {}).toCompletionItem(),
				new MTAFunction(2, "blowVehicle", "This function will blow up a vehicle. This will cause an explosion and will kill the driver and any passengers inside it.This example will blow up every vehicle in the game.This example will blow a player's vehicle when he enters the car, like a carbomb.This script will create an Infernus at the center (0, 0, 3) of San Andreas upon execution.", "bool", [" vehicle vehicleToBlow", "[ bool explode=true ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getCloudsEnabled", "This function will tell you if clouds are enabled or disabled.", "bool", [""], {}).toCompletionItem(),
				new MTAFunction(2, "getPickupType", "This function retrieves the type of a pickup, either a health, armour or weapon pickup.", "int", [" pickup thePickup "], {}).toCompletionItem(),
				new MTAFunction(2, "getTeamName", "This function gets the team name of a team object.", "string", [" team theTeam "], {}).toCompletionItem(),
				new MTAFunction(2, "getWeaponProperty", "This function gets a weapon property of the specified custom weapon (clientside only) or specified player-held weapon (both client and server).", "int", [" int weaponID/string weaponName", "string weaponSkill", "string property "], {}).toCompletionItem(),
				new MTAFunction(2, "getGravity", "This function returns the current gravity level for the context in which it is called (server or client).This serverside command outputs the serverside gravity level.", "float", [], {}).toCompletionItem(),
				new MTAFunction(2, "getResourceConfig", "This function is used to return the root node of a configuration file. Config files must be predefined in a resource's meta file. An alternative way to load XML files is to use xmlLoadFile.This example opens a configuration file and prints the value of the 'attr' attribute of the first 'group' node.", "xmlnode", [" string filePath "], {}).toCompletionItem(),
				new MTAFunction(2, "setOcclusionsEnabled", "This function is used to enable or disable occlusions. Occlusions are used by GTA to enhance performance by hiding objects that are (normally) obscured by certain large buildings. However when removeWorldModel is used they may also have the undesired effect of making parts of the map disappear. Disabling occlusions will fix that.", "bool", [" bool enabled "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementVelocity", "This example adds a function which copies the speed of a random player to another random player. If there are less than 2 players it returns false.", "bool", [" element theElement", "float speedX", "float speedY", "float speedZ "], {}).toCompletionItem(),
				new MTAFunction(2, "setAircraftMaxVelocity", "This function sets the maximum velocity at which aircrafts could fly. Using this function server-side will overwrite the value that was previously set client-side.This example will increase or decrease the max velocity by pressing numpad keys + or -.This example will double the max velocity for everyone when the resource is started.", "bool", [" float velocity "], {}).toCompletionItem(),
				new MTAFunction(2, "setGravity", "This function sets the server's gravity level.", "bool", [" float level "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedArmor", "This function returns the current armor of the specified ped.This example defines a \"showarmor\" console command that shows the player that executes it how much armor he has.", "float", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "fetchRemote", "This function allows you to post and receive data from HTTP servers. The calls are asynchronous so you do not get an immediate result from the call, instead a callback function you specify is called when the download completes.Example sending email via a web service (adopted from examples on https://documentation.mailgun.com/user_manual.html)", "bool", [" string URL[", "string queueName = \"default\" ][", "int connectionAttempts = 10", "int connectTimeout = 10000 ]", "function callbackFunction", "[ string postData = \"\"", "bool postIsBinary = false", "[ arguments... ] ] "], {}).toCompletionItem(),
				new MTAFunction(2, "executeCommandHandler", "This example defines a command handler for the command createmarker (which creates a red marker at the caller's position). It then creates a second command handler createmarker2 which will call the first one.", "bool", [" string commandName", "player thePlayer", "[ string args ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getPlayerTeam", "This example finds the team a player is on, and then changes its name.", "team", [" player thePlayer "], {}).toCompletionItem(),
				new MTAFunction(2, "getElementID", "This function gets the ID of an element. This is the \"id\" attribute of the element and is a string, NOT a number like a model ID, weapons ID or similar.", "string", [" element theElement "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementAttachedOffsets", "This function updates the offsets of an element that has been attached to another element using attachElements.Example: This example creates a car with a minigun", "bool", [" element theElement", "[ float xPosOffset", "float yPosOffset", "float zPosOffset", "float xRotOffset", "float yRotOffset", "float zRotOffset ]"], {}).toCompletionItem(),
				new MTAFunction(2, "resetMoonSize", "This function is used to reset the size of the moon to its normal size.", "bool", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "setWeaponAmmo", "Sets the ammo to a certain amount for a specified weapon (if they already have it), regardless of current ammo.Set the ammo of a custom weapon which was created through createWeapon. By default, a custom weapon has 9999 ammo (which means infinite ammo).", "bool", [" player thePlayer", "int weapon", "int totalAmmo", "[int ammoInClip = 0] "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedWeaponSlot", "This function gets a ped's selected weapon slot.", "int", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "getResourceDynamicElementRoot", "This function retrieves the dynamic element root of a specified resource. The dynamic element root is the parent of elements that are created by scripts (e.g. with createObject) unless they specify a different parent.", "element", [" resource theResource "], {}).toCompletionItem(),
				new MTAFunction(2, "xmlNodeSetAttribute", "This function is used to edit an attribute of a node in a configuration file.In a gamemode, we want a command to change the marker color in the configuration file and remove a deprecated attribute.", "bool", [" xmlnode node", "string name", "string/float value "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.width", "This example shows the difference when ambi_is_double is set to false or true.", "int", [" string|int input [", "bool ambi_is_double = false", "int default_width = 0 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "getWeaponNameFromID", "This function allows you to retrieve the name of a weapon from an ID. Note it also allows you to retrieve the name of other methods of death, such as Fall and Rammed.This example displays a death message in the format of \"* Killer killed dead (Weapon)\"", "string", [" int id "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.next", "This example shows how to traverse a UTF-8 string the proper way without running into problems as in byte strings.", "int, int", [" string input [[", "int charpos = 0 ]", "int offset = 1 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "doesPedHaveJetPack", "Checks whether or not a ped currently has a jetpack.Example 1: This examples adds a \"jetpack\" console command, which gives or removes a jetpack from the player.Example 2: This example provides a check to see if players have a jetpack when they enter a particular marker.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "getWeaponIDFromName", "This function will obtain the ID of a particular weapon from its name.This example will give the player the weapon they specify 20 ammo whenever they type \"weapon name\" into the console.", "int", [" string name "], {}).toCompletionItem(),
				new MTAFunction(2, "isPedFrozen", "", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "isPedInVehicle", "Checks whether or not a given ped is currently in a vehicle. This also returns true if they're trying to enter a vehicle.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "getMoonSize", "This function returns the moon size. Using this function server-side will return the server-side value, not necessarily the same that is set client-side.This example will tell the moon size to everyone when the resource is started.", "int", [""], {}).toCompletionItem(),
				new MTAFunction(2, "attachElements", "This function attaches one element to another, so that the first one follows the second whenever it moves. Example 1: This example attaches a marker to the player who steals the Mr. Whoopee:Example 3: This function adds a tank on top of a player (for extra defense), clientside. This means it will be invisible to other players.", "bool", [" element theElement", "element theAttachToElement", "[ float xPosOffset = 0", "float yPosOffset = 0", "float zPosOffset = 0", "float xRotOffset = 0", "float yRotOffset = 0", "float zRotOffset = 0 ] "], {}).toCompletionItem(),
				new MTAFunction(2, "isPedDead", "This function checks if the specified ped is dead or not.This example allows a player to use the command 'amidead' to see if they are dead or not.", "bool", [" ped thePed "], {}).toCompletionItem(),
				new MTAFunction(2, "getGameSpeed", "This example adds a 'gamespeed' console command that prints the game speed to the chatbox.", "float", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "getPedClothes", "This example prints the model and texture of the current clothing on the player who enters the \"clothes\" command. For example: \"clothes 3\" for the shoes.", "string string", [" ped thePed", "int clothesType "], {}).toCompletionItem(),
				new MTAFunction(2, "setElementDoubleSided", "This example shows how to set the double-sidedness of an object in a map file.", "bool", [" element theElement", "bool enable "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.reverse", "This example shows how to reverse a UTF-8 string.", "string", [" string input "], {}).toCompletionItem(),
				new MTAFunction(2, "getJetpackMaxHeight", "This function gets the maximum height at which your jetpack can fly without failing to go higher.This example returns the max jetpack height to a player if they use the command 'jetpackmaxheight'.", "float", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "utf8.title", "This example shows how to convert a string to uppercase.", "string utf8.upper ( string|int input )string", [" string|int input "], {}).toCompletionItem(),
				new MTAFunction(2, "attachTrailerToVehicle", "This function attaches a trailer type vehicle to a trailer-towing-type vehicle.", "bool", [" vehicle theVehicle", "vehicle theTrailer "], {}).toCompletionItem(),
				new MTAFunction(2, "setPedWeaponSlot", "This function changes the selected weapon slot of a ped.This example allows the player to type the command 'giveweapons', which gives the player a weapon for every slot. Instead of equipping the last given weapon, the script randomly decides which weapon to equip after all the weapons are given.", "bool", [" ped thePed", "int weaponSlot "], {}).toCompletionItem(),
				new MTAFunction(2, "getTeamFromName", "This function finds a team object by the team's name.", "team", [" string teamName "], {}).toCompletionItem(),
				new MTAFunction(2, "getTeamFriendlyFire", "This function tells you if friendly fire is turned on for the specified team.", "bool", [" team theTeam "], {}).toCompletionItem(),
				new MTAFunction(2, "getMinuteDuration", "Tells you how long an ingame minute takes in real-world milliseconds. The default GTA value is 1000.", "int", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "resetHeatHaze", "This function restores the default heat haze.", "bool", [], {}).toCompletionItem(),
				new MTAFunction(2, "getTrafficLightState", "Gets the current traffic light state. This state controls the traffic light colors. For instance, state 1 will cause the north and south traffic lights to be amber, and the ones left and east will turn red.", "int", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "resetSkyGradient", "This function allows restoring of a changed sky gradient as a result of setSkyGradient.", "bool", [], {}).toCompletionItem(),
				new MTAFunction(2, "setCloudsEnabled", "This function will enable or disable clouds. This is useful for race maps which are placed high up as clouds can cause low FPS.This example Disables clouds for all players", "bool", [" bool enabled "], {}).toCompletionItem(),
				new MTAFunction(2, "getSkyGradient", "This function will return the current sky color.", "int, int, int, int, int, int", [" "], {}).toCompletionItem(),
				new MTAFunction(2, "setWeaponProperty", "This function sets the weapon property of the specified weapons specified weapon type. See lower down the page for documentation related to weapon creation.", "bool", [" int weaponID/string weaponName", "string weaponSkill", "string property", "int/float theValue "], {}).toCompletionItem(),
				new MTAFunction(2, "getRootElement", "Example 1: This example displays a chat message to all users.", "", [], {}).toCompletionItem(),
			];
		}
	});
}
